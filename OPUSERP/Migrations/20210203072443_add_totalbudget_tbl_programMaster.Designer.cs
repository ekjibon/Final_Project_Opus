// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OPUSERP.Data;

namespace OPUSERP.Migrations
{
    [DbContext(typeof(ERPDbContext))]
    [Migration("20210203072443_add_totalbudget_tbl_programMaster")]
    partial class add_totalbudget_tbl_programMaster
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.AccountingSettings.AccountGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("VGrpTypeCode");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("effectiveDate");

                    b.Property<string>("groupCode")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("groupName")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("groupNameBN")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("isCashBank")
                        .HasMaxLength(3);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("natureId");

                    b.Property<int?>("parentGroupId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("natureId");

                    b.HasIndex("parentGroupId");

                    b.ToTable("AccountGroup","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.AccountingSettings.AccountMode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("modeName")
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("AccountMode","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.AccountingSettings.BalanceSheetDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("ledgerId");

                    b.Property<int?>("noteMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("ledgerId");

                    b.HasIndex("noteMasterId");

                    b.ToTable("BalanceSheetDetails","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.AccountingSettings.BalanceSheetMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("accountGroupId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("fsLineFor")
                        .HasMaxLength(3);

                    b.Property<string>("fsLineName")
                        .HasMaxLength(350);

                    b.Property<int?>("isDelete");

                    b.Property<string>("noteNo")
                        .HasMaxLength(30);

                    b.Property<int?>("serialNo");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("accountGroupId");

                    b.ToTable("BalanceSheetMaster","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.AccountingSettings.BalanceSheetProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("balanceSheetDetailsId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("currentYear");

                    b.Property<decimal?>("currentYearAmount");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isLocked");

                    b.Property<int?>("previousYear");

                    b.Property<decimal?>("previousYearAmount");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("balanceSheetDetailsId");

                    b.ToTable("BalanceSheetProcess","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.AccountingSettings.GroupNature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<string>("natureName")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("natureNameBN")
                        .HasColumnType("nvarchar(350)");

                    b.Property<int?>("printOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("GroupNature","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.AccountingSettings.Ledger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("accountCode")
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("accountName")
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("aliasName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("companyId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("currencyId");

                    b.Property<DateTime?>("effectiveDate");

                    b.Property<int?>("groupId");

                    b.Property<int?>("haveSubLedger");

                    b.Property<int?>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<string>("ledgerType")
                        .HasMaxLength(30);

                    b.Property<int?>("specialBranchUnitId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("currencyId");

                    b.HasIndex("groupId");

                    b.HasIndex("specialBranchUnitId");

                    b.ToTable("Ledger","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.AccountingSettings.LedgerRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("ledgerId");

                    b.Property<int?>("subLedgerId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("ledgerId");

                    b.HasIndex("subLedgerId");

                    b.ToTable("LedgerRelation","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.AccountingSettings.NoteMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("balanceSheetMasterId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("nmSerialNo");

                    b.Property<string>("noteHead")
                        .HasMaxLength(350);

                    b.Property<string>("noteName")
                        .HasMaxLength(350);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("balanceSheetMasterId");

                    b.ToTable("NoteMaster","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.AccountingSettings.OpeningBalance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("amount");

                    b.Property<DateTime?>("balanceUpTo");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("ledgerRelationId");

                    b.Property<int?>("transectionModeId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("ledgerRelationId");

                    b.HasIndex("transectionModeId");

                    b.ToTable("OpeningBalance","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.AccountingSettings.ProfitAndLossAccountDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("ledgerId");

                    b.Property<int?>("profitAndLossAccountMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("ledgerId");

                    b.HasIndex("profitAndLossAccountMasterId");

                    b.ToTable("ProfitAndLossAccountDetails","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.AccountingSettings.ProfitAndLossAccountMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("accountGroupId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("noteName")
                        .HasMaxLength(350);

                    b.Property<string>("noteNo")
                        .HasMaxLength(30);

                    b.Property<int?>("serialNo");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("accountGroupId");

                    b.ToTable("ProfitAndLossAccountMaster","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.AccountingSettings.ProfitAndLossAccountProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("currentYear");

                    b.Property<decimal?>("currentYearAmount");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isLocked");

                    b.Property<int?>("previousYear");

                    b.Property<decimal?>("previousYearAmount");

                    b.Property<int?>("profitAndLossAccountDetailsId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("profitAndLossAccountDetailsId");

                    b.ToTable("ProfitAndLossAccountProcess","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.AccountingSettings.SubLedger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("accountCode");

                    b.Property<string>("accountName");

                    b.Property<string>("aliasName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("ledgerId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("ledgerId");

                    b.ToTable("SubLedger","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.FDR.BankChargeMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName")
                        .HasMaxLength(300);

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(30);

                    b.Property<string>("AccountType")
                        .HasMaxLength(10);

                    b.Property<string>("Status")
                        .HasMaxLength(10);

                    b.Property<int?>("bankBranchDetailsId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("ledgerRelationId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("bankBranchDetailsId");

                    b.HasIndex("ledgerRelationId");

                    b.ToTable("BankChargeMaster","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.FDR.FDRCalFormula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeName");

                    b.Property<string>("TypeText");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("fDRCalFormulas");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.FDR.FDREncashment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("accountName");

                    b.Property<decimal?>("advanceTax");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("diffAmount");

                    b.Property<DateTime?>("encashDate");

                    b.Property<string>("encashStatus");

                    b.Property<decimal?>("exciseDuty");

                    b.Property<int?>("fDRInvestmentDetailId");

                    b.Property<string>("interestBankAccountNumber");

                    b.Property<int?>("interestBankId");

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("percentDiff");

                    b.Property<decimal?>("prematurePercent");

                    b.Property<string>("principleBankAccountNumber");

                    b.Property<int?>("principleBankId");

                    b.Property<decimal?>("provisionAmount");

                    b.Property<decimal?>("receiveAmount");

                    b.Property<string>("remarks");

                    b.Property<int?>("status");

                    b.Property<decimal?>("totalAmount");

                    b.Property<int?>("typeOfDiff");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("fDRInvestmentDetailId");

                    b.HasIndex("interestBankId");

                    b.HasIndex("principleBankId");

                    b.ToTable("FDREncashment","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.FDR.FDRInvesmentMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FDRStatus");

                    b.Property<DateTime?>("FTDate");

                    b.Property<string>("FTInstructionNo");

                    b.Property<string>("FTSendTo");

                    b.Property<int?>("IsJournal");

                    b.Property<int?>("IsRenew");

                    b.Property<string>("NOI");

                    b.Property<int?>("ParentID");

                    b.Property<string>("SOF");

                    b.Property<int?>("Status");

                    b.Property<string>("bankAccountNo");

                    b.Property<string>("bankBranchName");

                    b.Property<int?>("bankId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("bankId");

                    b.ToTable("FDRInvesment","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.FDR.FDRInvestmentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount");

                    b.Property<int>("ApprovalStatus");

                    b.Property<string>("ChequeNo");

                    b.Property<string>("ChequeUpload");

                    b.Property<string>("DestinationBranch");

                    b.Property<string>("DestinationType");

                    b.Property<string>("FormulaType");

                    b.Property<int?>("LinkledgerRelationId");

                    b.Property<DateTime?>("MaturityDate");

                    b.Property<string>("MaturityStatus");

                    b.Property<string>("NPBAddress");

                    b.Property<DateTime?>("OpenDate");

                    b.Property<int?>("ParentFDRID");

                    b.Property<decimal?>("Rate");

                    b.Property<int?>("ReceiveLinkLedgerId");

                    b.Property<string>("RefNo");

                    b.Property<string>("Tenure");

                    b.Property<string>("TenureType");

                    b.Property<decimal?>("TotalInterest");

                    b.Property<string>("UploadDoc");

                    b.Property<string>("UploadMemo");

                    b.Property<int?>("bankId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("encashBankCharge");

                    b.Property<int?>("encashRecLedgerRelId");

                    b.Property<int?>("fDRInvesmentMasterId");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("LinkledgerRelationId");

                    b.HasIndex("ReceiveLinkLedgerId");

                    b.HasIndex("bankId");

                    b.HasIndex("encashRecLedgerRelId");

                    b.HasIndex("fDRInvesmentMasterId");

                    b.ToTable("FDRInvestmentDetail","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.MasterData.CostCentre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("aliesName")
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("centreCode")
                        .HasMaxLength(100);

                    b.Property<string>("centreName")
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("companyId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("departmentId");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("CostCentre","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.MasterData.FundSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("companyId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("sourceName")
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("FundSource","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.MasterData.Signature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("active");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("signatureSlNo");

                    b.Property<int?>("signatureTypeId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("signatureTypeId");

                    b.ToTable("Signature","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.MasterData.SignatureType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("signatureTypeName")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("SignatureType","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.MasterData.VoucherType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("abbreviation")
                        .HasMaxLength(100);

                    b.Property<string>("aliasName")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("voucherTypeName")
                        .HasMaxLength(100);

                    b.Property<string>("voucherTypeNameBN")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("VoucherType","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.NonPoTransaction.DailyBillReceive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountID");

                    b.Property<DateTime?>("ApvDate");

                    b.Property<DateTime?>("BillReceiveDate");

                    b.Property<DateTime?>("BillReturnDate");

                    b.Property<int?>("BillStatusId");

                    b.Property<DateTime?>("ChalanDate");

                    b.Property<string>("Challan");

                    b.Property<DateTime?>("CheckReceiveDate");

                    b.Property<string>("ChequeNo");

                    b.Property<decimal?>("Commission");

                    b.Property<int?>("CreditPeriod");

                    b.Property<decimal?>("Discount");

                    b.Property<string>("DivisionName");

                    b.Property<string>("ExpectedFindate");

                    b.Property<decimal?>("GBamount");

                    b.Property<string>("InvoiceNo");

                    b.Property<int?>("IsClaimed");

                    b.Property<int?>("IsPo");

                    b.Property<int?>("ItemId");

                    b.Property<int?>("NoReturn");

                    b.Property<int?>("NoVat");

                    b.Property<int?>("NonDepartmentId");

                    b.Property<decimal?>("Other");

                    b.Property<string>("PO");

                    b.Property<decimal?>("POAMOUNT");

                    b.Property<DateTime?>("PaymentDate");

                    b.Property<string>("PaymentType");

                    b.Property<string>("PoDate");

                    b.Property<string>("PoNo");

                    b.Property<string>("ProcessNo");

                    b.Property<DateTime?>("ReceiveDepDate");

                    b.Property<string>("ReqDept");

                    b.Property<int?>("ResposneemployeeInfoId");

                    b.Property<string>("ReturnComments");

                    b.Property<string>("ReturnProcessNo");

                    b.Property<string>("SLNo");

                    b.Property<DateTime?>("SentToDepDate");

                    b.Property<decimal?>("TAXPayable");

                    b.Property<decimal?>("Total");

                    b.Property<string>("UserDeptCode");

                    b.Property<decimal?>("VATCurrent");

                    b.Property<decimal?>("VATPayable");

                    b.Property<decimal?>("Vat");

                    b.Property<DateTime?>("VendorPayReceiveDate");

                    b.Property<decimal?>("VoucherAmount");

                    b.Property<DateTime?>("VoucherDate");

                    b.Property<string>("VoucherNo");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeInfoId");

                    b.Property<int?>("isClaimable");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("ischallan");

                    b.Property<string>("paidStatus");

                    b.Property<int?>("subid");

                    b.Property<int?>("supplierId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("vatNumber");

                    b.Property<string>("vendorstatus");

                    b.Property<int?>("voucherMasterId");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("NonDepartmentId");

                    b.HasIndex("ResposneemployeeInfoId");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("supplierId");

                    b.HasIndex("voucherMasterId");

                    b.ToTable("DailyBillReceive","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.NonPoTransaction.RateType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RateTypeName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("RateType","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.NonPoTransaction.VatTaxRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("rate");

                    b.Property<int?>("rateTypeId");

                    b.Property<int?>("taxYearId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("rateTypeId");

                    b.HasIndex("taxYearId");

                    b.ToTable("VatTaxRate","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.Voucher.AutoVoucherDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("autoVoucherMasterId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("ledgerRelationId");

                    b.Property<int?>("transectionModeId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("autoVoucherMasterId");

                    b.HasIndex("ledgerRelationId");

                    b.HasIndex("transectionModeId");

                    b.ToTable("AutoVoucherDetail","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.Voucher.AutoVoucherMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("autoVoucherNameId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description")
                        .HasMaxLength(500);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("projectId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("voucherTypeId");

                    b.HasKey("Id");

                    b.HasIndex("autoVoucherNameId");

                    b.HasIndex("projectId");

                    b.HasIndex("voucherTypeId");

                    b.ToTable("AutoVoucherMaster","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.Voucher.AutoVoucherName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("autoVoucherName")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("shortName")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("AutoVoucherName","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.Voucher.CostCentreAllocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("costCentreId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("voucherDetailId");

                    b.HasKey("Id");

                    b.HasIndex("costCentreId");

                    b.HasIndex("voucherDetailId");

                    b.ToTable("CostCentreAllocation","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.Voucher.DeleteCostCentreAllocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("costCentreId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("voucherDetailId");

                    b.HasKey("Id");

                    b.ToTable("DeleteCostCentreAllocation","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.Voucher.DeleteVoucherDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("accountName")
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isPrincAcc");

                    b.Property<int?>("ledgerRelationId");

                    b.Property<int?>("transectionModeId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("voucherDetailId");

                    b.Property<int?>("voucherMasterId");

                    b.HasKey("Id");

                    b.ToTable("DeleteVoucherDetail","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.Voucher.DeleteVoucherMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("companyId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("deletedAt");

                    b.Property<string>("deletedBy")
                        .HasMaxLength(100);

                    b.Property<int?>("fiscalYearId");

                    b.Property<int?>("fundSourceId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isPosted");

                    b.Property<string>("refNo")
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("remarks")
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("specialBranchUnitId");

                    b.Property<int?>("taxYearId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("voucherAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("voucherDate")
                        .HasColumnType("Date");

                    b.Property<int?>("voucherMasterId");

                    b.Property<string>("voucherNo")
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("voucherTypeId");

                    b.HasKey("Id");

                    b.HasIndex("voucherTypeId");

                    b.ToTable("DeleteVoucherMaster","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.Voucher.TransectionMode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("modeName")
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("TransectionMode","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.Voucher.VoucherApproveLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks");

                    b.Property<int?>("statusId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("voucherMasterId");

                    b.HasKey("Id");

                    b.ToTable("VoucherApproveLog","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.Voucher.VoucherDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("accountName")
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isPrincAcc");

                    b.Property<int>("ledgerRelationId");

                    b.Property<int?>("specialBranchUnitId");

                    b.Property<int?>("transectionModeId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("voucherId");

                    b.HasKey("Id");

                    b.HasIndex("ledgerRelationId");

                    b.HasIndex("specialBranchUnitId");

                    b.HasIndex("transectionModeId");

                    b.HasIndex("voucherId");

                    b.ToTable("VoucherDetail","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.Voucher.VoucherMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("companyId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("fiscalYearId");

                    b.Property<int?>("fundSourceId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isPosted");

                    b.Property<int?>("projectId");

                    b.Property<string>("refNo")
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("remarks")
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("taxYearId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("voucherAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("voucherDate")
                        .HasColumnType("Date");

                    b.Property<string>("voucherNo")
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("voucherTypeId");

                    b.HasKey("Id");

                    b.HasIndex("fiscalYearId");

                    b.HasIndex("fundSourceId");

                    b.HasIndex("projectId");

                    b.HasIndex("taxYearId");

                    b.HasIndex("voucherTypeId");

                    b.ToTable("VoucherMaster","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.Voucher.VoucherSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("bankAccountLedgerId");

                    b.Property<int?>("cashAccountLedgerId");

                    b.Property<int>("companyId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("paymentModeId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("voucherTypeId");

                    b.HasKey("Id");

                    b.HasIndex("bankAccountLedgerId");

                    b.HasIndex("cashAccountLedgerId");

                    b.HasIndex("companyId");

                    b.HasIndex("paymentModeId");

                    b.ToTable("VoucherSetting","ACCOUNT");
                });

            modelBuilder.Entity("OPUSERP.Budget.Data.Entity.BudgetBranchAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("addressTypeId");

                    b.Property<string>("blockSector");

                    b.Property<int?>("budgetBranchId");

                    b.Property<int?>("countryId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("districtId");

                    b.Property<int?>("divisionId");

                    b.Property<string>("houseVillage");

                    b.Property<int?>("isDelete");

                    b.Property<string>("postCode");

                    b.Property<string>("postOffice");

                    b.Property<int?>("thanaId");

                    b.Property<string>("union");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("addressTypeId");

                    b.HasIndex("budgetBranchId");

                    b.HasIndex("countryId");

                    b.HasIndex("districtId");

                    b.HasIndex("divisionId");

                    b.HasIndex("thanaId");

                    b.ToTable("BudgetBranchAddress","Budget");
                });

            modelBuilder.Entity("OPUSERP.Budget.Data.Entity.BudgetDisbursementDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("budgetDisbursementMasterId");

                    b.Property<int?>("budgetHeadId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("budgetDisbursementMasterId");

                    b.HasIndex("budgetHeadId");

                    b.ToTable("BudgetDisbursementDetail","Budget");
                });

            modelBuilder.Entity("OPUSERP.Budget.Data.Entity.BudgetDisbursementMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("budgetBranchId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("disburseBy");

                    b.Property<DateTime?>("disburseDate");

                    b.Property<string>("disburseNo")
                        .HasMaxLength(150);

                    b.Property<int?>("fiscalYearId");

                    b.Property<decimal?>("grandTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("status");

                    b.Property<int?>("type");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("budgetBranchId");

                    b.HasIndex("fiscalYearId");

                    b.ToTable("BudgetDisbursementMaster","Budget");
                });

            modelBuilder.Entity("OPUSERP.Budget.Data.Entity.BudgetHead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("budgetSubHeadId");

                    b.Property<string>("code");

                    b.Property<string>("codeBN");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<string>("nameBN");

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("budgetSubHeadId");

                    b.ToTable("BudgetHead","Budget");
                });

            modelBuilder.Entity("OPUSERP.Budget.Data.Entity.BudgetHeadDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("budgetHeadId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("ledgerId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("budgetHeadId");

                    b.HasIndex("ledgerId");

                    b.ToTable("BudgetHeadDetail","Budget");
                });

            modelBuilder.Entity("OPUSERP.Budget.Data.Entity.BudgetMainHead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("code");

                    b.Property<string>("codeBN");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<string>("nameBN");

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("BudgetMainHead","Budget");
                });

            modelBuilder.Entity("OPUSERP.Budget.Data.Entity.BudgetRequsitionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("budgetHeadId");

                    b.Property<int?>("budgetRequsitionMasterId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("eighthMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("eleventhMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("fifthMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("firstMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("fourthMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("ninethMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("secondMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("seventhMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("sixthMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("subTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("tenthMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("thirdMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("twelvethMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("budgetHeadId");

                    b.HasIndex("budgetRequsitionMasterId");

                    b.ToTable("BudgetRequsitionDetail","Budget");
                });

            modelBuilder.Entity("OPUSERP.Budget.Data.Entity.BudgetRequsitionDetailFin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("budgetHeadId");

                    b.Property<int?>("budgetRequsitionMasterId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("eighthMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("eleventhMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("fifthMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("firstMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("fourthMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("ledgerRelationId");

                    b.Property<decimal?>("ninethMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("partnerId");

                    b.Property<decimal?>("secondMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("seventhMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("sixthMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("subTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("tenthMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("thirdMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("twelvethMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("budgetHeadId");

                    b.HasIndex("budgetRequsitionMasterId");

                    b.HasIndex("ledgerRelationId");

                    b.HasIndex("partnerId");

                    b.ToTable("BudgetRequsitionDetailFin","Budget");
                });

            modelBuilder.Entity("OPUSERP.Budget.Data.Entity.BudgetRequsitionMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RequsitionBy");

                    b.Property<int?>("budgetBranchId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("fiscalYearId");

                    b.Property<decimal?>("grandTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isProcess");

                    b.Property<DateTime?>("requsitionDate");

                    b.Property<string>("requsitionNo")
                        .HasMaxLength(150);

                    b.Property<int?>("status");

                    b.Property<int?>("type");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("budgetBranchId");

                    b.HasIndex("fiscalYearId");

                    b.ToTable("BudgetRequsitionMaster","Budget");
                });

            modelBuilder.Entity("OPUSERP.Budget.Data.Entity.BudgetRequsitionMasterFin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("EndDate");

                    b.Property<int?>("RequsitionBy");

                    b.Property<DateTime?>("StartDate");

                    b.Property<int?>("budgetBranchId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("fiscalYearId");

                    b.Property<decimal?>("grandTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isProcess");

                    b.Property<DateTime?>("requsitionDate");

                    b.Property<string>("requsitionNo")
                        .HasMaxLength(150);

                    b.Property<int?>("status");

                    b.Property<int?>("type");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("budgetBranchId");

                    b.HasIndex("fiscalYearId");

                    b.ToTable("BudgetRequsitionMasterFin","Budget");
                });

            modelBuilder.Entity("OPUSERP.Budget.Data.Entity.BudgetSubHead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("budgetMainHeadId");

                    b.Property<string>("code");

                    b.Property<string>("codeBN");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<string>("nameBN");

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("budgetMainHeadId");

                    b.ToTable("BudgetSubHead","Budget");
                });

            modelBuilder.Entity("OPUSERP.Budget.Data.Entity.FiscalYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("aliasName")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("bookStartFrom");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("lockMonth");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("yearCaption")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("yearEndOn");

                    b.Property<string>("yearName")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("yearStartFrom");

                    b.Property<int?>("yearStatus");

                    b.HasKey("Id");

                    b.ToTable("FiscalYear","Budget");
                });

            modelBuilder.Entity("OPUSERP.Budget.Data.Entity.HOBudgetRequsitionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("budgetHeadId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("eighthMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("eleventhMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("fifthMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("firstMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("fourthMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("hOBudgetRequsitionMasterId");

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("ninethMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("secondMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("seventhMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("sixthMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("subTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("tenthMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("thirdMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("twelvethMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("budgetHeadId");

                    b.HasIndex("hOBudgetRequsitionMasterId");

                    b.ToTable("HOBudgetRequsitionDetail","Budget");
                });

            modelBuilder.Entity("OPUSERP.Budget.Data.Entity.HOBudgetRequsitionMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RequsitionBy");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("fiscalYearId");

                    b.Property<decimal?>("grandTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("requsitionDate");

                    b.Property<string>("requsitionNo")
                        .HasMaxLength(150);

                    b.Property<int?>("status");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("fiscalYearId");

                    b.ToTable("HOBudgetRequsitionMaster","Budget");
                });

            modelBuilder.Entity("OPUSERP.Budget.Data.Entity.UnitOfTaka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UnitName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("status");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("value");

                    b.HasKey("Id");

                    b.ToTable("UnitOfTaka","Budget");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Bulk.BulkHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime>("date");

                    b.Property<int?>("employeeId");

                    b.Property<int?>("groupId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("number");

                    b.Property<string>("text");

                    b.Property<int>("type");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("BulkHistory","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Bulk.MemberGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("MemberGroup","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Bulk.RlnMemberGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("memberGroupId");

                    b.Property<string>("type");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("memberGroupId");

                    b.ToTable("RlnMemberGroup","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Event.EventCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("EventCategory","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Event.EventInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("amount");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<DateTime?>("deadline");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("endTime");

                    b.Property<int?>("eventCategoryId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("participantCategory");

                    b.Property<int?>("participantLimit");

                    b.Property<int?>("paymentHeadId");

                    b.Property<string>("startTime");

                    b.Property<string>("status");

                    b.Property<string>("title");

                    b.Property<string>("type");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("url");

                    b.Property<string>("venue");

                    b.HasKey("Id");

                    b.HasIndex("eventCategoryId");

                    b.HasIndex("paymentHeadId");

                    b.ToTable("EventInformation","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Event.EventParticipantType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("eventInformationId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("participantTypeId");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("eventInformationId");

                    b.HasIndex("participantTypeId");

                    b.ToTable("EventParticipantType","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Event.EventPerticipantHead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("eventInformationId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("participantHeadId");

                    b.Property<decimal?>("price");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("eventInformationId");

                    b.HasIndex("participantHeadId");

                    b.ToTable("EventPerticipantHead","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Event.EventRegister", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("count");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeId");

                    b.Property<int?>("eventInformationId");

                    b.Property<int?>("eventPerticipantHeadId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks");

                    b.Property<int?>("status");

                    b.Property<string>("transectionId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("eventInformationId");

                    b.HasIndex("eventPerticipantHeadId");

                    b.ToTable("EventRegister","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Event.ParticipantHead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ParticipantHead","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Event.ParticipantType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ParticipantType","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Finance.Balance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<double>("due");

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<double>("paid");

                    b.Property<int?>("paymentHeadId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("paymentHeadId");

                    b.ToTable("Balance","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Finance.Collection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("amount");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("paymentDate");

                    b.Property<int?>("paymentHeadId");

                    b.Property<string>("period");

                    b.Property<string>("remarks");

                    b.Property<string>("status");

                    b.Property<int?>("trMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("verifyDate");

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("paymentHeadId");

                    b.HasIndex("trMasterId");

                    b.ToTable("Collection","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Finance.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("amount");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("paymentDate");

                    b.Property<DateTime?>("paymentDeadline");

                    b.Property<int?>("paymentHeadId");

                    b.Property<string>("period");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("paymentHeadId");

                    b.ToTable("Invoice","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Finance.PaymentLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("adminFeedBack");

                    b.Property<double>("amount");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("paymentType");

                    b.Property<string>("remarks");

                    b.Property<int>("status");

                    b.Property<string>("trNumber");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("url");

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("PaymentLog","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Finance.TrMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("adminFeedBack");

                    b.Property<decimal?>("amount");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("paymentType");

                    b.Property<string>("remarks");

                    b.Property<int>("status");

                    b.Property<string>("trNumber");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("url");

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("TrMaster","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Forum.MemberComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<string>("details");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("memberId");

                    b.Property<int?>("topicId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("memberId");

                    b.HasIndex("topicId");

                    b.ToTable("MemberComment","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Forum.SponsorShip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("companyName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<string>("details");

                    b.Property<int?>("isDelete");

                    b.Property<string>("link");

                    b.Property<string>("sponsorInfo");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("SponsorShip","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Forum.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<string>("details");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("memberId");

                    b.Property<int?>("status");

                    b.Property<string>("topic");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("memberId");

                    b.ToTable("Topic","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Gallery.GalleryContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("caption");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("galleryTitleId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("url");

                    b.HasKey("Id");

                    b.HasIndex("galleryTitleId");

                    b.ToTable("GalleryContent","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Gallery.GalleryTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<string>("description");

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks");

                    b.Property<string>("title");

                    b.Property<int>("type");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("GalleryTitle","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Hall.HallInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("floor");

                    b.Property<string>("hallName");

                    b.Property<string>("hallNameBn");

                    b.Property<int?>("isDelete");

                    b.Property<int>("seatCapacity");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("hallInfos");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Hall.HallRentalApplicationInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("applicantAddress");

                    b.Property<string>("applicantName");

                    b.Property<string>("applicantOrganization");

                    b.Property<string>("applicantSignUrl");

                    b.Property<string>("chiefGuest");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("hallInfoId");

                    b.Property<decimal?>("hallRent");

                    b.Property<int>("hallRentalShiftId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isPaid");

                    b.Property<string>("mobileNo");

                    b.Property<DateTime?>("paymentDate");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("rentalDate");

                    b.Property<string>("rentalTime");

                    b.Property<string>("specialGuest");

                    b.Property<int?>("status");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("hallInfoId");

                    b.HasIndex("hallRentalShiftId");

                    b.ToTable("hallRentalApplicationInfos");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Hall.HallRentalPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("amount");

                    b.Property<string>("bankName");

                    b.Property<string>("branchName");

                    b.Property<string>("chequeNo");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("hallRentalApplicationInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("paymentDate");

                    b.Property<int>("paymentMode");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("hallRentalApplicationInfoId");

                    b.ToTable("hallRentalPayments");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Hall.HallRentalShift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("endTime");

                    b.Property<int?>("isDelete");

                    b.Property<string>("shiftName");

                    b.Property<string>("shiftNameBn");

                    b.Property<string>("startTime");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("hallRentalShifts");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Master.MemberType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("memberType")
                        .IsRequired();

                    b.Property<string>("memberTypeBn");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("MemberType","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.MemberAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("blockSector");

                    b.Property<int?>("countryId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("districtId");

                    b.Property<int?>("divisionId");

                    b.Property<int>("employeeId");

                    b.Property<string>("houseVillage");

                    b.Property<int?>("isDelete");

                    b.Property<string>("postCode");

                    b.Property<string>("postOffice");

                    b.Property<string>("roadNumber");

                    b.Property<int?>("thanaId");

                    b.Property<string>("type")
                        .IsRequired();

                    b.Property<string>("union");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("countryId");

                    b.HasIndex("districtId");

                    b.HasIndex("divisionId");

                    b.HasIndex("employeeId");

                    b.HasIndex("thanaId");

                    b.ToTable("MemberAddress","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.MemberAward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("awardDate");

                    b.Property<string>("awardName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("issuedBy");

                    b.Property<string>("purpose");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("MemberAward","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.MemberChildren", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bin");

                    b.Property<string>("bloodGroup");

                    b.Property<string>("childName");

                    b.Property<string>("childNameBN");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("dateOfBirth");

                    b.Property<string>("designation");

                    b.Property<int>("disability");

                    b.Property<string>("education");

                    b.Property<int>("employeeId");

                    b.Property<string>("gender");

                    b.Property<int?>("isDelete");

                    b.Property<string>("nid")
                        .HasMaxLength(100);

                    b.Property<string>("occupation");

                    b.Property<string>("organization");

                    b.Property<string>("spacialSkillIds");

                    b.Property<string>("spacialSkills");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("MemberChildren","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.MemberDrivingLicense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("category");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("dateOfExpair");

                    b.Property<DateTime?>("dateOfIssue");

                    b.Property<int>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("licenseNumber");

                    b.Property<string>("placeOfIssue");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("MemberDrivingLicense","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.MemberEducationalQualification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("degreeId");

                    b.Property<int>("employeeId");

                    b.Property<string>("grade");

                    b.Property<string>("institution");

                    b.Property<int?>("isDelete");

                    b.Property<string>("majorGroup");

                    b.Property<int?>("organizationId");

                    b.Property<int?>("passingYear");

                    b.Property<int?>("reldegreesubjectId");

                    b.Property<int?>("resultId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("degreeId");

                    b.HasIndex("employeeId");

                    b.HasIndex("organizationId");

                    b.HasIndex("reldegreesubjectId");

                    b.HasIndex("resultId");

                    b.ToTable("MemberEducationalQualification","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.MemberInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LPRDate");

                    b.Property<string>("PRLEndDate");

                    b.Property<string>("PRLStartDate");

                    b.Property<int?>("activityStatus");

                    b.Property<string>("batch");

                    b.Property<string>("birthIdentificationNo")
                        .HasMaxLength(100);

                    b.Property<string>("birthPlace");

                    b.Property<string>("bloodGroup");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("dateOfBirth");

                    b.Property<DateTime?>("dateOfConfirmation");

                    b.Property<DateTime?>("dateOfPermanent");

                    b.Property<DateTime?>("dateofregularity");

                    b.Property<string>("designation");

                    b.Property<int>("designationCheck");

                    b.Property<string>("disability");

                    b.Property<string>("emailAddress");

                    b.Property<string>("emailAddressPersonal");

                    b.Property<string>("employeeCode")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("fatherNameBangla");

                    b.Property<string>("fatherNameEnglish");

                    b.Property<bool>("freedomFighter");

                    b.Property<string>("freedomFighterNo");

                    b.Property<string>("gender");

                    b.Property<string>("govtID")
                        .HasMaxLength(250);

                    b.Property<string>("gpfAcNo");

                    b.Property<string>("gpfNomineeName");

                    b.Property<string>("homeDistrict");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("joiningDateGovtService");

                    b.Property<DateTime?>("joiningDatePresentWorkstation");

                    b.Property<string>("joiningDesignation");

                    b.Property<string>("maritalStatus");

                    b.Property<int?>("memberTypeId");

                    b.Property<string>("mobileNumberOffice")
                        .HasMaxLength(50);

                    b.Property<string>("mobileNumberPersonal")
                        .HasMaxLength(50);

                    b.Property<string>("motherNameBangla");

                    b.Property<string>("motherNameEnglish");

                    b.Property<string>("nameBangla");

                    b.Property<string>("nameEnglish");

                    b.Property<string>("nationalID")
                        .HasMaxLength(100);

                    b.Property<string>("nationality");

                    b.Property<string>("natureOfRequitment")
                        .HasMaxLength(100);

                    b.Property<string>("orgType")
                        .HasMaxLength(100);

                    b.Property<string>("pabx");

                    b.Property<int?>("post");

                    b.Property<int?>("religionId");

                    b.Property<string>("seniorityNumber")
                        .HasMaxLength(50);

                    b.Property<string>("socialNetwork");

                    b.Property<string>("spacialSkillIds");

                    b.Property<string>("spacialSkills");

                    b.Property<string>("specialSkill");

                    b.Property<string>("telephoneOffice");

                    b.Property<string>("telephoneResidence");

                    b.Property<string>("tin");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("memberTypeId");

                    b.HasIndex("religionId");

                    b.ToTable("MemberInfo","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.MemberLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("languageId");

                    b.Property<string>("proficiency")
                        .HasMaxLength(100);

                    b.Property<string>("reading")
                        .HasMaxLength(50);

                    b.Property<string>("speaking")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("writing")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("languageId");

                    b.ToTable("MemberLanguage","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.MemberOtherInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("otherInfo");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("MemberOtherInfo","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.MemberPassportDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("dateOfExpair");

                    b.Property<DateTime?>("dateOfIssue");

                    b.Property<int>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("passportNumber");

                    b.Property<string>("placeOfIssue");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("MemberPassportDetails","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.MemberPhotograph", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks");

                    b.Property<string>("type")
                        .IsRequired();

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("url")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("MemberPhotograph","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.MemberPublication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("publicationDate");

                    b.Property<string>("publicationName");

                    b.Property<string>("publicationNubmer");

                    b.Property<string>("publicationPlace");

                    b.Property<string>("publicationType");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("MemberPublication","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.MemberSpouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bin");

                    b.Property<string>("bloodGroup");

                    b.Property<string>("contact");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("dateOfBirth");

                    b.Property<DateTime?>("dateOfMarriage");

                    b.Property<string>("designation");

                    b.Property<string>("email");

                    b.Property<int>("employeeId");

                    b.Property<string>("gender");

                    b.Property<string>("highestEducation");

                    b.Property<string>("homeDistrict");

                    b.Property<int?>("isDelete");

                    b.Property<string>("nid");

                    b.Property<string>("occupation");

                    b.Property<string>("organization");

                    b.Property<string>("spacialSkillIds");

                    b.Property<string>("spacialSkills");

                    b.Property<string>("spouseName");

                    b.Property<string>("spouseNameBN");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("MemberSpouse","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.MemberTraningLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("countryId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<DateTime?>("fromDate");

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks");

                    b.Property<string>("sponsoringAgency");

                    b.Property<DateTime?>("toDate");

                    b.Property<int?>("trainingCategoryId");

                    b.Property<int?>("trainingInstituteId");

                    b.Property<string>("trainingTitle");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("countryId");

                    b.HasIndex("employeeId");

                    b.HasIndex("trainingCategoryId");

                    b.HasIndex("trainingInstituteId");

                    b.ToTable("MemberTraningLog","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.MemberTransferLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("department");

                    b.Property<string>("designation");

                    b.Property<int>("employeeId");

                    b.Property<DateTime?>("from");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("salaryGradeId");

                    b.Property<DateTime?>("to");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("workStation");

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("salaryGradeId");

                    b.ToTable("MemberTransferLog","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.OtherMembership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("membershipId");

                    b.Property<string>("membershipType");

                    b.Property<string>("nameOrganization");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("membershipId");

                    b.ToTable("OtherMembership","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.SpecialSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("shortName");

                    b.Property<string>("skilName")
                        .IsRequired();

                    b.Property<string>("skilNameBn");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("SpecialSkill","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.News.NewsInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<int?>("isDelete");

                    b.Property<string>("title");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("url");

                    b.HasKey("Id");

                    b.ToTable("NewsInfo","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Notice.NoticeAuthor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("designation");

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<string>("signature");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("NoticeAuthor","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Notice.NoticeInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<int?>("isDelete");

                    b.Property<string>("notice")
                        .HasColumnType("text");

                    b.Property<string>("noticeType");

                    b.Property<string>("slNo");

                    b.Property<int>("status");

                    b.Property<string>("subject");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("url");

                    b.Property<DateTime?>("validiTyTill");

                    b.HasKey("Id");

                    b.ToTable("NoticeInfo","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Notice.NoticeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("NoticeType","Club");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Notice.RlnNoticeAuthor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("noticeAuthorId");

                    b.Property<int?>("noticeInfoId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("noticeAuthorId");

                    b.HasIndex("noticeInfoId");

                    b.ToTable("RlnNoticeAuthor","Club");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Budget.CompanyBudgets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("companyId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("initialAmount");

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("surveillence");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("yearId");

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.HasIndex("yearId");

                    b.ToTable("CompanyBudgets","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Budget.MemberBudgets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("initialAmount");

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("surveillence");

                    b.Property<int?>("teamBudgetsId");

                    b.Property<int?>("teamId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("teamBudgetsId");

                    b.HasIndex("teamId");

                    b.ToTable("MemberBudgets","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Budget.TeamBudgets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("companyBudgetsId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("initialAmount");

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("surveillence");

                    b.Property<int?>("teamId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("companyBudgetsId");

                    b.HasIndex("teamId");

                    b.ToTable("TeamBudgets","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Client.Clients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("agreementReceiveDate");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isactive");

                    b.Property<int?>("isconverted");

                    b.Property<int>("leadsId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("leadsId");

                    b.ToTable("Clients","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Cold.ColdActivityDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("coldActivityMastersId");

                    b.Property<string>("contactName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("coldActivityMastersId");

                    b.ToTable("ColdActivityDetails","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Cold.ColdActivityDiscussion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("coldActivityMastersId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("discussion");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("coldActivityMastersId");

                    b.ToTable("ColdActivityDiscussion","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Cold.ColdActivityMasters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("activitiesDate");

                    b.Property<int>("activityCategoryId");

                    b.Property<int?>("activitySessionId");

                    b.Property<int?>("activityStatusId");

                    b.Property<int?>("activityTypeId");

                    b.Property<int?>("coldActivityMastersId");

                    b.Property<string>("companyName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isreminder");

                    b.Property<string>("ownerType");

                    b.Property<string>("priority");

                    b.Property<DateTime?>("reminderDate");

                    b.Property<DateTime?>("reminderTime");

                    b.Property<string>("subject");

                    b.Property<string>("taskOwner");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("activityCategoryId");

                    b.HasIndex("activitySessionId");

                    b.HasIndex("activityStatusId");

                    b.HasIndex("activityTypeId");

                    b.HasIndex("coldActivityMastersId");

                    b.ToTable("ColdActivityMasters","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Cold.ColdActivityTeams", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("coldActivityMastersId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int>("teamId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("coldActivityMastersId");

                    b.HasIndex("teamId");

                    b.ToTable("ColdActivityTeams","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.ActivityDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("activityMasterId");

                    b.Property<int>("contactsId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("activityMasterId");

                    b.ToTable("ActivityDetails","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.ActivityMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("activitiesDate");

                    b.Property<int?>("activityCategoryId");

                    b.Property<int?>("activityMasterId");

                    b.Property<int?>("activitySessionId");

                    b.Property<int?>("activityStatusId");

                    b.Property<int?>("activityTypeId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isreminder");

                    b.Property<int?>("leadsId");

                    b.Property<string>("ownerType");

                    b.Property<string>("priority");

                    b.Property<DateTime?>("reminderDate");

                    b.Property<DateTime?>("reminderTime");

                    b.Property<string>("subject");

                    b.Property<string>("taskOwner");

                    b.Property<int?>("taskSectionId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("activityCategoryId");

                    b.HasIndex("activityMasterId");

                    b.HasIndex("activitySessionId");

                    b.HasIndex("activityStatusId");

                    b.HasIndex("activityTypeId");

                    b.HasIndex("leadsId");

                    b.HasIndex("taskSectionId");

                    b.ToTable("ActivityMaster","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.ActivityStatusProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("activityMasterId");

                    b.Property<int?>("activityStatusId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("activityMasterId");

                    b.HasIndex("activityStatusId");

                    b.ToTable("ActivityStatusProgress","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.ActivityTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("activityMasterId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("teamId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("activityMasterId");

                    b.HasIndex("teamId");

                    b.ToTable("ActivityTeam","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("addressCategoryId");

                    b.Property<int>("addressTypeId");

                    b.Property<string>("blockSector");

                    b.Property<int?>("companyId");

                    b.Property<int?>("countryId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("districtId");

                    b.Property<int?>("divisionId");

                    b.Property<string>("email");

                    b.Property<string>("fax");

                    b.Property<string>("houseVillage");

                    b.Property<int?>("isDelete");

                    b.Property<int>("leadsId");

                    b.Property<string>("maillingAddress");

                    b.Property<string>("mobile");

                    b.Property<int?>("organizationId");

                    b.Property<string>("phone");

                    b.Property<string>("postCode");

                    b.Property<int?>("postOfficeId");

                    b.Property<string>("postOfficeName");

                    b.Property<int?>("resourceId");

                    b.Property<int?>("thanaId");

                    b.Property<string>("type");

                    b.Property<string>("union");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("website");

                    b.HasKey("Id");

                    b.HasIndex("addressCategoryId");

                    b.HasIndex("addressTypeId");

                    b.HasIndex("companyId");

                    b.HasIndex("countryId");

                    b.HasIndex("districtId");

                    b.HasIndex("divisionId");

                    b.HasIndex("organizationId");

                    b.HasIndex("postOfficeId");

                    b.HasIndex("resourceId");

                    b.HasIndex("thanaId");

                    b.ToTable("Address","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.Agreement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("agreementCategoryId");

                    b.Property<DateTime?>("agreementDate");

                    b.Property<string>("agreementNo")
                        .HasMaxLength(50);

                    b.Property<string>("agreementOwner")
                        .HasMaxLength(300);

                    b.Property<int?>("agreementStatusId");

                    b.Property<int?>("agreementTypeId");

                    b.Property<string>("companySignatory")
                        .HasMaxLength(200);

                    b.Property<string>("companySignatoryDesignation")
                        .HasMaxLength(400);

                    b.Property<string>("companyWitness")
                        .HasMaxLength(200);

                    b.Property<string>("companyWitnessDesignation")
                        .HasMaxLength(400);

                    b.Property<string>("contactSignatoryDesignation")
                        .HasMaxLength(400);

                    b.Property<int?>("contactSignatoryId");

                    b.Property<string>("contactSignatoryName")
                        .HasMaxLength(400);

                    b.Property<string>("contactWitnessDesignation")
                        .HasMaxLength(400);

                    b.Property<int?>("contactWitnessId");

                    b.Property<string>("contactWitnessName")
                        .HasMaxLength(400);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("expectedReportDate");

                    b.Property<DateTime?>("expiredDate");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isPrint");

                    b.Property<int?>("leadsId");

                    b.Property<decimal?>("loanLimitAmount");

                    b.Property<string>("loanLimitUnit")
                        .HasMaxLength(10);

                    b.Property<int?>("noOfReports");

                    b.Property<DateTime?>("printDate");

                    b.Property<string>("priority")
                        .HasMaxLength(10);

                    b.Property<int?>("ratingCategoryId");

                    b.Property<string>("remarks");

                    b.Property<string>("reviewremarks");

                    b.Property<DateTime?>("sendingDate");

                    b.Property<DateTime?>("signingDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("agreementCategoryId");

                    b.HasIndex("agreementStatusId");

                    b.HasIndex("agreementTypeId");

                    b.HasIndex("contactSignatoryId");

                    b.HasIndex("contactWitnessId");

                    b.HasIndex("leadsId");

                    b.HasIndex("ratingCategoryId");

                    b.ToTable("Agreement","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.AgreementDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("agreementAmount");

                    b.Property<int?>("agreementId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isProposed");

                    b.Property<decimal?>("ratingAmount");

                    b.Property<DateTime?>("ratingDate");

                    b.Property<int?>("ratingYearId");

                    b.Property<string>("remarks");

                    b.Property<string>("revremarks");

                    b.Property<decimal?>("taxAmount");

                    b.Property<int?>("taxCategoryId");

                    b.Property<decimal?>("totalAmount");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("vatAmount");

                    b.Property<int?>("vatCategoryId");

                    b.HasKey("Id");

                    b.HasIndex("agreementId");

                    b.HasIndex("ratingYearId");

                    b.HasIndex("taxCategoryId");

                    b.HasIndex("vatCategoryId");

                    b.ToTable("AgreementDetails","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.AgreementDetailsHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("agreementDetailsId");

                    b.Property<int?>("agreementId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("ratingAmount");

                    b.Property<decimal?>("totalAmount");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("vatAmount");

                    b.HasKey("Id");

                    b.HasIndex("agreementId");

                    b.ToTable("AgreementDetailsHistory","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.ApprovedforCro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("agreementDetailsId");

                    b.Property<DateTime?>("approvedDate");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isRated");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("agreementDetailsId");

                    b.ToTable("ApprovedforCro","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.BillCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("bankAmount");

                    b.Property<int?>("bankBranchDetailsId");

                    b.Property<int?>("billGenerateId");

                    b.Property<decimal?>("cashAmount");

                    b.Property<decimal?>("challanReceiptTax");

                    b.Property<decimal?>("challanReceiptVat");

                    b.Property<string>("chequeNo")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("discount");

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("mobileBankAmount");

                    b.Property<string>("moneyReceipt");

                    b.Property<decimal?>("payOrderAmount");

                    b.Property<int?>("paymentModeId");

                    b.Property<DateTime?>("receivedDate");

                    b.Property<decimal?>("totalAmount");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("bankBranchDetailsId");

                    b.HasIndex("billGenerateId");

                    b.HasIndex("paymentModeId");

                    b.ToTable("BillCollection","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.BillCollectionHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("bankAmount");

                    b.Property<int?>("billCollectionId");

                    b.Property<decimal?>("cashAmount");

                    b.Property<decimal?>("challanReceiptTax");

                    b.Property<decimal?>("challanReceiptVat");

                    b.Property<string>("chequeNo")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("discount");

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("mobileBankAmount");

                    b.Property<string>("moneyReceipt");

                    b.Property<DateTime?>("receivedDate");

                    b.Property<decimal?>("totalAmount");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("billCollectionId");

                    b.ToTable("BillCollectionHistory","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.BillGenerate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("advanceAmount");

                    b.Property<int?>("agreementDetailssId");

                    b.Property<int?>("agreementtId");

                    b.Property<int?>("approvedforCroId");

                    b.Property<int?>("bankBranchDetailsId");

                    b.Property<DateTime?>("billDate");

                    b.Property<string>("billNo")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("invoiceAmount");

                    b.Property<string>("invoiceNo")
                        .HasMaxLength(30);

                    b.Property<string>("invoiceOrder");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("leadssId");

                    b.Property<decimal?>("ratingAmount");

                    b.Property<string>("remarks");

                    b.Property<int?>("salesInvoiceMasterId");

                    b.Property<decimal?>("totalAmount");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("vatAmount");

                    b.HasKey("Id");

                    b.HasIndex("agreementDetailssId");

                    b.HasIndex("agreementtId");

                    b.HasIndex("approvedforCroId");

                    b.HasIndex("bankBranchDetailsId");

                    b.HasIndex("leadssId");

                    b.HasIndex("salesInvoiceMasterId");

                    b.ToTable("BillGenerate","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.BillGenerateHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("billDate");

                    b.Property<int?>("billGenerateId");

                    b.Property<string>("billNo")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("invoiceNo")
                        .HasMaxLength(30);

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("ratingAmount");

                    b.Property<decimal?>("totalAmount");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("billGenerateId");

                    b.ToTable("BillGenerateHistory","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.Contacts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("contactOwner");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("crmDepartmentsName")
                        .HasMaxLength(400);

                    b.Property<string>("crmDesignationsName")
                        .HasMaxLength(400);

                    b.Property<string>("departmentsName")
                        .HasMaxLength(400);

                    b.Property<string>("designationsName")
                        .HasMaxLength(400);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isLead");

                    b.Property<int?>("leadsId");

                    b.Property<int?>("resourceId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("leadsId");

                    b.HasIndex("resourceId");

                    b.ToTable("Contacts","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<int?>("DocSubjectId");

                    b.Property<string>("FileLocation");

                    b.Property<string>("FileName");

                    b.Property<int?>("contactsId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("contactsId");

                    b.ToTable("Document","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.Leads", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("companyGroupId");

                    b.Property<string>("companyName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("fITypeId");

                    b.Property<int?>("isClient");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isPersonal");

                    b.Property<string>("leadName")
                        .HasMaxLength(250);

                    b.Property<string>("leadNumber")
                        .HasMaxLength(50);

                    b.Property<string>("leadOwner")
                        .HasMaxLength(350);

                    b.Property<int?>("leadProgressStatusId");

                    b.Property<string>("leadShortName")
                        .HasMaxLength(100);

                    b.Property<int?>("ownerShipTypeId");

                    b.Property<string>("remarks");

                    b.Property<int?>("sectorId");

                    b.Property<string>("sourceDescription");

                    b.Property<int?>("sourceId");

                    b.Property<int?>("totalemployee");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("companyGroupId");

                    b.HasIndex("fITypeId");

                    b.HasIndex("leadProgressStatusId");

                    b.HasIndex("ownerShipTypeId");

                    b.HasIndex("sectorId");

                    b.HasIndex("sourceId");

                    b.ToTable("Leads","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.LeadsBankInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("bankBranchDetailsId");

                    b.Property<string>("bankType")
                        .HasMaxLength(50);

                    b.Property<string>("contactName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("crmdepartmentsId");

                    b.Property<int?>("crmdesignationsId");

                    b.Property<string>("email");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("leadsId");

                    b.Property<string>("mobile");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("bankBranchDetailsId");

                    b.HasIndex("crmdepartmentsId");

                    b.HasIndex("crmdesignationsId");

                    b.HasIndex("leadsId");

                    b.ToTable("LeadsBankInfo","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.LeadsHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("actionDetails");

                    b.Property<string>("actionName")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("leadsId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("leadsId");

                    b.ToTable("LeadsHistory","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.OwnerChangeHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("leadsId");

                    b.Property<string>("nextOwner")
                        .HasMaxLength(250);

                    b.Property<string>("peviousOwner")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("leadsId");

                    b.ToTable("OwnerChangeHistory","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.RatingReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("agreementDetailsId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("agreementDetailsId");

                    b.ToTable("RatingReview","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.RelProductAgreement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("agreementId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("productId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("agreementId");

                    b.HasIndex("productId");

                    b.ToTable("RelProductAgreement","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LicenseNumber")
                        .HasMaxLength(100);

                    b.Property<string>("VATNumber")
                        .HasMaxLength(100);

                    b.Property<int?>("age");

                    b.Property<int?>("ageInDays");

                    b.Property<int?>("ageInMonths");

                    b.Property<string>("alternativeEmail")
                        .HasMaxLength(200);

                    b.Property<string>("binNumber")
                        .HasMaxLength(100);

                    b.Property<string>("bloodGroup")
                        .HasMaxLength(10);

                    b.Property<string>("contactRelation")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("crmdepartmentsId");

                    b.Property<int?>("crmdesignationsId");

                    b.Property<int?>("departmentsId");

                    b.Property<int?>("designationsId");

                    b.Property<string>("eTinNumber")
                        .HasMaxLength(100);

                    b.Property<string>("email")
                        .HasMaxLength(200);

                    b.Property<string>("fatherName")
                        .HasMaxLength(200);

                    b.Property<string>("fax")
                        .HasMaxLength(100);

                    b.Property<string>("gender")
                        .HasMaxLength(30);

                    b.Property<string>("imagePath");

                    b.Property<int?>("isDelete");

                    b.Property<string>("linkedInId")
                        .HasMaxLength(200);

                    b.Property<string>("maritalStatus")
                        .HasMaxLength(15);

                    b.Property<string>("mobile")
                        .HasMaxLength(150);

                    b.Property<string>("motherName")
                        .HasMaxLength(200);

                    b.Property<string>("nameEnglish")
                        .HasMaxLength(500);

                    b.Property<string>("nationalId")
                        .HasMaxLength(30);

                    b.Property<string>("organizationName")
                        .HasMaxLength(500);

                    b.Property<string>("otherPhone")
                        .HasMaxLength(150);

                    b.Property<string>("phone")
                        .HasMaxLength(150);

                    b.Property<int?>("professionTypeId");

                    b.Property<string>("resourceName");

                    b.Property<string>("skypeId")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("crmdepartmentsId");

                    b.HasIndex("crmdesignationsId");

                    b.HasIndex("departmentsId");

                    b.HasIndex("designationsId");

                    b.HasIndex("professionTypeId");

                    b.ToTable("Resource","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.MasterData.ActivityCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("activityCategoryName")
                        .IsRequired();

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ActivityCategory","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.MasterData.ActivityNature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("activityNatureName")
                        .IsRequired();

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ActivityNature","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.MasterData.ActivitySession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("activitySessionName")
                        .IsRequired();

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ActivitySession","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.MasterData.ActivityStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("status")
                        .IsRequired();

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ActivityStatus","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.MasterData.ActivityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("activityTypeName")
                        .IsRequired();

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ActivityType","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.MasterData.AgreementCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("agreementCategoryName")
                        .IsRequired();

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("AgreementCategory","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.MasterData.AgreementStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("agreementStatusName")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("AgreementStatus","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.MasterData.AgreementType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("agreementTypeName")
                        .IsRequired();

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("AgreementType","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.MasterData.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("areaCode")
                        .IsRequired();

                    b.Property<int?>("areaId");

                    b.Property<string>("areaLocation");

                    b.Property<string>("areaName")
                        .IsRequired();

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("salesLevelId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("areaId");

                    b.HasIndex("salesLevelId");

                    b.ToTable("Area","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.MasterData.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bankName")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("fiTypeId");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("fiTypeId");

                    b.ToTable("Bank","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.MasterData.BankBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("branchName")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("routingNumber");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("BankBranch","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.MasterData.BankBranchDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("accountNo")
                        .HasMaxLength(100);

                    b.Property<int?>("bankBranchId");

                    b.Property<int?>("bankId");

                    b.Property<string>("collectionType")
                        .HasMaxLength(3);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("email")
                        .HasMaxLength(100);

                    b.Property<string>("fax")
                        .HasMaxLength(20);

                    b.Property<int?>("isDelete");

                    b.Property<string>("maillingAddress")
                        .HasMaxLength(350);

                    b.Property<string>("mobile")
                        .HasMaxLength(16);

                    b.Property<string>("phone")
                        .HasMaxLength(15);

                    b.Property<int?>("thanaId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("website")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("bankBranchId");

                    b.HasIndex("bankId");

                    b.HasIndex("thanaId");

                    b.ToTable("BankBranchDetails","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.MasterData.CRMDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("deptCode");

                    b.Property<string>("deptName")
                        .IsRequired();

                    b.Property<string>("deptNameBn");

                    b.Property<int?>("isDelete");

                    b.Property<string>("shortName");

                    b.Property<DateTime?>("startDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("CRMDepartment","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.MasterData.CRMDesignation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("designationCode")
                        .IsRequired();

                    b.Property<string>("designationName")
                        .IsRequired();

                    b.Property<string>("designationNameBN");

                    b.Property<int?>("isDelete");

                    b.Property<string>("shortName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("CRMDesignation","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.MasterData.CommunicationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("comTypeId");

                    b.Property<string>("communicationTypeName")
                        .IsRequired();

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("CommunicationType","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.MasterData.FIType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("fiTypeName")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("FIType","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.MasterData.Industry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("industryName")
                        .IsRequired();

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Industry","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.MasterData.LeadProgressStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("LeadProgressStatus","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.MasterData.OwnerShipType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("ownerShipTypeName")
                        .IsRequired();

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("OwnerShipType","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.MasterData.RatingCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("ratingCategoryName")
                        .IsRequired();

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("RatingCategory","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.MasterData.RatingYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("ratingType")
                        .HasMaxLength(100);

                    b.Property<string>("ratingTypeName")
                        .HasMaxLength(100);

                    b.Property<string>("ratingYearName")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("RatingYear","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.MasterData.Sector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("sectorId");

                    b.Property<string>("sectorName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("sectorId");

                    b.ToTable("Sector","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.MasterData.Source", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("sourceName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Source","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.MasterData.TaxCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("taxCategoryName")
                        .HasMaxLength(100);

                    b.Property<decimal?>("taxRate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("TaxCategory","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.MasterData.VatCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("vatCategoryName")
                        .HasMaxLength(100);

                    b.Property<decimal?>("vatRate");

                    b.HasKey("Id");

                    b.ToTable("VatCategory","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Notes.CRMNoteMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("leadsId");

                    b.Property<string>("notesdescription");

                    b.Property<string>("title");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("leadsId");

                    b.ToTable("CRMNoteMaster","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Proposal.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("productDescription");

                    b.Property<string>("productName")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Product","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Proposal.ProposalDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("particularsValue");

                    b.Property<int?>("proposalMasterId");

                    b.Property<int?>("proposalParticularsId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("proposalMasterId");

                    b.HasIndex("proposalParticularsId");

                    b.ToTable("ProposalDetail","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Proposal.ProposalMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("leadsId");

                    b.Property<DateTime?>("proposalDate");

                    b.Property<string>("proposalNo")
                        .HasMaxLength(100);

                    b.Property<int?>("proposalStatusId");

                    b.Property<int?>("proposalTypeId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("leadsId");

                    b.HasIndex("proposalStatusId");

                    b.HasIndex("proposalTypeId");

                    b.ToTable("ProposalMaster","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Proposal.ProposalParticulars", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("proposalParticularsName")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ProposalParticulars","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Proposal.ProposalStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("proposalStatusName")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ProposalStatus","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Proposal.ProposalType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("proposalTypeName")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ProposalType","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Proposal.RelProductProposal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("productId");

                    b.Property<int?>("proposalMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("productId");

                    b.HasIndex("proposalMasterId");

                    b.ToTable("RelProductProposal","CRM");
                });

            modelBuilder.Entity("OPUSERP.CRO.Data.Entity.DistributeJob.Archive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("archiveDate");

                    b.Property<int?>("archiveFloorId");

                    b.Property<string>("archiveLocationSoftcopy")
                        .HasMaxLength(300);

                    b.Property<int?>("archiveShelfId");

                    b.Property<DateTime?>("convertDate");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("hardCopyNewFileNo")
                        .HasMaxLength(300);

                    b.Property<string>("hardCopyOldFileNo")
                        .HasMaxLength(300);

                    b.Property<int?>("hardWorkingFile");

                    b.Property<int?>("isDelete");

                    b.Property<int>("operationMasterId");

                    b.Property<DateTime?>("ratingDate");

                    b.Property<string>("ratingValidDays")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("ratingValidTillDate");

                    b.Property<DateTime?>("reportPrintDate");

                    b.Property<int?>("softWorkingFile");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("archiveShelfId");

                    b.HasIndex("operationMasterId");

                    b.ToTable("Archive","CRO");
                });

            modelBuilder.Entity("OPUSERP.CRO.Data.Entity.DistributeJob.ArchiveFloor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("archiveFloorName")
                        .HasMaxLength(350);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ArchiveFloor","CRO");
                });

            modelBuilder.Entity("OPUSERP.CRO.Data.Entity.DistributeJob.ArchiveShelf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("archiveFloorId");

                    b.Property<string>("archiveShelfName")
                        .HasMaxLength(350);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("initialCharactarOfFileName")
                        .HasMaxLength(10);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("archiveFloorId");

                    b.ToTable("ArchiveShelf","CRO");
                });

            modelBuilder.Entity("OPUSERP.CRO.Data.Entity.DistributeJob.AttachmentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("archieveId");

                    b.Property<int?>("attachmentTypeId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("fileTypeName")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("operationMasterId");

                    b.Property<string>("subjectName")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("attachmentTypeId");

                    b.HasIndex("operationMasterId");

                    b.ToTable("AttachmentStatus","CRO");
                });

            modelBuilder.Entity("OPUSERP.CRO.Data.Entity.DistributeJob.AttachmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("attachmentTypeName")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("AttachmentType","CRO");
                });

            modelBuilder.Entity("OPUSERP.CRO.Data.Entity.DistributeJob.DocumentChart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description");

                    b.Property<string>("documentName")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("DocumentChart","CRO");
                });

            modelBuilder.Entity("OPUSERP.CRO.Data.Entity.DistributeJob.IRCMeetingAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("operationMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("operationMasterId");

                    b.ToTable("IRCMeetingAttendance","CRO");
                });

            modelBuilder.Entity("OPUSERP.CRO.Data.Entity.DistributeJob.IRCMemberComments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("comments");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("operationMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("operationMasterId");

                    b.ToTable("IRCMemberComments","CRO");
                });

            modelBuilder.Entity("OPUSERP.CRO.Data.Entity.DistributeJob.IRCRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("entityRatingName")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("ircDate");

                    b.Property<int?>("isDelete");

                    b.Property<int>("operationMasterId");

                    b.Property<string>("outlook")
                        .HasMaxLength(150);

                    b.Property<string>("ratingTypeName")
                        .HasMaxLength(150);

                    b.Property<string>("ratingValue")
                        .HasMaxLength(150);

                    b.Property<string>("shortRatingName")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("operationMasterId");

                    b.ToTable("IRCRating","CRO");
                });

            modelBuilder.Entity("OPUSERP.CRO.Data.Entity.DistributeJob.IRCSignatory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("serialNo");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.ToTable("IRCSignatory","CRO");
                });

            modelBuilder.Entity("OPUSERP.CRO.Data.Entity.DistributeJob.JobStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("isConversion")
                        .HasMaxLength(3);

                    b.Property<int?>("isDelete");

                    b.Property<string>("isMyJob")
                        .HasMaxLength(3);

                    b.Property<string>("isReviewReport")
                        .HasMaxLength(3);

                    b.Property<string>("jobStatusName")
                        .HasMaxLength(350);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("JobStatus","CRO");
                });

            modelBuilder.Entity("OPUSERP.CRO.Data.Entity.DistributeJob.OperationMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("agreementId");

                    b.Property<int?>("approvedforCroId");

                    b.Property<string>("assignCoHead")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("assignCoHeadDate");

                    b.Property<DateTime?>("assignDate");

                    b.Property<DateTime?>("assignDateConversion");

                    b.Property<DateTime?>("assignDateReview");

                    b.Property<string>("assignTeam")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("assignTeamDate");

                    b.Property<string>("assignTeamLeader")
                        .HasMaxLength(150);

                    b.Property<string>("assignTo")
                        .HasMaxLength(150);

                    b.Property<string>("assignToConverter")
                        .HasMaxLength(150);

                    b.Property<string>("assignToReviewer")
                        .HasMaxLength(150);

                    b.Property<string>("comments")
                        .HasMaxLength(550);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("declaration");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("jobStatusId");

                    b.Property<DateTime?>("reportDate");

                    b.Property<string>("reportNo")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("tLDeclarationDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("agreementId");

                    b.HasIndex("approvedforCroId");

                    b.HasIndex("jobStatusId");

                    b.ToTable("OperationMaster","CRO");
                });

            modelBuilder.Entity("OPUSERP.CRO.Data.Entity.DistributeJob.ProposedRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int>("operationMasterId");

                    b.Property<string>("proposedEntityRatingName")
                        .HasMaxLength(150);

                    b.Property<string>("proposedIRCOutlook")
                        .HasMaxLength(150);

                    b.Property<string>("proposedIRCRatingTypeName")
                        .HasMaxLength(150);

                    b.Property<string>("proposedIRCRatingValue")
                        .HasMaxLength(150);

                    b.Property<string>("proposedIRCShortRatingName")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("operationMasterId");

                    b.ToTable("ProposedRating","CRO");
                });

            modelBuilder.Entity("OPUSERP.CRO.Data.Entity.DistributeJob.RatingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("ratingTypeName")
                        .HasMaxLength(350);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("RatingType","CRO");
                });

            modelBuilder.Entity("OPUSERP.CRO.Data.Entity.DistributeJob.RatingValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("ratingCategoryId");

                    b.Property<int?>("ratingTypeId");

                    b.Property<string>("ratingValues")
                        .HasMaxLength(350);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("ratingCategoryId");

                    b.HasIndex("ratingTypeId");

                    b.ToTable("RatingValue","CRO");
                });

            modelBuilder.Entity("OPUSERP.CRO.Data.Entity.DistributeJob.ReceiveDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("archieveId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description");

                    b.Property<int?>("documentChartId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("operationMasterId");

                    b.Property<DateTime?>("receiveDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("documentChartId");

                    b.HasIndex("operationMasterId");

                    b.ToTable("ReceiveDocument","CRO");
                });

            modelBuilder.Entity("OPUSERP.CRO.Data.Entity.DistributeJob.StatusLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("currentUser")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("jobStatusId");

                    b.Property<int?>("operationMasterId");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("jobStatusId");

                    b.HasIndex("operationMasterId");

                    b.ToTable("StatusLog","CRO");
                });

            modelBuilder.Entity("OPUSERP.DMS.Data.Entity.AssignDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("documentMasterId");

                    b.Property<int?>("documentPhotoAttachmentId");

                    b.Property<int?>("employeeInfoId");

                    b.Property<string>("hasEmployee")
                        .HasMaxLength(10);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isViewed");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("documentMasterId");

                    b.HasIndex("documentPhotoAttachmentId");

                    b.HasIndex("employeeInfoId");

                    b.ToTable("AssignDocument","Doc");
                });

            modelBuilder.Entity("OPUSERP.DMS.Data.Entity.AssignDocumentMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("documentMasterId");

                    b.Property<int?>("employeeInfoId");

                    b.Property<string>("hasEmployee")
                        .HasMaxLength(10);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isViewed");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("documentMasterId");

                    b.HasIndex("employeeInfoId");

                    b.ToTable("AssignDocumentMaster","Doc");
                });

            modelBuilder.Entity("OPUSERP.DMS.Data.Entity.DocumentCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("categoryName")
                        .HasMaxLength(300);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("DocumentCategory","Doc");
                });

            modelBuilder.Entity("OPUSERP.DMS.Data.Entity.DocumentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("documentMasterId");

                    b.Property<int?>("fieldSettingId");

                    b.Property<string>("fileldValue");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("documentMasterId");

                    b.HasIndex("fieldSettingId");

                    b.ToTable("DocumentDetail","Doc");
                });

            modelBuilder.Entity("OPUSERP.DMS.Data.Entity.DocumentMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("docCreateBy")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("docCreateDate");

                    b.Property<int?>("documentCategoryId");

                    b.Property<string>("documentName")
                        .HasMaxLength(400);

                    b.Property<string>("documentNo")
                        .HasMaxLength(100);

                    b.Property<int?>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("leadsId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("documentCategoryId");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("leadsId");

                    b.ToTable("DocumentMaster","Doc");
                });

            modelBuilder.Entity("OPUSERP.DMS.Data.Entity.DocumentStatusLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("documentMasterId");

                    b.Property<string>("documentStatus")
                        .HasMaxLength(450);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("documentMasterId");

                    b.ToTable("DocumentStatusLog","Doc");
                });

            modelBuilder.Entity("OPUSERP.DMS.Data.Entity.FieldSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("documentCategoryId");

                    b.Property<string>("fieldName")
                        .HasMaxLength(300);

                    b.Property<int?>("fieldTypeId");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("documentCategoryId");

                    b.HasIndex("fieldTypeId");

                    b.ToTable("FieldSettings","Doc");
                });

            modelBuilder.Entity("OPUSERP.DMS.Data.Entity.FieldType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("fieldTypeName")
                        .HasMaxLength(20);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("FieldType","Doc");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("EmpCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<decimal?>("MaxAmount");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.Property<int?>("companyId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(120);

                    b.Property<int?>("isActive");

                    b.Property<string>("org")
                        .HasMaxLength(120);

                    b.Property<int?>("specialBranchUnitId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(120);

                    b.Property<int>("userId");

                    b.Property<int?>("userTypeId");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("companyId");

                    b.HasIndex("specialBranchUnitId");

                    b.HasIndex("userTypeId");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.AttachmentComment.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("actionType")
                        .HasMaxLength(250);

                    b.Property<int?>("actionTypeId");

                    b.Property<string>("comment");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("moduleId");

                    b.Property<string>("title")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("moduleId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.AttachmentComment.DocumentPhotoAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("actionType")
                        .HasMaxLength(250);

                    b.Property<int?>("actionTypeId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description")
                        .HasMaxLength(450);

                    b.Property<string>("documentType")
                        .HasMaxLength(250);

                    b.Property<string>("fileName")
                        .HasMaxLength(350);

                    b.Property<string>("filePath")
                        .HasMaxLength(350);

                    b.Property<string>("fileType")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("moduleId");

                    b.Property<string>("subject")
                        .HasMaxLength(350);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("moduleId");

                    b.ToTable("DocumentPhotoAttachments");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Auth.DbChangeHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("entityName")
                        .HasMaxLength(300);

                    b.Property<string>("entityState")
                        .HasMaxLength(100);

                    b.Property<string>("fieldName")
                        .HasMaxLength(200);

                    b.Property<string>("fieldValue");

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks")
                        .HasMaxLength(300);

                    b.Property<long>("sessionId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("DbChangeHistories");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Auth.ERPModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("isTeam");

                    b.Property<string>("moduleName");

                    b.Property<string>("moduleNameBN");

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ERPModules");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Auth.MenuBand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bandName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("parentId");

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("MenuBands");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Auth.ModuleAccessPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("applicationRoleId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("eRPModuleId");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("applicationRoleId");

                    b.HasIndex("eRPModuleId");

                    b.ToTable("ModuleAccessPages");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Auth.Navbar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("action")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("activeLi")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("area")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("controller")
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("displayOrder");

                    b.Property<string>("imageClass")
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isParent");

                    b.Property<int?>("moduleId");

                    b.Property<string>("nameOption")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("nameOptionBangla")
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("parentID");

                    b.Property<bool>("status");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("moduleId");

                    b.ToTable("Navbars");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Auth.UserAccessPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("applicationRoleId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isAccess");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("navbarId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("applicationRoleId");

                    b.HasIndex("navbarId");

                    b.ToTable("UserAccessPages");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Auth.UserLogHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("browserName")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("ipAddress")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime>("logTime")
                        .HasMaxLength(250);

                    b.Property<string>("pcName")
                        .HasMaxLength(250);

                    b.Property<int?>("status");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("userId")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("UserLogHistories");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Auth.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("groupId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("userTypeName")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("userTypeNameBn")
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("groupId");

                    b.ToTable("UserTypes");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Auth.UserTypeGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("groupTypeName")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("groupTypeNameBN")
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("UserTypeGroups");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Master.AddressCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("addressCategories");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Master.AddressType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("typeName")
                        .IsRequired();

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("AddressTypes");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Master.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("addressLine");

                    b.Property<string>("alternetEmail")
                        .HasMaxLength(150);

                    b.Property<int?>("bankBranchDetailsId");

                    b.Property<string>("businessNature")
                        .HasMaxLength(250);

                    b.Property<string>("companyEmail")
                        .HasMaxLength(150);

                    b.Property<string>("companyName")
                        .HasMaxLength(250);

                    b.Property<string>("companyShortName")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("dateOfEstablishment");

                    b.Property<string>("fileName")
                        .HasMaxLength(250);

                    b.Property<string>("filePath")
                        .HasMaxLength(500);

                    b.Property<string>("filePathThree")
                        .HasMaxLength(500);

                    b.Property<string>("filePathTwo")
                        .HasMaxLength(500);

                    b.Property<string>("height")
                        .HasMaxLength(100);

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("liquidityRatio");

                    b.Property<string>("managerName")
                        .HasMaxLength(250);

                    b.Property<string>("officeTelephone")
                        .HasMaxLength(150);

                    b.Property<string>("ownerName")
                        .HasMaxLength(250);

                    b.Property<int?>("permanentEmployee");

                    b.Property<string>("tinNo")
                        .HasMaxLength(150);

                    b.Property<string>("tradeLicense")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("vatNo")
                        .HasMaxLength(150);

                    b.Property<string>("width")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("bankBranchDetailsId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Master.CompanyGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("companyId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("groupName");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.ToTable("CompanyGroups");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Master.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("countryCode")
                        .IsRequired();

                    b.Property<string>("countryName")
                        .IsRequired();

                    b.Property<string>("countryNameBn");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("shortName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Master.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("districtCode")
                        .IsRequired();

                    b.Property<string>("districtName")
                        .IsRequired();

                    b.Property<string>("districtNameBn");

                    b.Property<int>("divisionId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("shortName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("divisionId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Master.Division", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("countryId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("divisionCode")
                        .IsRequired();

                    b.Property<string>("divisionName")
                        .IsRequired();

                    b.Property<string>("divisionNameBn");

                    b.Property<int?>("isDelete");

                    b.Property<string>("shortName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("countryId");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Master.PostOffice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("districtId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("postalCode")
                        .HasMaxLength(10);

                    b.Property<string>("postalName")
                        .HasMaxLength(100);

                    b.Property<string>("postalNameBn")
                        .HasMaxLength(100);

                    b.Property<string>("postalShortName")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("districtId");

                    b.ToTable("PostOffices");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Master.Thana", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("districtId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("shortName");

                    b.Property<string>("thanaCode");

                    b.Property<string>("thanaName");

                    b.Property<string>("thanaNameBn");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("districtId");

                    b.ToTable("Thanas");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.MasterData.AutonumberingInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("NumType");

                    b.Property<int?>("NumValue");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("defaultValue");

                    b.Property<string>("dseparator");

                    b.Property<string>("fieldName");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isdate");

                    b.Property<int?>("ismonth");

                    b.Property<int?>("isyear");

                    b.Property<string>("mseparator");

                    b.Property<string>("prefix");

                    b.Property<string>("separator");

                    b.Property<int?>("startValue");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("yseparator");

                    b.HasKey("Id");

                    b.ToTable("autonumberingInfos");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.MasterData.CompanyAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("addressTypeId");

                    b.Property<string>("blockSector");

                    b.Property<int?>("countryId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("districtId");

                    b.Property<int?>("divisionId");

                    b.Property<string>("houseVillage");

                    b.Property<int?>("isDelete");

                    b.Property<string>("postCode");

                    b.Property<string>("postOffice");

                    b.Property<int?>("thanaId");

                    b.Property<string>("type");

                    b.Property<string>("union");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("addressTypeId");

                    b.HasIndex("countryId");

                    b.HasIndex("districtId");

                    b.HasIndex("divisionId");

                    b.HasIndex("thanaId");

                    b.ToTable("CompanyAddresses");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.MasterData.ERPModuleAssign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("companyId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("roleId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.ToTable("ERPModuleAssigns");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.MasterData.SendEmailLogStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("itemName");

                    b.Property<string>("module");

                    b.Property<string>("receiver");

                    b.Property<string>("receiverEmail");

                    b.Property<string>("sender");

                    b.Property<string>("type");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("SendEmailLogStatus");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.MasterData.StoreAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("addressCategoryId");

                    b.Property<string>("blockSector");

                    b.Property<int?>("countryId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("districtId");

                    b.Property<int?>("divisionId");

                    b.Property<string>("houseVillage");

                    b.Property<int?>("isDelete");

                    b.Property<string>("postCode");

                    b.Property<string>("postOffice");

                    b.Property<int?>("storeId");

                    b.Property<int?>("thanaId");

                    b.Property<string>("type");

                    b.Property<string>("union");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("addressCategoryId");

                    b.HasIndex("countryId");

                    b.HasIndex("districtId");

                    b.HasIndex("divisionId");

                    b.HasIndex("storeId");

                    b.HasIndex("thanaId");

                    b.ToTable("StoreAddress","Purchase");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.MasterData.StoreAssign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("aspnetuserId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("isDefault");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("storeId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("aspnetuserId");

                    b.HasIndex("storeId");

                    b.ToTable("StoreAssign","Purchase");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.MasterData.StoreContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("department");

                    b.Property<string>("designation");

                    b.Property<int?>("isDelete");

                    b.Property<string>("mobileNumber");

                    b.Property<string>("personName");

                    b.Property<string>("phoneNumber");

                    b.Property<int?>("storeId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("storeId");

                    b.ToTable("StoreContact","Purchase");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.MasterData.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("areaId");

                    b.Property<string>("aspnetuserId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<string>("memberName")
                        .HasMaxLength(250);

                    b.Property<int?>("moduleId");

                    b.Property<string>("teamCode")
                        .HasMaxLength(50);

                    b.Property<int?>("teamId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("areaId");

                    b.HasIndex("aspnetuserId");

                    b.HasIndex("moduleId");

                    b.HasIndex("teamId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.MasterData.UserBackup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AspnetId");

                    b.Property<string>("EmpCode");

                    b.Property<decimal?>("MaxAmount");

                    b.Property<int?>("companyId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("deleteBy");

                    b.Property<string>("email");

                    b.Property<int?>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<string>("org");

                    b.Property<int?>("specialBranchUnitId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("userId");

                    b.Property<string>("userName");

                    b.Property<int?>("userTypeId");

                    b.HasKey("Id");

                    b.ToTable("userBackups");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Matrix.ApprovalLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<int>("masterId");

                    b.Property<int?>("matrixTypeId");

                    b.Property<int?>("nextApproverId");

                    b.Property<string>("notes")
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("sequenceNo");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int>("userId");

                    b.HasKey("Id");

                    b.HasIndex("matrixTypeId");

                    b.ToTable("ApprovalLog","SCM");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Matrix.ApprovalMatrix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("approverTypeId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isLeave");

                    b.Property<int?>("matrixTypeId");

                    b.Property<int?>("nextApproverId");

                    b.Property<int?>("projectId");

                    b.Property<int>("sequenceNo");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("userId");

                    b.HasKey("Id");

                    b.HasIndex("approverTypeId");

                    b.HasIndex("matrixTypeId");

                    b.HasIndex("projectId");

                    b.ToTable("ApprovalMatrix","SCM");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Matrix.ApprovalMatrixlog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("approvalMatrixId");

                    b.Property<int?>("approverTypeId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("matrixTypeId");

                    b.Property<int?>("nextApproverId");

                    b.Property<int?>("projectId");

                    b.Property<string>("remarks");

                    b.Property<int>("sequenceNo");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("userId");

                    b.HasKey("Id");

                    b.HasIndex("approvalMatrixId");

                    b.HasIndex("approverTypeId");

                    b.HasIndex("matrixTypeId");

                    b.HasIndex("projectId");

                    b.ToTable("ApprovalMatrixlog","SCM");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Matrix.ApprovalReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("approvalLogID");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int>("userId");

                    b.HasKey("Id");

                    b.HasIndex("approvalLogID");

                    b.ToTable("ApprovalReview","SCM");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Matrix.ApproverType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("approverTypeName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ApproverType","SCM");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Matrix.ChangeOfDoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("endDate");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isback");

                    b.Property<DateTime?>("startDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("userId");

                    b.HasKey("Id");

                    b.ToTable("ChangeOfDoa","SCM");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Matrix.MatrixChangeHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("matrixTypeId");

                    b.Property<int?>("nextApproverId");

                    b.Property<string>("notes")
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("requisitionMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int>("userId");

                    b.HasKey("Id");

                    b.HasIndex("matrixTypeId");

                    b.HasIndex("requisitionMasterId");

                    b.ToTable("MatrixChangeHistory","SCM");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Matrix.MatrixType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("matrixTypeName");

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("MatrixType","SCM");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Matrix.StatusInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StatusName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("sortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("StatusInfo","SCM");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Matrix.StatusLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("cSMasterId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("empName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("iOUId");

                    b.Property<int?>("iOUPaymentMasterId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("matrixTypeId");

                    b.Property<string>("nextEmpName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("purchaseId");

                    b.Property<string>("remarks")
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("requisitionId");

                    b.Property<int?>("statusInfoId");

                    b.Property<int?>("stockId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("userId");

                    b.HasKey("Id");

                    b.HasIndex("cSMasterId");

                    b.HasIndex("iOUId");

                    b.HasIndex("iOUPaymentMasterId");

                    b.HasIndex("matrixTypeId");

                    b.HasIndex("purchaseId");

                    b.HasIndex("requisitionId");

                    b.HasIndex("statusInfoId");

                    b.HasIndex("stockId");

                    b.ToTable("StatusLog","SCM");
                });

            modelBuilder.Entity("OPUSERP.Distribution.Data.Entity.MasterData.DisItemPriceFixing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("VAT");

                    b.Property<string>("barCode")
                        .HasMaxLength(50);

                    b.Property<byte[]>("barCodeImage");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("discountPersent");

                    b.Property<int?>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemSpecificationId");

                    b.Property<decimal?>("price");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("itemSpecificationId");

                    b.ToTable("DisItemPriceFixing","Distribution");
                });

            modelBuilder.Entity("OPUSERP.Distribution.Data.Entity.MasterData.DisItemPriceFixingDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("VAT");

                    b.Property<string>("barCode")
                        .HasMaxLength(50);

                    b.Property<byte[]>("barCodeImage");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("disItemPriceFixingId");

                    b.Property<decimal?>("discountPersent");

                    b.Property<int?>("distributorTypeId");

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("price");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("disItemPriceFixingId");

                    b.HasIndex("distributorTypeId");

                    b.ToTable("DisItemPriceFixingDetails","Distribution");
                });

            modelBuilder.Entity("OPUSERP.Distribution.Data.Entity.MasterData.DistributorType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("DistributorType","Distribution");
                });

            modelBuilder.Entity("OPUSERP.Distribution.Data.Entity.MasterData.PackageDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("discountPersent");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isfree");

                    b.Property<int?>("itemSpecificationId");

                    b.Property<int?>("packageMasterId");

                    b.Property<int?>("quantity");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("itemSpecificationId");

                    b.HasIndex("packageMasterId");

                    b.ToTable("PackageDetail","Distribution");
                });

            modelBuilder.Entity("OPUSERP.Distribution.Data.Entity.MasterData.PackageMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description");

                    b.Property<int?>("distributorTypeId");

                    b.Property<DateTime?>("endDate");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("packageDate");

                    b.Property<string>("packageName");

                    b.Property<string>("packageNo");

                    b.Property<DateTime?>("startDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("distributorTypeId");

                    b.ToTable("PackageMaster","Distribution");
                });

            modelBuilder.Entity("OPUSERP.Distribution.Data.Entity.MasterData.RelCustomerSalesTeamDeployment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("areaId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("nsmsalesTeamDeploymentId");

                    b.Property<int?>("relSupplierCustomerResourseId");

                    b.Property<int?>("rsmsalesTeamDeploymentId");

                    b.Property<int?>("salesLevelId");

                    b.Property<int?>("tsmsalesTeamDeploymentId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("areaId");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("nsmsalesTeamDeploymentId");

                    b.HasIndex("relSupplierCustomerResourseId");

                    b.HasIndex("rsmsalesTeamDeploymentId");

                    b.HasIndex("salesLevelId");

                    b.HasIndex("tsmsalesTeamDeploymentId");

                    b.ToTable("RelCustomerSalesTeamDeployment","Distribution");
                });

            modelBuilder.Entity("OPUSERP.Distribution.Data.Entity.MasterData.SalesLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("code");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<int?>("salesLevelId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("salesLevelId");

                    b.ToTable("SalesLevel","Distribution");
                });

            modelBuilder.Entity("OPUSERP.Distribution.Data.Entity.MasterData.SalesTeamDeployment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("areaId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("salesLevelId");

                    b.Property<int?>("salesTeamDeploymentId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("areaId");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("salesLevelId");

                    b.HasIndex("salesTeamDeploymentId");

                    b.ToTable("SalesTeamDeployment","Distribution");
                });

            modelBuilder.Entity("OPUSERP.Distribution.Data.Entity.Requisition.RequisitionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("appatAmount");

                    b.Property<decimal?>("appcdAmount");

                    b.Property<decimal?>("appdiscountAmount");

                    b.Property<decimal?>("applineTotal");

                    b.Property<decimal?>("apprdAmount");

                    b.Property<decimal?>("appsdAmount");

                    b.Property<decimal?>("apptaxAmount");

                    b.Property<decimal?>("appvatAmount");

                    b.Property<decimal?>("atAmount");

                    b.Property<decimal?>("cdAmount");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("disItemPriceFixingId");

                    b.Property<decimal?>("discountAmount");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemSpecificationId");

                    b.Property<decimal?>("lineTotal");

                    b.Property<int?>("packageDetailId");

                    b.Property<decimal?>("quantity");

                    b.Property<decimal?>("rate");

                    b.Property<decimal?>("rdAmount");

                    b.Property<int?>("requisitionMasterId");

                    b.Property<decimal?>("sdAmount");

                    b.Property<decimal?>("taxAmount");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("vatAmount");

                    b.HasKey("Id");

                    b.HasIndex("disItemPriceFixingId");

                    b.HasIndex("itemSpecificationId");

                    b.HasIndex("packageDetailId");

                    b.HasIndex("requisitionMasterId");

                    b.ToTable("RequisitionDetail","Distribution");
                });

            modelBuilder.Entity("OPUSERP.Distribution.Data.Entity.Requisition.RequisitionMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("DiscountOnTotal");

                    b.Property<decimal?>("NetTotal");

                    b.Property<decimal?>("TAXOnTotal");

                    b.Property<decimal?>("VATOnTotal");

                    b.Property<decimal?>("appDiscountOnTotal");

                    b.Property<decimal?>("appNetTotal");

                    b.Property<decimal?>("appTAXOnTotal");

                    b.Property<decimal?>("appVATOnTotal");

                    b.Property<decimal?>("apptotalAmount");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isApproved");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("relSupplierCustomerResourseId");

                    b.Property<DateTime?>("requisitionDate");

                    b.Property<string>("requisitionNumber");

                    b.Property<decimal?>("totalAmount");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("relSupplierCustomerResourseId");

                    b.ToTable("RequisitionMaster","Distribution");
                });

            modelBuilder.Entity("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetAssign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("assetRegistrationId");

                    b.Property<DateTime?>("assignDate");

                    b.Property<int?>("coordinatorempId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("deliveryLocationId");

                    b.Property<int?>("departmentId");

                    b.Property<int?>("empId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("assetRegistrationId");

                    b.HasIndex("deliveryLocationId");

                    b.HasIndex("departmentId");

                    b.ToTable("AssetAssign","FAMS");
                });

            modelBuilder.Entity("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetDepreciation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("assetRegistrationId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("depriciationPeriodId");

                    b.Property<decimal?>("depriciationRate");

                    b.Property<decimal?>("depriciationValue");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("assetRegistrationId");

                    b.HasIndex("depriciationPeriodId");

                    b.ToTable("AssetDepreciation","FAMS");
                });

            modelBuilder.Entity("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetOverhauling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("assetRegistrationId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description");

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("overhaulingCost");

                    b.Property<DateTime?>("overhaulingDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("assetRegistrationId");

                    b.ToTable("AssetOverhauling","FAMS");
                });

            modelBuilder.Entity("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetReceive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("assetRegistrationId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("receiveBy");

                    b.Property<DateTime?>("receiveDate");

                    b.Property<string>("sendBy");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("assetRegistrationId");

                    b.ToTable("AssetReceives","FAMS");
                });

            modelBuilder.Entity("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("additionalCost");

                    b.Property<string>("assetDescription")
                        .HasMaxLength(300);

                    b.Property<string>("assetNo");

                    b.Property<string>("assetSerialNo")
                        .HasMaxLength(30);

                    b.Property<decimal?>("assetValue");

                    b.Property<decimal?>("carringCost");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("depriciationRateId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemSpecificationId");

                    b.Property<int?>("purchaseInfoId");

                    b.Property<decimal>("quantity");

                    b.Property<decimal?>("unitPrice");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("depriciationRateId");

                    b.HasIndex("itemSpecificationId");

                    b.HasIndex("purchaseInfoId");

                    b.ToTable("AssetRegistration","FAMS");
                });

            modelBuilder.Entity("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetReject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("assetRegistrationId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("rejectBy");

                    b.Property<DateTime?>("rejectDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("assetRegistrationId");

                    b.ToTable("AssetRejects","FAMS");
                });

            modelBuilder.Entity("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetRetirement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("assetRegistrationId");

                    b.Property<int?>("assetRetirementTypeId");

                    b.Property<string>("causeOfRetirement");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("retirementDate");

                    b.Property<decimal?>("scrapValue");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("assetRegistrationId");

                    b.HasIndex("assetRetirementTypeId");

                    b.ToTable("AssetRetirements","FAMS");
                });

            modelBuilder.Entity("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetRetirementType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("assetRetirementTypeName")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("AssetRetirementTypes","FAMS");
                });

            modelBuilder.Entity("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetTransfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("assetRegistrationId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("currentCoordinatorId");

                    b.Property<int?>("currentEmpId");

                    b.Property<int?>("deliveryLocationId");

                    b.Property<int?>("departmentId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("previousCoordinatorId");

                    b.Property<int?>("previousEmpId");

                    b.Property<DateTime?>("transferDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("assetRegistrationId");

                    b.HasIndex("deliveryLocationId");

                    b.HasIndex("departmentId");

                    b.ToTable("AssetTransfer","FAMS");
                });

            modelBuilder.Entity("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetWarrenty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("assetRegistrationId");

                    b.Property<string>("categoryHead");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<DateTime>("warrentyDate");

                    b.HasKey("Id");

                    b.HasIndex("assetRegistrationId");

                    b.ToTable("AssetWarrenty","FAMS");
                });

            modelBuilder.Entity("OPUSERP.FixedAsset.Data.Entity.AssetRegister.DepriciationInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("assetRegistrationId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("depriciationPeriodId");

                    b.Property<decimal?>("depriciationRate");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("assetRegistrationId");

                    b.HasIndex("depriciationPeriodId");

                    b.ToTable("DepriciationInfo","FAMS");
                });

            modelBuilder.Entity("OPUSERP.FixedAsset.Data.Entity.AssetRegister.PurchaseInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("additionalCost");

                    b.Property<decimal?>("carringCost");

                    b.Property<DateTime?>("challanDate");

                    b.Property<string>("challanNo");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("procurementSourceId");

                    b.Property<DateTime?>("purchaseDate");

                    b.Property<string>("purchaseNo");

                    b.Property<int?>("purchaseOrderMasterId");

                    b.Property<decimal>("purchaseRate");

                    b.Property<decimal>("quantity");

                    b.Property<DateTime?>("receiveDate");

                    b.Property<int?>("registrationTypeId");

                    b.Property<int?>("supplierId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("procurementSourceId");

                    b.HasIndex("purchaseOrderMasterId");

                    b.HasIndex("registrationTypeId");

                    b.HasIndex("supplierId");

                    b.ToTable("PurchaseInfo","FAMS");
                });

            modelBuilder.Entity("OPUSERP.FixedAsset.Data.Entity.MasterData.AssetYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetYearName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("AssetYear","FAMS");
                });

            modelBuilder.Entity("OPUSERP.FixedAsset.Data.Entity.MasterData.DepriciationPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DaysWorking");

                    b.Property<DateTime>("EDate");

                    b.Property<string>("MonthName");

                    b.Property<string>("PeriodName");

                    b.Property<DateTime>("SDate");

                    b.Property<int?>("YearID");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("islock");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("YearID");

                    b.ToTable("DepriciationPeriod","FAMS");
                });

            modelBuilder.Entity("OPUSERP.FixedAsset.Data.Entity.MasterData.DepriciationRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("depreciationName")
                        .HasMaxLength(400);

                    b.Property<string>("formulaType")
                        .HasMaxLength(20);

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("rate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("usefulLife");

                    b.HasKey("Id");

                    b.ToTable("DepriciationRate","FAMS");
                });

            modelBuilder.Entity("OPUSERP.FixedAsset.Data.Entity.MasterData.ProcurementSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("sourceName")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ProcurementSource","FAMS");
                });

            modelBuilder.Entity("OPUSERP.FixedAsset.Data.Entity.MasterData.RegistrationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RegistrationTypeName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("RegistrationType","FAMS");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.ACR.ACRActionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("acrType");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ACRActionType","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.ACR.ACRAuthority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CADesignationName");

                    b.Property<string>("CSADesignationName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("empDesignationName");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ACRAuthority","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.ACR.ACRProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("aCRScheduleId");

                    b.Property<int>("acrSeduleId");

                    b.Property<string>("actionType");

                    b.Property<int?>("actorId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("dueDate");

                    b.Property<int?>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks");

                    b.Property<string>("routingType");

                    b.Property<int?>("sequence");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("aCRScheduleId");

                    b.HasIndex("employeeInfoId");

                    b.ToTable("ACRProcess","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.ACR.ACRSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<int?>("employeeInfoId");

                    b.Property<DateTime>("endTime");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime>("startTime");

                    b.Property<int?>("status");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.ToTable("ACRSchedule","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.ACR.AcrEvaluationDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("acrEvaluationMasterId");

                    b.Property<string>("comments");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("evaluationDetailName")
                        .IsRequired();

                    b.Property<string>("evaluationDetailNameBn")
                        .IsRequired();

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("acrEvaluationMasterId");

                    b.ToTable("AcrEvaluationDetail","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.ACR.AcrEvaluationMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("evaluationMasterName")
                        .IsRequired();

                    b.Property<string>("evaluationMasterNameBn")
                        .IsRequired();

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("AcrEvaluationMaster","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.ACR.AcrEvaluationValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("acrEvaluationDetailId");

                    b.Property<int>("acrInitiateId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("marks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("acrEvaluationDetailId");

                    b.HasIndex("acrInitiateId");

                    b.ToTable("AcrEvaluationValue","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.ACR.AcrHealthInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("acrInitiateId");

                    b.Property<string>("bloodGroup");

                    b.Property<string>("bloodPressure");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("ecg");

                    b.Property<string>("height");

                    b.Property<string>("hoDesignation");

                    b.Property<string>("hoName");

                    b.Property<string>("hoOrganization");

                    b.Property<int?>("isDelete");

                    b.Property<string>("physicalDisorder");

                    b.Property<DateTime?>("signDate");

                    b.Property<string>("treatementClassification");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("vision");

                    b.Property<string>("weight");

                    b.Property<string>("xray");

                    b.HasKey("Id");

                    b.HasIndex("acrInitiateId");

                    b.ToTable("AcrHealthInfo","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.ACR.AcrInitiate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("acrDate");

                    b.Property<string>("acrType");

                    b.Property<DateTime?>("archivedate");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<int?>("isArchive");

                    b.Property<int?>("isDelete");

                    b.Property<string>("lateReason");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("AcrInitiate","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.ACR.AcrPersonalWorkDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("acrInitiateId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("acrInitiateId");

                    b.ToTable("AcrPersonalWorkDescription","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.ACR.AcrRoute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("acrInitiateId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("sequence");

                    b.Property<int?>("supervisorId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("acrInitiateId");

                    b.HasIndex("supervisorId");

                    b.ToTable("AcrRoute","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.ACR.AcrRouteEvaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("acrEvaluationMasterId");

                    b.Property<int?>("acrRouteId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("acrEvaluationMasterId");

                    b.HasIndex("acrRouteId");

                    b.ToTable("AcrRouteEvaluation","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.ACR.PhysicalProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("physicalType");

                    b.Property<string>("physicalUnit");

                    b.Property<string>("physicalValue");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("PhysicalProperty","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.ACR.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("developmentBudget")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("employeeId");

                    b.Property<int?>("employeeInfoId");

                    b.Property<decimal?>("infrasturcturBudget")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("noOfOfficer");

                    b.Property<int?>("noOfWarker");

                    b.Property<int?>("totalEmplyee");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.ToTable("Position","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.ACR.WorkHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<int?>("emplyeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("task");

                    b.Property<string>("teamPosition");

                    b.Property<int>("teamSize");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("workDuration");

                    b.Property<string>("workType");

                    b.HasKey("Id");

                    b.HasIndex("emplyeeInfoId");

                    b.ToTable("WorkHistory","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Assignment.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate");

                    b.Property<int?>("EntryNo");

                    b.Property<string>("Remarks");

                    b.Property<DateTime>("StartDate");

                    b.Property<int?>("assignmentTypeId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("departmentId");

                    b.Property<int?>("designationId");

                    b.Property<int>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("departmentId");

                    b.HasIndex("designationId");

                    b.HasIndex("employeeId");

                    b.ToTable("Assignment","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Attendance.AttendanceRoute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("attendanceUpdateApplyId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("routeOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("attendanceUpdateApplyId");

                    b.HasIndex("employeeId");

                    b.ToTable("AttendanceRoute","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Attendance.AttendanceUpdateApply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("applicationNo")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("applyDateTime");

                    b.Property<int?>("approvalStatus");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("notes");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.ToTable("AttendanceUpdateApply","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Attendance.AttendenceUpload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("empCode")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("entryDate");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("AttendenceUpload","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Attendance.EmpAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("attenUpdateAppBy")
                        .HasMaxLength(200);

                    b.Property<string>("attenUpdateBy")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("endTime")
                        .HasMaxLength(20);

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("latetime")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("punchCardNo")
                        .HasMaxLength(50);

                    b.Property<string>("remarks");

                    b.Property<string>("startTime")
                        .HasMaxLength(20);

                    b.Property<int?>("summaryId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("workDate")
                        .HasMaxLength(20);

                    b.Property<decimal?>("workingTime")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("EmpAttendance","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Attendance.EmployeePunchCardInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("employeeCode");

                    b.Property<int?>("isDelete");

                    b.Property<string>("punchCardNo")
                        .IsRequired();

                    b.Property<int>("shiftGroupMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("shiftGroupMasterId");

                    b.ToTable("EmployeePunchCardInfo","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Attendance.MovementTracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .HasMaxLength(300);

                    b.Property<string>("Contact")
                        .HasMaxLength(300);

                    b.Property<string>("DesignationName")
                        .HasMaxLength(300);

                    b.Property<string>("EmpName")
                        .HasMaxLength(250);

                    b.Property<string>("Latitude")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LoginTime");

                    b.Property<DateTime?>("LogoutTime");

                    b.Property<string>("Longitude")
                        .HasMaxLength(100);

                    b.Property<string>("Reason");

                    b.Property<int?>("Status");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("empCode")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("entryDate");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("MovementTracking","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.AwardPublication.AwardAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("awardId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("fileTitle");

                    b.Property<int?>("isDelete");

                    b.Property<string>("type");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("uploadFile");

                    b.HasKey("Id");

                    b.HasIndex("awardId");

                    b.ToTable("AwardAttachment","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.AwardPublication.AwardEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("awardDate");

                    b.Property<string>("awardName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("purpose");

                    b.Property<string>("status");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("AwardEntry","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.AwardPublication.PublicationAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("fileTitle");

                    b.Property<int?>("isDelete");

                    b.Property<int>("publicationId");

                    b.Property<string>("type");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("uploadFile");

                    b.HasKey("Id");

                    b.HasIndex("publicationId");

                    b.ToTable("PublicationAttachment","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.AwardPublication.PublicationEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("nameOfPublication");

                    b.Property<string>("place");

                    b.Property<string>("publicationType");

                    b.Property<string>("status");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("PublicationEntry","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.DisciplineInvestigation.DisciplinaryAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OffenseId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<DateTime>("endDate");

                    b.Property<string>("goFileURL");

                    b.Property<string>("goNumberWithDate");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("naturalPunishmentId");

                    b.Property<DateTime>("punishmentDate");

                    b.Property<string>("remarks");

                    b.Property<DateTime>("startingDate");

                    b.Property<string>("status")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("OffenseId");

                    b.HasIndex("employeeId");

                    b.HasIndex("naturalPunishmentId");

                    b.ToTable("DisciplinaryAction","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.DisciplineInvestigation.DisiciplinaryAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("disciplinaryId");

                    b.Property<int>("disiplinaryId");

                    b.Property<string>("fileTitle");

                    b.Property<int?>("isDelete");

                    b.Property<string>("type");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("uploadFile");

                    b.HasKey("Id");

                    b.HasIndex("disciplinaryId");

                    b.ToTable("DisiciplinaryAttachment","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.DisciplineInvestigation.NaturalPunishment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description");

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("NaturalPunishment","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.DisciplineInvestigation.Offense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description");

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Offense","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.AcrInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("advanceComment");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("effectiveDate");

                    b.Property<int>("employeeId");

                    b.Property<DateTime?>("endDate");

                    b.Property<string>("fileUrl")
                        .HasMaxLength(300);

                    b.Property<string>("finalStatus")
                        .HasMaxLength(200);

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks");

                    b.Property<int>("score");

                    b.Property<string>("signatoryCode")
                        .HasMaxLength(20);

                    b.Property<string>("signatoryDesg")
                        .HasMaxLength(100);

                    b.Property<string>("signatoryName")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("startDate");

                    b.Property<string>("supervisorCode")
                        .HasMaxLength(20);

                    b.Property<string>("supervisorDesg")
                        .HasMaxLength(100);

                    b.Property<string>("supervisorName")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("year")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("AcrInfo","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("blockSector");

                    b.Property<int?>("countryId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("districtId");

                    b.Property<int?>("divisionId");

                    b.Property<int>("employeeId");

                    b.Property<string>("houseVillage");

                    b.Property<int?>("isDelete");

                    b.Property<string>("postCode");

                    b.Property<string>("postOffice");

                    b.Property<string>("roadNumber");

                    b.Property<int?>("thanaId");

                    b.Property<string>("type")
                        .IsRequired();

                    b.Property<string>("union");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("countryId");

                    b.HasIndex("districtId");

                    b.HasIndex("divisionId");

                    b.HasIndex("employeeId");

                    b.HasIndex("thanaId");

                    b.ToTable("Address","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.BankInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("accountNumber")
                        .HasMaxLength(30);

                    b.Property<int?>("bankId");

                    b.Property<string>("branchName")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<string>("ibus")
                        .HasMaxLength(200);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("walletNumber")
                        .HasMaxLength(50);

                    b.Property<int?>("walletTypeId");

                    b.HasKey("Id");

                    b.HasIndex("bankId");

                    b.HasIndex("employeeId");

                    b.HasIndex("walletTypeId");

                    b.ToTable("BankInfo","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.Belongings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("assetNo")
                        .HasMaxLength(70);

                    b.Property<int?>("belongingItemId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description")
                        .HasMaxLength(400);

                    b.Property<int>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("issueDate");

                    b.Property<int?>("itemSpecificationId");

                    b.Property<DateTime?>("returnDate");

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("belongingItemId");

                    b.HasIndex("employeeId");

                    b.HasIndex("itemSpecificationId");

                    b.ToTable("Belongings","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.Children", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bin")
                        .HasMaxLength(50);

                    b.Property<string>("bloodGroup")
                        .HasMaxLength(30);

                    b.Property<string>("childName")
                        .HasMaxLength(250);

                    b.Property<string>("childNameBN")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("dateOfBirth");

                    b.Property<string>("designation")
                        .HasMaxLength(250);

                    b.Property<int>("disability");

                    b.Property<string>("disablityType");

                    b.Property<string>("education");

                    b.Property<int>("employeeId");

                    b.Property<string>("gender")
                        .HasMaxLength(30);

                    b.Property<int?>("isDelete");

                    b.Property<string>("nid")
                        .HasMaxLength(100);

                    b.Property<string>("occupation")
                        .HasMaxLength(250);

                    b.Property<string>("organization")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("Children","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.DisciplinaryLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OffenseId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<DateTime?>("endDate");

                    b.Property<string>("goFileURL");

                    b.Property<string>("goNumberWithDate");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("naturalPunishmentId");

                    b.Property<DateTime?>("punishmentDate");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("startingDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("OffenseId");

                    b.HasIndex("employeeId");

                    b.HasIndex("naturalPunishmentId");

                    b.ToTable("DisciplinaryLog","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.DrivingLicense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("category");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("dateOfExpair");

                    b.Property<DateTime?>("dateOfIssue");

                    b.Property<int>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("licenseNumber");

                    b.Property<string>("placeOfIssue");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("DrivingLicense","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.EducationalQualification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("degreeId");

                    b.Property<int>("employeeId");

                    b.Property<string>("grade");

                    b.Property<string>("institution");

                    b.Property<int?>("isDelete");

                    b.Property<string>("majorGroup");

                    b.Property<int?>("organizationId");

                    b.Property<int?>("passingYear");

                    b.Property<int?>("reldegreesubjectId");

                    b.Property<int?>("resultId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("degreeId");

                    b.HasIndex("employeeId");

                    b.HasIndex("organizationId");

                    b.HasIndex("reldegreesubjectId");

                    b.HasIndex("resultId");

                    b.ToTable("EducationalQualification","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.EmergencyContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("contact");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("designation");

                    b.Property<string>("email");

                    b.Property<int>("employeeID");

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<string>("organization");

                    b.Property<string>("relation");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeID");

                    b.ToTable("EmergencyContact","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeAward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("awardDate");

                    b.Property<string>("awardName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("issuedBy");

                    b.Property<string>("purpose");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("EmployeeAward","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeContractInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("contractEndDate");

                    b.Property<DateTime?>("contractStartDate");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("EmployeeContractInfo","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeCostCentre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("costCentreDate");

                    b.Property<int?>("costCentreId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("costCentreId");

                    b.HasIndex("employeeInfoId");

                    b.ToTable("EmployeeCostCentre","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeGrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("effectiveDate");

                    b.Property<int>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("salaryGradeId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("salaryGradeId");

                    b.ToTable("EmployeeGrade","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId");

                    b.Property<DateTime?>("LPRDate");

                    b.Property<DateTime?>("PRLEndDate");

                    b.Property<DateTime?>("PRLStartDate");

                    b.Property<int?>("activityStatus");

                    b.Property<string>("batch");

                    b.Property<string>("birthIdentificationNo")
                        .HasMaxLength(100);

                    b.Property<string>("birthPlace")
                        .HasMaxLength(250);

                    b.Property<string>("bloodGroup")
                        .HasMaxLength(20);

                    b.Property<int?>("branchId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("dateOfBirth");

                    b.Property<DateTime?>("dateOfPermanent");

                    b.Property<DateTime?>("dateofregularity");

                    b.Property<int?>("departmentId");

                    b.Property<string>("designation")
                        .HasMaxLength(250);

                    b.Property<int>("designationCheck");

                    b.Property<string>("disability")
                        .HasMaxLength(3);

                    b.Property<string>("disablityType");

                    b.Property<string>("emailAddress")
                        .HasMaxLength(150);

                    b.Property<string>("emailAddressPersonal")
                        .HasMaxLength(150);

                    b.Property<string>("employeeCode")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("employeeStatusId");

                    b.Property<int?>("employeeTypeId");

                    b.Property<string>("fatherNameBangla")
                        .HasMaxLength(250);

                    b.Property<string>("fatherNameEnglish")
                        .HasMaxLength(250);

                    b.Property<bool>("freedomFighter");

                    b.Property<string>("freedomFighterNo")
                        .HasMaxLength(150);

                    b.Property<int?>("functionInfoId");

                    b.Property<string>("gender")
                        .HasMaxLength(10);

                    b.Property<string>("govtID")
                        .HasMaxLength(250);

                    b.Property<string>("gpfAcNo")
                        .HasMaxLength(50);

                    b.Property<string>("gpfNomineeName")
                        .HasMaxLength(250);

                    b.Property<string>("homeDistrict")
                        .HasMaxLength(100);

                    b.Property<int?>("hrProgramId");

                    b.Property<int?>("hrUnitId");

                    b.Property<int?>("isApproved");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("joiningDateGovtService");

                    b.Property<DateTime?>("joiningDatePresentWorkstation");

                    b.Property<string>("joiningDesignation")
                        .HasMaxLength(250);

                    b.Property<int?>("locationId");

                    b.Property<string>("maritalStatus")
                        .HasMaxLength(20);

                    b.Property<string>("mobileNumberOffice")
                        .HasMaxLength(50);

                    b.Property<string>("mobileNumberPersonal")
                        .HasMaxLength(50);

                    b.Property<string>("motherNameBangla")
                        .HasMaxLength(250);

                    b.Property<string>("motherNameEnglish")
                        .HasMaxLength(250);

                    b.Property<string>("nameBangla")
                        .HasMaxLength(250);

                    b.Property<string>("nameEnglish")
                        .HasMaxLength(250);

                    b.Property<string>("nationalID")
                        .HasMaxLength(100);

                    b.Property<string>("nationality")
                        .HasMaxLength(100);

                    b.Property<string>("natureOfRequitment")
                        .HasMaxLength(100);

                    b.Property<string>("orgType")
                        .HasMaxLength(100);

                    b.Property<int?>("pNSId");

                    b.Property<string>("pabx")
                        .HasMaxLength(50);

                    b.Property<int?>("post");

                    b.Property<int?>("religionId");

                    b.Property<int?>("salaryStatus");

                    b.Property<string>("salaryStatusComment");

                    b.Property<string>("seniorityNumber")
                        .HasMaxLength(50);

                    b.Property<int?>("shiftGroupId");

                    b.Property<string>("skypeId")
                        .HasMaxLength(150);

                    b.Property<string>("specialSkill")
                        .HasMaxLength(250);

                    b.Property<string>("telephoneOffice")
                        .HasMaxLength(50);

                    b.Property<string>("telephoneResidence")
                        .HasMaxLength(50);

                    b.Property<string>("tin")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("branchId");

                    b.HasIndex("departmentId");

                    b.HasIndex("employeeStatusId");

                    b.HasIndex("employeeTypeId");

                    b.HasIndex("functionInfoId");

                    b.HasIndex("hrProgramId");

                    b.HasIndex("hrUnitId");

                    b.HasIndex("locationId");

                    b.HasIndex("pNSId");

                    b.HasIndex("religionId");

                    b.HasIndex("shiftGroupId");

                    b.ToTable("EmployeeInfo","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInsurance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NID")
                        .HasMaxLength(20);

                    b.Property<string>("age")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("dateOfBirth");

                    b.Property<int>("employeeInfoId");

                    b.Property<string>("gender")
                        .HasMaxLength(10);

                    b.Property<string>("imageUrl");

                    b.Property<DateTime?>("insuranceDate");

                    b.Property<int?>("isDelete");

                    b.Property<string>("name")
                        .HasMaxLength(350);

                    b.Property<string>("relation")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.ToTable("EmployeeInsurance","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("languageId");

                    b.Property<string>("proficiency")
                        .HasMaxLength(100);

                    b.Property<string>("reading")
                        .HasMaxLength(50);

                    b.Property<string>("speaking")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("writing")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("languageId");

                    b.ToTable("EmployeeLanguage","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeMembership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("membershipId");

                    b.Property<string>("membershipNo");

                    b.Property<string>("nameOrganization");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("membershipId");

                    b.ToTable("EmployeeMembership","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeOtherInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("busArea")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeInfoId");

                    b.Property<int?>("hRFacilityId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("simsId")
                        .HasMaxLength(200);

                    b.Property<string>("type")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("hRFacilityId");

                    b.ToTable("EmployeeOtherInfo","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeProjectActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeId");

                    b.Property<int?>("hRActivityId");

                    b.Property<int?>("hRDonerId");

                    b.Property<int?>("hRProjectId");

                    b.Property<int?>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("hRActivityId");

                    b.HasIndex("hRDonerId");

                    b.HasIndex("hRProjectId");

                    b.ToTable("EmployeeProjectActivity","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeProjectAssign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("projectId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("projectId");

                    b.ToTable("EmployeeProjectAssign","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeSignature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("url")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("EmployeeSignature","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.FinanceCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<string>("fnCode");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("FinanceCode","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.FreedomFighter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeID");

                    b.Property<int?>("isDelete");

                    b.Property<string>("number");

                    b.Property<string>("owner");

                    b.Property<string>("relationship");

                    b.Property<string>("remarks");

                    b.Property<string>("sectorNo");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeID");

                    b.ToTable("FreedomFighter","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.HRManualAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<string>("fileTitle");

                    b.Property<string>("fileUrl");

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("HRManualAttachment","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.HRPMSAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("attachmentDate");

                    b.Property<int?>("atttachmentCategoryId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<string>("fileTitle");

                    b.Property<string>("fileUrl");

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("atttachmentCategoryId");

                    b.HasIndex("employeeId");

                    b.ToTable("HRPMSAttachment","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.LeaveLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("leaveFrom")
                        .IsRequired();

                    b.Property<DateTime?>("leaveTo")
                        .IsRequired();

                    b.Property<int?>("leaveTypeId");

                    b.Property<string>("purposeOfLeave");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("leaveTypeId");

                    b.ToTable("LeaveLog","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.Nominee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BRN")
                        .HasMaxLength(150);

                    b.Property<string>("NID")
                        .HasMaxLength(20);

                    b.Property<string>("address");

                    b.Property<string>("contact")
                        .HasMaxLength(40);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeID");

                    b.Property<string>("guardianName")
                        .HasMaxLength(250);

                    b.Property<string>("imageUrl");

                    b.Property<int?>("isDelete");

                    b.Property<string>("name")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("nomineeDate");

                    b.Property<string>("relation")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("witnessName")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeID");

                    b.ToTable("Nominee","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.NomineeDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("nomineeFundId");

                    b.Property<int?>("nomineeId");

                    b.Property<decimal?>("persentence");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("nomineeFundId");

                    b.HasIndex("nomineeId");

                    b.ToTable("NomineeDetail","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.OfficeAssign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("deskNo");

                    b.Property<int?>("employeeInfoId");

                    b.Property<string>("floorNo");

                    b.Property<int?>("isDelete");

                    b.Property<string>("roomNo");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.ToTable("OfficeAssign","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.OtherActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("activityNameId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description");

                    b.Property<int>("employeeID");

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("activityNameId");

                    b.HasIndex("employeeID");

                    b.ToTable("OtherActivity","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.OtherQualification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeID");

                    b.Property<string>("instituteName");

                    b.Property<int?>("isDelete");

                    b.Property<string>("markGrade");

                    b.Property<int?>("otherQualificationHeadId");

                    b.Property<string>("passingYear");

                    b.Property<int?>("resultId");

                    b.Property<string>("subject");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeID");

                    b.HasIndex("otherQualificationHeadId");

                    b.HasIndex("resultId");

                    b.ToTable("OtherQualification","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.PassportDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("dateOfExpair");

                    b.Property<DateTime?>("dateOfIssue");

                    b.Property<int>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("passportNumber");

                    b.Property<string>("placeOfIssue");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("PassportDetails","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.Photograph", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks");

                    b.Property<string>("type")
                        .IsRequired();

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("url")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("Photograph","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.PriviousEmployment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("companyBusiness");

                    b.Property<string>("companyLocation");

                    b.Property<string>("companyName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("department");

                    b.Property<int>("employeeID");

                    b.Property<DateTime?>("endDate");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("organizationTypeId");

                    b.Property<string>("position");

                    b.Property<string>("responsibilities");

                    b.Property<DateTime?>("startDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeID");

                    b.HasIndex("organizationTypeId");

                    b.ToTable("PriviousEmployment","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.ProfessionalQualifications", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeID");

                    b.Property<string>("instituteName");

                    b.Property<int?>("isDelete");

                    b.Property<string>("markGrade");

                    b.Property<string>("passingYear");

                    b.Property<int?>("qualificationHeadId");

                    b.Property<int?>("resultId");

                    b.Property<string>("subject");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeID");

                    b.HasIndex("qualificationHeadId");

                    b.HasIndex("resultId");

                    b.ToTable("ProfessionalQualifications","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Basic");

                    b.Property<string>("Remarks");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("designationId");

                    b.Property<int?>("designationOldId");

                    b.Property<int>("employeeId");

                    b.Property<int?>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("promotionDate");

                    b.Property<string>("promotionType");

                    b.Property<int?>("salaryGradeId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("designationId");

                    b.HasIndex("designationOldId");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("salaryGradeId");

                    b.ToTable("Promotion","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.PromotionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime>("date");

                    b.Property<string>("designation");

                    b.Property<int?>("designationNewId");

                    b.Property<int?>("designationOldId");

                    b.Property<int>("employeeId");

                    b.Property<DateTime?>("goDate");

                    b.Property<string>("goNumber");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("payScaleId");

                    b.Property<string>("remark");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("designationNewId");

                    b.HasIndex("designationOldId");

                    b.HasIndex("employeeId");

                    b.HasIndex("payScaleId");

                    b.ToTable("PromotionLog","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.Publication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("publicationDate");

                    b.Property<string>("publicationName");

                    b.Property<string>("publicationPlace");

                    b.Property<string>("publicationType");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("Publication","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.QualificationAndValidation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("attachment");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeID");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isValid");

                    b.Property<int?>("qualificationHeadId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeID");

                    b.HasIndex("qualificationHeadId");

                    b.ToTable("QualificationAndValidation","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.Reference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("contact");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("designation");

                    b.Property<string>("email");

                    b.Property<int>("employeeID");

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<string>("organization");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeID");

                    b.ToTable("Reference","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.Spouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bin")
                        .HasMaxLength(100);

                    b.Property<string>("bloodGroup")
                        .HasMaxLength(30);

                    b.Property<string>("contact")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("dateOfBirth");

                    b.Property<string>("designation")
                        .HasMaxLength(250);

                    b.Property<string>("email")
                        .HasMaxLength(150);

                    b.Property<int>("employeeId");

                    b.Property<string>("gender")
                        .HasMaxLength(20);

                    b.Property<string>("highestEducation")
                        .HasMaxLength(450);

                    b.Property<string>("homeDistrict")
                        .HasMaxLength(100);

                    b.Property<int?>("isDelete");

                    b.Property<string>("nid")
                        .HasMaxLength(100);

                    b.Property<string>("occupation");

                    b.Property<string>("organization")
                        .HasMaxLength(450);

                    b.Property<string>("spouseName")
                        .HasMaxLength(250);

                    b.Property<string>("spouseNameBN")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("Spouse","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.Supervisor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("canFinalApprover")
                        .HasMaxLength(3);

                    b.Property<string>("commandOrder")
                        .HasMaxLength(2);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeID");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("supervisorDate");

                    b.Property<int?>("supervisorId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeID");

                    b.HasIndex("supervisorId");

                    b.ToTable("Supervisor","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.TraningLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("countryId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<DateTime?>("fromDate");

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks");

                    b.Property<string>("sponsoringAgency");

                    b.Property<DateTime?>("toDate");

                    b.Property<int?>("trainingCategoryId");

                    b.Property<int?>("trainingInstituteId");

                    b.Property<string>("trainingTitle");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("countryId");

                    b.HasIndex("employeeId");

                    b.HasIndex("trainingCategoryId");

                    b.HasIndex("trainingInstituteId");

                    b.ToTable("TraningLog","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.TransferLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("departmentId");

                    b.Property<int?>("designatioId");

                    b.Property<string>("designation");

                    b.Property<int>("employeeId");

                    b.Property<DateTime?>("from");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("salaryGradeId");

                    b.Property<DateTime?>("to");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("workStation");

                    b.HasKey("Id");

                    b.HasIndex("departmentId");

                    b.HasIndex("designatioId");

                    b.HasIndex("employeeId");

                    b.HasIndex("salaryGradeId");

                    b.ToTable("TransferLog","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.TraveInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("accountCode")
                        .HasMaxLength(250);

                    b.Property<int?>("countryId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<DateTime?>("endDate");

                    b.Property<string>("file");

                    b.Property<DateTime?>("goDate");

                    b.Property<string>("goNumber");

                    b.Property<int?>("hrProgramId");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("leaveEndDate");

                    b.Property<DateTime?>("leaveStartDate");

                    b.Property<string>("location");

                    b.Property<int?>("projectId");

                    b.Property<string>("purpose");

                    b.Property<string>("remarks");

                    b.Property<string>("sponsoringAgency");

                    b.Property<DateTime?>("startDate");

                    b.Property<string>("titleName")
                        .HasMaxLength(550);

                    b.Property<string>("titleOfFile");

                    b.Property<int?>("travelPurposeId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("countryId");

                    b.HasIndex("employeeId");

                    b.HasIndex("hrProgramId");

                    b.HasIndex("projectId");

                    b.HasIndex("travelPurposeId");

                    b.ToTable("TraveInfo","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.VisualData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("empCodeName")
                        .HasMaxLength(200);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("VisualData","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.WagesAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("blockSector");

                    b.Property<int?>("countryId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("districtId");

                    b.Property<int?>("divisionId");

                    b.Property<int>("employeeId");

                    b.Property<string>("houseVillage");

                    b.Property<int?>("isDelete");

                    b.Property<string>("postCode");

                    b.Property<string>("postOffice");

                    b.Property<string>("roadNumber");

                    b.Property<int?>("thanaId");

                    b.Property<string>("type")
                        .IsRequired();

                    b.Property<string>("union");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("countryId");

                    b.HasIndex("districtId");

                    b.HasIndex("divisionId");

                    b.HasIndex("employeeId");

                    b.HasIndex("thanaId");

                    b.ToTable("WagesAddress","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.WagesBankInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("accountNumber");

                    b.Property<string>("bankName");

                    b.Property<decimal?>("basicSalary");

                    b.Property<string>("branchName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<string>("ibus");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("WagesBankInfo","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.WagesEmergencyContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("contact");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("designation");

                    b.Property<string>("email");

                    b.Property<int>("employeeID");

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<string>("organization");

                    b.Property<string>("relation");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeID");

                    b.ToTable("WagesEmergencyContact","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.WagesEmployeeInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId");

                    b.Property<string>("LPRDate");

                    b.Property<string>("PRLEndDate");

                    b.Property<string>("PRLStartDate");

                    b.Property<int?>("activityStatus");

                    b.Property<string>("batch");

                    b.Property<string>("birthIdentificationNo")
                        .HasMaxLength(100);

                    b.Property<string>("birthPlace");

                    b.Property<string>("bloodGroup");

                    b.Property<int?>("branchId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("dateOfBirth");

                    b.Property<DateTime?>("dateOfPermanent");

                    b.Property<DateTime?>("dateofregularity");

                    b.Property<int?>("departmentId");

                    b.Property<string>("designation");

                    b.Property<int>("designationCheck");

                    b.Property<string>("disability");

                    b.Property<string>("emailAddress");

                    b.Property<string>("emailAddressPersonal");

                    b.Property<string>("employeeCode")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("employeeTypeId");

                    b.Property<string>("fatherNameBangla");

                    b.Property<string>("fatherNameEnglish");

                    b.Property<bool>("freedomFighter");

                    b.Property<string>("freedomFighterNo");

                    b.Property<string>("gender");

                    b.Property<string>("govtID")
                        .HasMaxLength(250);

                    b.Property<string>("gpfAcNo");

                    b.Property<string>("gpfNomineeName");

                    b.Property<string>("homeDistrict");

                    b.Property<int?>("isApproved");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("joiningDateGovtService");

                    b.Property<DateTime?>("joiningDatePresentWorkstation");

                    b.Property<string>("joiningDesignation");

                    b.Property<string>("maritalStatus");

                    b.Property<string>("mobileNumberOffice")
                        .HasMaxLength(50);

                    b.Property<string>("mobileNumberPersonal")
                        .HasMaxLength(50);

                    b.Property<string>("motherNameBangla");

                    b.Property<string>("motherNameEnglish");

                    b.Property<string>("nameBangla");

                    b.Property<string>("nameEnglish");

                    b.Property<string>("nationalID")
                        .HasMaxLength(100);

                    b.Property<string>("nationality");

                    b.Property<string>("natureOfRequitment")
                        .HasMaxLength(100);

                    b.Property<string>("orgType")
                        .HasMaxLength(100);

                    b.Property<int?>("pNSId");

                    b.Property<string>("pabx");

                    b.Property<int?>("post");

                    b.Property<int?>("religionId");

                    b.Property<string>("seniorityNumber")
                        .HasMaxLength(50);

                    b.Property<int?>("shiftGroupId");

                    b.Property<string>("skypeId");

                    b.Property<string>("specialSkill");

                    b.Property<string>("telephoneOffice");

                    b.Property<string>("telephoneResidence");

                    b.Property<string>("tin");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("branchId");

                    b.HasIndex("departmentId");

                    b.HasIndex("employeeTypeId");

                    b.HasIndex("pNSId");

                    b.HasIndex("religionId");

                    b.HasIndex("shiftGroupId");

                    b.ToTable("WagesEmployeeInfo","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.WagesLeftDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<int>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("reason");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("WagesLeftDetails","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.WagesPhotograph", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks");

                    b.Property<string>("type")
                        .IsRequired();

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("url")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("WagesPhotograph","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.WagesPriviousEmployment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("companyBusiness");

                    b.Property<string>("companyLocation");

                    b.Property<string>("companyName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("department");

                    b.Property<int>("employeeID");

                    b.Property<DateTime?>("endDate");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("organizationTypeId");

                    b.Property<string>("position");

                    b.Property<string>("responsibilities");

                    b.Property<DateTime?>("startDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeID");

                    b.HasIndex("organizationTypeId");

                    b.ToTable("WagesPriviousEmployment","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.WagesReference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("contact");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("designation");

                    b.Property<string>("email");

                    b.Property<int>("employeeID");

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<string>("organization");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeID");

                    b.ToTable("WagesReference","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Gratuity.GratuityPolicyDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Times");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("fromYear");

                    b.Property<int>("gratuityPolicyId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("toYear");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("gratuityPolicyId");

                    b.ToTable("GratuityPolicyDetail","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Gratuity.GratuityPolicyMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal>("daysDIv");

                    b.Property<int?>("isDelete");

                    b.Property<int>("isJoiningDate");

                    b.Property<int>("roundMode");

                    b.Property<int>("sbuId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("sbuId");

                    b.ToTable("GratuityPolicyMaster","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Leave.LeaveDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("dayEndTime")
                        .HasMaxLength(5);

                    b.Property<string>("dayStartTime")
                        .HasMaxLength(5);

                    b.Property<string>("description")
                        .HasMaxLength(500);

                    b.Property<int?>("isDelete");

                    b.Property<string>("leaveDayName")
                        .HasMaxLength(200);

                    b.Property<string>("leaveDayNameBn")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("LeaveDay","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Leave.LeaveOpeningBalance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("leaveCarryDays");

                    b.Property<int?>("leaveDays");

                    b.Property<int?>("leaveTypeId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("yearId");

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("leaveTypeId");

                    b.HasIndex("yearId");

                    b.ToTable("LeaveOpeningBalance","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Leave.LeavePolicy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeId");

                    b.Property<int?>("govtHolidayBridge");

                    b.Property<int?>("highestCarryForward");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("leaveTypeId");

                    b.Property<int?>("maxBridgeLimit");

                    b.Property<string>("paymentType")
                        .HasMaxLength(20);

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("weeklyOffBridge");

                    b.Property<int?>("yearId");

                    b.Property<int?>("yearlyMaxCarry");

                    b.Property<int?>("yearlyMaxLeave");

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("leaveTypeId");

                    b.HasIndex("yearId");

                    b.ToTable("LeavePolicy","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Leave.LeaveRegister", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("daysLeave");

                    b.Property<string>("emergencyContactNo");

                    b.Property<int?>("employeeId");

                    b.Property<string>("fileUrl");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("leaveDayId");

                    b.Property<DateTime?>("leaveFrom")
                        .IsRequired();

                    b.Property<int?>("leaveStatus");

                    b.Property<DateTime?>("leaveTo")
                        .IsRequired();

                    b.Property<int?>("leaveTypeId");

                    b.Property<string>("paymentOption")
                        .HasMaxLength(20);

                    b.Property<string>("purposeOfLeave");

                    b.Property<int?>("substitutionUserId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("whenLeave");

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("leaveDayId");

                    b.HasIndex("leaveTypeId");

                    b.HasIndex("substitutionUserId");

                    b.ToTable("LeaveRegister","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Leave.LeaveRoute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("leaveRegisterId");

                    b.Property<int?>("routeOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("leaveRegisterId");

                    b.ToTable("LeaveRoute","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Leave.LeaveStatusLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Status");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("leaveRegisterId");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("leaveRegisterId");

                    b.ToTable("LeaveStatusLog","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Leave.LeaveType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description");

                    b.Property<int?>("isDelete");

                    b.Property<string>("nameBn");

                    b.Property<string>("nameEn")
                        .IsRequired();

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("LeaveType","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Leave.WagesLeaveRegister", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("daysLeave");

                    b.Property<string>("emergencyContactNo");

                    b.Property<int?>("employeeId");

                    b.Property<string>("fileUrl");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("leaveFrom")
                        .IsRequired();

                    b.Property<int?>("leaveStatus");

                    b.Property<DateTime?>("leaveTo")
                        .IsRequired();

                    b.Property<int?>("leaveTypeId");

                    b.Property<string>("purposeOfLeave");

                    b.Property<int?>("substitutionUserId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("whenLeave");

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("leaveTypeId");

                    b.HasIndex("substitutionUserId");

                    b.ToTable("WagesLeaveRegister","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Library.BookEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("almiraNo");

                    b.Property<int?>("bookCategoryId");

                    b.Property<string>("bookId")
                        .IsRequired();

                    b.Property<string>("bookName")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("department");

                    b.Property<string>("description");

                    b.Property<string>("editionNo");

                    b.Property<int?>("isDelete");

                    b.Property<string>("orgType")
                        .HasMaxLength(100);

                    b.Property<string>("price")
                        .HasMaxLength(100);

                    b.Property<string>("publishDate");

                    b.Property<string>("publisher")
                        .HasMaxLength(250);

                    b.Property<string>("quantity");

                    b.Property<string>("remark");

                    b.Property<string>("satus");

                    b.Property<string>("sbnNumber")
                        .HasMaxLength(100);

                    b.Property<string>("selfNo");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("workStation");

                    b.Property<string>("writterName")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("bookCategoryId");

                    b.ToTable("BookEntry","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Library.BorrowerInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("bookEntryId");

                    b.Property<int>("borrowerId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("dateOfBorrow");

                    b.Property<DateTime?>("dateOfReturn");

                    b.Property<int?>("isDelete");

                    b.Property<int>("isReturned");

                    b.Property<string>("noOfCopy");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("bookEntryId");

                    b.HasIndex("borrowerId");

                    b.ToTable("BorrowerInfo","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.ActivityName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("activityTypeId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("activityTypeId");

                    b.ToTable("ActivityName","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.ActivityStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("shortName");

                    b.Property<string>("statusName")
                        .IsRequired();

                    b.Property<string>("statusNameBn");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ActivityStatus","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.ApprovalDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("approvalMasterId");

                    b.Property<int?>("approverId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("sortOrder");

                    b.Property<string>("status");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("approvalMasterId");

                    b.HasIndex("approverId");

                    b.ToTable("ApprovalDetail","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.ApprovalMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("approvalTypeId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("approvalTypeId");

                    b.HasIndex("employeeInfoId");

                    b.ToTable("ApprovalMaster","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.ApprovalType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("approvalTypeName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ApprovalType","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.AttendenceApi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmpName");

                    b.Property<string>("Latitudein");

                    b.Property<string>("Latitudeout");

                    b.Property<DateTime?>("LoginTime");

                    b.Property<DateTime?>("LogoutTime");

                    b.Property<string>("Longitudein");

                    b.Property<string>("Longitudeout");

                    b.Property<string>("Reason");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("empCode");

                    b.Property<DateTime?>("entryDate");

                    b.Property<int?>("isDelete");

                    b.Property<int>("status");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("AttendenceApi","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.AtttachmentCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("atttachmentGroupId");

                    b.Property<string>("categoryName")
                        .IsRequired();

                    b.Property<string>("categoryNameBn")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("atttachmentGroupId");

                    b.ToTable("AtttachmentCategory","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.AtttachmentGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("groupName")
                        .HasMaxLength(250);

                    b.Property<string>("groupNameBn")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("AtttachmentGroup","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.Award", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("awardName")
                        .IsRequired();

                    b.Property<string>("awardNameBn");

                    b.Property<string>("awardShortName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Award","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.BelongingItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ItemCode");

                    b.Property<string>("ItemName");

                    b.Property<string>("brandName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("dateOfLastPhysicalVerification");

                    b.Property<DateTime?>("dateOfProcurement");

                    b.Property<DateTime?>("dateOfSubmission");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemId");

                    b.Property<string>("modelName");

                    b.Property<string>("serialNumber");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("itemId");

                    b.ToTable("belongingItems");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.BookCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bookCategoey")
                        .IsRequired();

                    b.Property<string>("bookCategoeyBn");

                    b.Property<string>("bookCategoryShortName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("BookCategory","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.Cadre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cadreName")
                        .IsRequired();

                    b.Property<string>("cadreNameBn");

                    b.Property<string>("cadreShortName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Cadre","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.CommentORSuggestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("commentORSuggestionName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("commentORSuggestions");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.CourseTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("nameBN");

                    b.Property<string>("nameEN");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("CourseTitle","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.Degree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("degreeName")
                        .IsRequired();

                    b.Property<string>("degreeNameBn");

                    b.Property<string>("degreeShortName");

                    b.Property<int?>("isDelete");

                    b.Property<int>("levelofeducationId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("levelofeducationId");

                    b.ToTable("Degree","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("deptCode");

                    b.Property<string>("deptName")
                        .IsRequired();

                    b.Property<string>("deptNameBn");

                    b.Property<int?>("isDelete");

                    b.Property<string>("shortName");

                    b.Property<DateTime?>("startDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Department","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.Designation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("designationCode")
                        .IsRequired();

                    b.Property<string>("designationName")
                        .IsRequired();

                    b.Property<string>("designationNameBN");

                    b.Property<int?>("isDelete");

                    b.Property<string>("shortName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Designation","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.EmpAttendenceTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cardNo");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("currentDateTime");

                    b.Property<string>("date");

                    b.Property<int?>("isDelete");

                    b.Property<string>("time");

                    b.Property<string>("timeOut");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("EmpAttendenceTemp","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.EmployeeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("empType")
                        .IsRequired();

                    b.Property<string>("empTypeBn");

                    b.Property<int?>("isDelete");

                    b.Property<string>("shortName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("EmployeeType","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.FeelAboutTheFollowing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("feelAboutTheFollowingName");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("feelAboutTheFollowings");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.FunctionInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("branchCode");

                    b.Property<string>("branchUnitName");

                    b.Property<string>("branchUnitNameBN");

                    b.Property<int?>("companyId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.ToTable("FunctionInfo","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.HRActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("code");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("HRActivity","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.HRDoner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("code");

                    b.Property<string>("contactNumber");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("HRDoner","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.HRFacility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("facilityCode")
                        .HasMaxLength(100);

                    b.Property<string>("facilityName")
                        .HasMaxLength(500);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("HRFacility","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.HRPMSActivityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("HRPMSActivityType","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.HRPMSOrganizationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("HRPMSOrganizationType","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.HRProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("code");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("HRProject","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.Holiday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("holiday");

                    b.Property<string>("holidayName");

                    b.Property<string>("holidayNameBn");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("weeklyHoliday");

                    b.Property<int?>("year");

                    b.HasKey("Id");

                    b.ToTable("Holiday","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.HrProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("endDate");

                    b.Property<int?>("isDelete");

                    b.Property<string>("programName")
                        .HasMaxLength(250);

                    b.Property<string>("programNameBn")
                        .HasMaxLength(250);

                    b.Property<string>("shortName")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("startDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("HrProgram","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.HrUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("shortName")
                        .HasMaxLength(150);

                    b.Property<string>("unitName")
                        .HasMaxLength(250);

                    b.Property<string>("unitNameBn")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("HrUnit","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.InterviewComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("commentText");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("interviewComments");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("languageName")
                        .IsRequired();

                    b.Property<string>("languageNameBn");

                    b.Property<string>("languageShortName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Language","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.LevelofEducation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("levelofeducationName")
                        .IsRequired();

                    b.Property<string>("levelofeducationNameBn");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("LevelofEducation","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("branchCode");

                    b.Property<string>("branchUnitName");

                    b.Property<string>("branchUnitNameBN");

                    b.Property<int?>("companyId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.ToTable("Location","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.Membership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("membershipName")
                        .IsRequired();

                    b.Property<string>("membershipNameBn");

                    b.Property<string>("membershipShortName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Membership","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.MunicipilityLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("locationName")
                        .IsRequired();

                    b.Property<string>("locationNameBn");

                    b.Property<string>("shortName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("MunicipilityLocation","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.NomineeFund", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("NomineeFund","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.Occupation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("occupationName")
                        .IsRequired();

                    b.Property<string>("occupationNameBn");

                    b.Property<string>("occupationShortName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Occupation","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("organizationName")
                        .IsRequired();

                    b.Property<string>("organizationNameBn");

                    b.Property<string>("organizationType")
                        .IsRequired();

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Organization","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.OtherQualificationHead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("OtherQualificationHead","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.PNS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("code");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("PNS","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.PayAndBenefits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("payAndBenefitsName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("payAndBenefits");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.QualificationHead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("QualificationHead","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.ReasonForLeaving", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("reasonName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("reasonForLeavings");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.RelDegreeSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("degreeId");

                    b.Property<int?>("isDelete");

                    b.Property<int>("subjectId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("degreeId");

                    b.HasIndex("subjectId");

                    b.ToTable("RelDegreeSubject","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.Relation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("relationName")
                        .IsRequired();

                    b.Property<string>("relationNameBn");

                    b.Property<string>("relationShortName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Relation","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.Religion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name")
                        .IsRequired();

                    b.Property<string>("nameBn");

                    b.Property<string>("shortName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Religion","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<decimal>("resultMaxValue");

                    b.Property<string>("resultName")
                        .IsRequired();

                    b.Property<string>("resultNameBn");

                    b.Property<string>("resultShortName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Result","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.RlnSBUPNS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("pNSId");

                    b.Property<int?>("specialBranchUnitId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("pNSId");

                    b.HasIndex("specialBranchUnitId");

                    b.ToTable("RlnSBUPNS","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.ServiceStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("statusName")
                        .IsRequired();

                    b.Property<string>("statusNameBn");

                    b.Property<string>("statusShortName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ServiceStatus","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.ShiftGroupDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("endTime")
                        .IsRequired();

                    b.Property<bool>("holiday");

                    b.Property<int?>("isDelete");

                    b.Property<int>("shiftGroupMasterId");

                    b.Property<string>("startTime")
                        .IsRequired();

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("weekDay")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("shiftGroupMasterId");

                    b.ToTable("ShiftGroupDetail","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.ShiftGroupMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("shiftName")
                        .IsRequired();

                    b.Property<string>("shiftNameBn");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ShiftGroupMaster","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.SpecialBranchUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("branchCode");

                    b.Property<string>("branchUnitName");

                    b.Property<string>("branchUnitNameBN");

                    b.Property<int?>("companyId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isdefault");

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.ToTable("SpecialBranchUnit","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("subjectName")
                        .IsRequired();

                    b.Property<string>("subjectNameBn");

                    b.Property<string>("subjectShortName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Subject","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.TempDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("daysInBetween");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("TempDay","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.TrainingCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("trainingCategoryName")
                        .IsRequired();

                    b.Property<string>("trainingCategoryNameBn");

                    b.Property<string>("trainingCategoryShortName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("TrainingCategory","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.TrainingInstitute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("trainingInstituteName")
                        .IsRequired();

                    b.Property<string>("trainingInstituteNameBn");

                    b.Property<string>("trainingInstituteShortName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("TrainingInstitute","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.TravelPurpose", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("purposeName")
                        .IsRequired();

                    b.Property<string>("purposeNameBn");

                    b.Property<string>("purposeShortName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("TravelPurpose","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.TravelVehicleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("TravelVehicleType","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("vehicleShortName");

                    b.Property<string>("vehicleType")
                        .IsRequired();

                    b.Property<string>("vehicleTypeBn");

                    b.HasKey("Id");

                    b.ToTable("Vehicle","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.Year", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("year");

                    b.HasKey("Id");

                    b.ToTable("Year","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Organogram.EmploymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("nameBN");

                    b.Property<string>("nameEN");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("EmploymentType","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Organogram.OrganizationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("nameBN");

                    b.Property<string>("nameEN");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("OrganizationType","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Organogram.OrganoOrganization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("nameBN");

                    b.Property<string>("nameEN");

                    b.Property<int?>("organizationTypeId");

                    b.Property<int?>("organoOrganizationId");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("organizationTypeId");

                    b.HasIndex("organoOrganizationId");

                    b.ToTable("OrganoOrganization","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Organogram.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IsHead");

                    b.Property<int?>("altDesignationId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("designationId");

                    b.Property<int?>("isDelete");

                    b.Property<int>("numberOfPost");

                    b.Property<int?>("organoOrganizationId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("altDesignationId");

                    b.HasIndex("designationId");

                    b.HasIndex("organoOrganizationId");

                    b.ToTable("Post","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Organogram.PostDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssaignBy");

                    b.Property<DateTime?>("assaignDate");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeId");

                    b.Property<int?>("employmentTypeId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("postId");

                    b.Property<int?>("postingTypeId");

                    b.Property<string>("remarks");

                    b.Property<int?>("reportingBossId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("employmentTypeId");

                    b.HasIndex("postId");

                    b.HasIndex("postingTypeId");

                    b.HasIndex("reportingBossId");

                    b.ToTable("PostDetails","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Organogram.PostingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("nameBN");

                    b.Property<string>("nameEN");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("PostingType","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.PromotionAndTransfer.PromotionAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("fileTitle");

                    b.Property<int?>("isDelete");

                    b.Property<int>("promotionId");

                    b.Property<string>("type");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("uploadFile");

                    b.HasKey("Id");

                    b.HasIndex("promotionId");

                    b.ToTable("PromotionAttachment","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.PromotionAndTransfer.PromotionEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("basic");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("date");

                    b.Property<int>("employeeId");

                    b.Property<string>("goDate");

                    b.Property<string>("goNumber");

                    b.Property<int?>("isDelete");

                    b.Property<string>("nature");

                    b.Property<string>("payScale");

                    b.Property<string>("remark");

                    b.Property<string>("status");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("PromotionEntry","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.PromotionAndTransfer.TransferAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("fileTitle");

                    b.Property<int?>("isDelete");

                    b.Property<int>("taransferId");

                    b.Property<int?>("transferId");

                    b.Property<string>("type");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("uploadFile");

                    b.HasKey("Id");

                    b.HasIndex("transferId");

                    b.ToTable("TransferAttachment","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.PromotionAndTransfer.TransferEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("currentDesignation");

                    b.Property<string>("currentGrade");

                    b.Property<string>("currentPlace");

                    b.Property<string>("effectDate");

                    b.Property<int>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("joiningDate");

                    b.Property<string>("newDesignation");

                    b.Property<string>("newGrade");

                    b.Property<string>("newPlace");

                    b.Property<string>("orderDate");

                    b.Property<string>("remark");

                    b.Property<string>("status");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("TransferEntry","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.PunishmentCharge.Charge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("chargeDate");

                    b.Property<string>("chargeFor");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<int?>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("letterNo");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.ToTable("Charge","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.PunishmentCharge.Punishment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<int?>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("letterNo");

                    b.Property<DateTime>("punishmentDate");

                    b.Property<string>("punishmentFor");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.ToTable("Punishment","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Recruitment.ApplicantVerification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MyProperty");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ApplicantVerification","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Recruitment.ApplicationEdu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("applicationFormId");

                    b.Property<string>("boardUniversity");

                    b.Property<string>("country");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("degree");

                    b.Property<string>("gpaDivision");

                    b.Property<string>("institution");

                    b.Property<int?>("isDelete");

                    b.Property<string>("mainSubject");

                    b.Property<string>("rollNo");

                    b.Property<string>("type")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("yearOfCertification");

                    b.HasKey("Id");

                    b.HasIndex("applicationFormId");

                    b.ToTable("ApplicationEdu","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Recruitment.ApplicationExam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("passMark");

                    b.Property<string>("totalMark");

                    b.Property<string>("type");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ApplicationExam","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Recruitment.ApplicationExp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("applicationFormId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("from");

                    b.Property<int?>("isDelete");

                    b.Property<string>("officeName");

                    b.Property<string>("position");

                    b.Property<DateTime?>("to");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("applicationFormId");

                    b.ToTable("ApplicationExp","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Recruitment.ApplicationForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("binNO")
                        .HasMaxLength(100);

                    b.Property<string>("birtPlace")
                        .HasMaxLength(100);

                    b.Property<DateTime>("birthDate");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("email")
                        .HasMaxLength(250);

                    b.Property<string>("fNmaeBN");

                    b.Property<string>("fNmaeEN");

                    b.Property<string>("gender");

                    b.Property<int?>("isDelete");

                    b.Property<string>("mNmaeBN");

                    b.Property<string>("mNmaeEN");

                    b.Property<string>("mobile")
                        .HasMaxLength(50);

                    b.Property<string>("nameBN");

                    b.Property<string>("nameEN");

                    b.Property<string>("nationality")
                        .HasMaxLength(50);

                    b.Property<string>("nidNO")
                        .HasMaxLength(100);

                    b.Property<string>("occupation");

                    b.Property<string>("payDoc");

                    b.Property<string>("payRef");

                    b.Property<int?>("religionId");

                    b.Property<string>("sNameBN");

                    b.Property<string>("sNameEN");

                    b.Property<string>("type");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ApplicationForm","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Recruitment.ApplicationQuota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("applicationFormId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("document");

                    b.Property<int?>("isDelete");

                    b.Property<string>("relation");

                    b.Property<string>("type");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("applicationFormId");

                    b.ToTable("ApplicationQuota","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Recruitment.CallForExam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("applicationExamId");

                    b.Property<int>("applicationFormId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("obtainedMark");

                    b.Property<string>("status");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("applicationExamId");

                    b.HasIndex("applicationFormId");

                    b.ToTable("CallForExam","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Recruitment.ExitInterview.ExitInterviewComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("commentText");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("exitInterviewMasterId");

                    b.Property<int?>("interviewCommentId");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("exitInterviewMasterId");

                    b.HasIndex("interviewCommentId");

                    b.ToTable("ExitInterviewComment","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Recruitment.ExitInterview.ExitInterviewFeelAndFollowings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("exitInterviewMasterId");

                    b.Property<string>("feelAboutFollowinsText");

                    b.Property<int?>("feelAboutTheFollowingId");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("exitInterviewMasterId");

                    b.HasIndex("feelAboutTheFollowingId");

                    b.ToTable("ExitInterviewFeelAndFollowings","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Recruitment.ExitInterview.ExitInterviewMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("lastWithdrawnSalary");

                    b.Property<DateTime?>("startDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("ExitInterviewMaster","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Recruitment.ExitInterview.ExitInterviewPayNBenefits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("exitInterviewMasterId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("payAndBenefitsId");

                    b.Property<string>("payAndBenefitsText");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("exitInterviewMasterId");

                    b.HasIndex("payAndBenefitsId");

                    b.ToTable("ExitInterviewPayNBenefits","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Recruitment.ExitInterview.ExitInterviewReasonOfLeaving", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("exitInterviewMasterId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("reasonForLeavingId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("exitInterviewMasterId");

                    b.HasIndex("reasonForLeavingId");

                    b.ToTable("ExitInterviewReasonOfLeaving","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Recruitment.ExitInterview.ExitInterviewSuggestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("commentORSuggestionId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("exitInterviewMasterId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("suggestionText");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("commentORSuggestionId");

                    b.HasIndex("exitInterviewMasterId");

                    b.ToTable("ExitInterviewSuggestion","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Recruitment.JobCircular", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("applicationDeadLine");

                    b.Property<string>("applicationFee");

                    b.Property<string>("comments");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("educationalQualification");

                    b.Property<int?>("isDelete");

                    b.Property<string>("jobType");

                    b.Property<DateTime?>("lastDateOfWrittenExam");

                    b.Property<int>("leastExperience");

                    b.Property<string>("location")
                        .HasMaxLength(40);

                    b.Property<string>("mainSubject");

                    b.Property<int>("maxAge");

                    b.Property<int>("maxAgeQuota");

                    b.Property<int>("noOfPosition");

                    b.Property<string>("otherQualification");

                    b.Property<string>("positionName");

                    b.Property<string>("project");

                    b.Property<string>("recruitmentType");

                    b.Property<string>("reference");

                    b.Property<string>("status");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("JobCircular","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.RetirementAndTermination.PRLApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("applicationDate");

                    b.Property<string>("applicationName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("duration");

                    b.Property<int>("employeeId");

                    b.Property<string>("fromDate");

                    b.Property<int?>("isDelete");

                    b.Property<string>("status");

                    b.Property<string>("toDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("PRLApplication","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.RetirementAndTermination.PRLAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("fileTitle");

                    b.Property<int?>("isDelete");

                    b.Property<int>("prlApplicationid");

                    b.Property<string>("type");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("uploadFile");

                    b.HasKey("Id");

                    b.HasIndex("prlApplicationid");

                    b.ToTable("PRLAttachment","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.RetirementAndTermination.ResignInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("lastWorkingDate");

                    b.Property<DateTime?>("resignDate");

                    b.Property<string>("resignReason")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("ResignInformation","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.RewardInfo.Reward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<int?>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("letterNo");

                    b.Property<string>("remarks");

                    b.Property<string>("rewardDate");

                    b.Property<string>("rewardName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.ToTable("Reward","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Training.Evaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("comment");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeId");

                    b.Property<DateTime?>("evaluationDate");

                    b.Property<int?>("evaluationFectorsId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("optainedValue");

                    b.Property<int?>("trainerId");

                    b.Property<int?>("trainingInfoId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("evaluationFectorsId");

                    b.HasIndex("trainerId");

                    b.HasIndex("trainingInfoId");

                    b.ToTable("Evaluation","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Training.EvaluationFectors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("details");

                    b.Property<int?>("isDelete");

                    b.Property<string>("maxValue");

                    b.Property<string>("minValue");

                    b.Property<string>("name");

                    b.Property<string>("status");

                    b.Property<string>("unit");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("EvaluationFectors","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Training.ExamResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("comment");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("optainedMarks");

                    b.Property<int?>("trainingExamId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("trainingExamId");

                    b.ToTable("ExamResult","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Training.ModuleTrainingCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("nameBN");

                    b.Property<string>("nameEN");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ModuleTrainingCategory","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Training.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("endDate");

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<DateTime?>("startDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Plan","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Training.PlanDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<string>("numberOfTraining");

                    b.Property<int?>("planId");

                    b.Property<int?>("trainingOfferId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("planId");

                    b.HasIndex("trainingOfferId");

                    b.ToTable("PlanDetails","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Training.RlnTrainingTrainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("trainerId");

                    b.Property<int?>("trainingOfferId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("trainerId");

                    b.HasIndex("trainingOfferId");

                    b.ToTable("RlnTrainingTrainer","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Training.SessionAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("status");

                    b.Property<int?>("trainingInfoDetailsId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("trainingInfoDetailsId");

                    b.ToTable("SessionAttendance","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Training.Trainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("type");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("Trainer","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Training.TrainingAllocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("postDetailsId");

                    b.Property<string>("priorityLevel");

                    b.Property<string>("remarks");

                    b.Property<int?>("trainingInfoId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("postDetailsId");

                    b.HasIndex("trainingInfoId");

                    b.ToTable("TrainingAllocation","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Training.TrainingDeliverables", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("deliverable");

                    b.Property<string>("details");

                    b.Property<DateTime?>("dueDate");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("trainingInfoId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("trainingInfoId");

                    b.ToTable("TrainingDeliverables","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Training.TrainingExam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("endTimestamp");

                    b.Property<int?>("isDelete");

                    b.Property<string>("maxValue");

                    b.Property<string>("minValue");

                    b.Property<string>("modeOfExam");

                    b.Property<string>("name");

                    b.Property<DateTime?>("startTimestamp");

                    b.Property<string>("syllabus");

                    b.Property<int?>("trainerId");

                    b.Property<int?>("trainingInfoId");

                    b.Property<string>("unit");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("trainerId");

                    b.HasIndex("trainingInfoId");

                    b.ToTable("TrainingExam","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Training.TrainingInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("endDate");

                    b.Property<int?>("isDelete");

                    b.Property<int>("maxParticipate");

                    b.Property<string>("name");

                    b.Property<int>("numberOfFreeSeat");

                    b.Property<int?>("organizationId");

                    b.Property<int?>("planDetailsId");

                    b.Property<DateTime?>("startDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("organizationId");

                    b.HasIndex("planDetailsId");

                    b.ToTable("TrainingInfo","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Training.TrainingInfoDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("content");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("endTimestamp");

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<string>("startTimestamp");

                    b.Property<int?>("trainerId");

                    b.Property<int?>("trainingInfoId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("trainerId");

                    b.HasIndex("trainingInfoId");

                    b.ToTable("TrainingInfoDetails","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Training.TrainingMiscallenous", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("activityDetails");

                    b.Property<string>("activityHead");

                    b.Property<string>("costOfAction");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("endTimestamp");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("startTimestamp");

                    b.Property<int?>("trainingInfoId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("trainingInfoId");

                    b.ToTable("TrainingMiscallenous","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Training.TrainingOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("benifits");

                    b.Property<string>("content");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("duration");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("moduleTrainingCategoryId");

                    b.Property<string>("name");

                    b.Property<string>("syllabus");

                    b.Property<string>("type");

                    b.Property<string>("units");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("moduleTrainingCategoryId");

                    b.ToTable("TrainingOffer","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.TrainingNew.EnrolledTrainee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NID");

                    b.Property<string>("address");

                    b.Property<string>("completionStatus");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("designation");

                    b.Property<string>("email");

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("mobile");

                    b.Property<string>("name");

                    b.Property<int>("positon");

                    b.Property<string>("remarks");

                    b.Property<string>("result");

                    b.Property<int?>("trainingInfoNewId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("workingPlace");

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("trainingInfoNewId");

                    b.ToTable("EnrolledTrainee","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.TrainingNew.ResourcePerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address");

                    b.Property<string>("contactNumber");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("designation");

                    b.Property<string>("email");

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<string>("orgType");

                    b.Property<string>("performance");

                    b.Property<string>("remarks");

                    b.Property<string>("specialization");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("workPlace");

                    b.HasKey("Id");

                    b.ToTable("ResourcePerson","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.TrainingNew.TrainingInfoNew", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("amount");

                    b.Property<string>("amountActual");

                    b.Property<string>("budget");

                    b.Property<int?>("countryId");

                    b.Property<string>("course");

                    b.Property<string>("courseObjective");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeTypeId");

                    b.Property<string>("employeeTypeNames");

                    b.Property<string>("employeeTypes");

                    b.Property<DateTime?>("endDate");

                    b.Property<DateTime?>("endDateActual");

                    b.Property<int?>("isDelete");

                    b.Property<string>("location");

                    b.Property<int>("noOfParticipants");

                    b.Property<int>("noOfParticipantsActual");

                    b.Property<string>("orgType");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("startDate");

                    b.Property<DateTime?>("startDateActual");

                    b.Property<int>("status");

                    b.Property<int?>("trainingCategoryId");

                    b.Property<int?>("trainingInstituteId");

                    b.Property<int>("trainingType");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("year");

                    b.HasKey("Id");

                    b.HasIndex("countryId");

                    b.HasIndex("employeeTypeId");

                    b.HasIndex("trainingCategoryId");

                    b.HasIndex("trainingInstituteId");

                    b.ToTable("TrainingInfoNew","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.TrainingNew.TrainingResourcePerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("comments");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks");

                    b.Property<int?>("resourcePersonId");

                    b.Property<int?>("trainingInfoNewId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("resourcePersonId");

                    b.HasIndex("trainingInfoNewId");

                    b.ToTable("TrainingResourcePerson","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Travel.TravelMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("accountNumber");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<int>("employeeID");

                    b.Property<int?>("hRActivityId");

                    b.Property<int?>("hRDonerId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("purpose");

                    b.Property<int?>("status");

                    b.Property<string>("travelNumber");

                    b.Property<int?>("travelProjectId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeID");

                    b.HasIndex("hRActivityId");

                    b.HasIndex("hRDonerId");

                    b.HasIndex("travelProjectId");

                    b.ToTable("TravelMaster","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Travel.TravelRoute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("routeOrder");

                    b.Property<int?>("travelMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("travelMasterId");

                    b.ToTable("TravelRoute","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Travel.TravelStatusLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Status");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<int>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks");

                    b.Property<int?>("travelMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("travelMasterId");

                    b.ToTable("TravelStatusLog","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Travel.TravellerInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeID");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("travelMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeID");

                    b.HasIndex("travelMasterId");

                    b.ToTable("TravellerInfo","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Travel.TravellingInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("accommodationDaaress");

                    b.Property<DateTime?>("arrivalDate");

                    b.Property<string>("arrivalTime");

                    b.Property<int?>("bookingRequird");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("driverContactNumber");

                    b.Property<string>("driverName");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("startDate");

                    b.Property<string>("startTime");

                    b.Property<int?>("travelMasterId");

                    b.Property<int?>("travelVehicleTypeId");

                    b.Property<string>("travellingFrom");

                    b.Property<string>("travellingTo");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("vehicleNumber");

                    b.HasKey("Id");

                    b.HasIndex("travelMasterId");

                    b.HasIndex("travelVehicleTypeId");

                    b.ToTable("TravellingInfo","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.VehicleInfo.DriverAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("driverName");

                    b.Property<DateTime?>("from");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("to");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("vehicleEntryId");

                    b.HasKey("Id");

                    b.HasIndex("vehicleEntryId");

                    b.ToTable("DriverAssignment","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.VehicleInfo.MajorOverholding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cost");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<int?>("isDelete");

                    b.Property<string>("type");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("vehicleEntryId");

                    b.HasKey("Id");

                    b.HasIndex("vehicleEntryId");

                    b.ToTable("MajorOverholding","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.VehicleInfo.VehicleEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("batteryType");

                    b.Property<string>("bodyType");

                    b.Property<string>("chassisNo");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("dateOfHandoverToMOPA");

                    b.Property<DateTime?>("dateOfPurches");

                    b.Property<string>("department");

                    b.Property<string>("description");

                    b.Property<string>("distributorType");

                    b.Property<int?>("driverId");

                    b.Property<string>("driverName");

                    b.Property<string>("engineNo")
                        .HasMaxLength(100);

                    b.Property<string>("horsePower");

                    b.Property<string>("insurance");

                    b.Property<int?>("isDelete");

                    b.Property<string>("manufacturingYear");

                    b.Property<string>("noofCylinder");

                    b.Property<string>("noofSeat");

                    b.Property<int?>("officerId");

                    b.Property<string>("officerName");

                    b.Property<string>("oilType");

                    b.Property<string>("orgType")
                        .HasMaxLength(100);

                    b.Property<string>("purchesAmount");

                    b.Property<DateTime?>("registrationDate");

                    b.Property<string>("registrationNo")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("renewalDate");

                    b.Property<string>("renewalOffice");

                    b.Property<string>("source");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("vID")
                        .IsRequired();

                    b.Property<int?>("vehicleId");

                    b.Property<string>("workStation");

                    b.HasKey("Id");

                    b.HasIndex("vehicleId");

                    b.ToTable("VehicleEntry","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Visitor.PIMSVisitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("arrivalDate");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("dateOfBirth");

                    b.Property<DateTime?>("deparchurDate");

                    b.Property<string>("designation");

                    b.Property<string>("email");

                    b.Property<string>("gander");

                    b.Property<string>("imageUrl");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("letterSendingDate");

                    b.Property<string>("name");

                    b.Property<string>("nationality");

                    b.Property<string>("organization");

                    b.Property<string>("organizationAddress");

                    b.Property<string>("organizationEmail");

                    b.Property<string>("organizationPhone");

                    b.Property<string>("passportNumber");

                    b.Property<string>("passportUrl");

                    b.Property<string>("phone");

                    b.Property<string>("remarks");

                    b.Property<string>("subject");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("PIMSVisitor","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Wages.OTProcessData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("OTAmount");

                    b.Property<decimal?>("OTMin");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("wageEmployeeInfoId");

                    b.HasKey("Id");

                    b.HasIndex("wageEmployeeInfoId");

                    b.ToTable("OTProcessData","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Wages.OTSetupDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("basicPercent");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("oTSetupMasterId");

                    b.Property<int?>("oTSlotTypeId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("oTSetupMasterId");

                    b.HasIndex("oTSlotTypeId");

                    b.ToTable("OTSetupDetail","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Wages.OTSetupMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("bufferingmin");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("shiftGroupMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("shiftGroupMasterId");

                    b.ToTable("OTSetupMaster","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Wages.OTSlotType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<decimal>("slotHour");

                    b.Property<string>("slotName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("OTSlotType","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Wages.WagesEmpAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("attenUpdateAppBy");

                    b.Property<string>("attenUpdateBy");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("endTime")
                        .HasMaxLength(20);

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("latetime")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("punchCardNo");

                    b.Property<string>("remarks");

                    b.Property<string>("startTime")
                        .HasMaxLength(20);

                    b.Property<int?>("summaryId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("workDate")
                        .HasMaxLength(20);

                    b.Property<decimal?>("workingTime")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("WagesEmpAttendance","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Wages.WagesPunchCardInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("punchCardNo");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("WagesPunchCardInfo","HR");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Wages.WagesSalaryStructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("amount");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("salaryHeadId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("salaryHeadId");

                    b.ToTable("WagesSalaryStructure","HR");
                });

            modelBuilder.Entity("OPUSERP.Meeting.Data.Entity.MeetingActionInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("MeetingActionInfo","MMS");
                });

            modelBuilder.Entity("OPUSERP.Meeting.Data.Entity.MeetingAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isAttendance");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("meetingInfoId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("meetingInfoId");

                    b.ToTable("MeetingAttendance","MMS");
                });

            modelBuilder.Entity("OPUSERP.Meeting.Data.Entity.MeetingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("actionId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("docId");

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("meetingInfoId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("actionId");

                    b.HasIndex("docId");

                    b.HasIndex("employeeId");

                    b.HasIndex("meetingInfoId");

                    b.ToTable("MeetingDetail","MMS");
                });

            modelBuilder.Entity("OPUSERP.Meeting.Data.Entity.MeetingDocAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("docId");

                    b.Property<string>("fileUrl");

                    b.Property<int?>("isDelete");

                    b.Property<string>("title");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("docId");

                    b.ToTable("MeetingDocAttachment","MMS");
                });

            modelBuilder.Entity("OPUSERP.Meeting.Data.Entity.MeetingDocRoute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("actionId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("docId");

                    b.Property<int?>("employeeId");

                    b.Property<int?>("employeeReplaceId");

                    b.Property<int?>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("order");

                    b.Property<string>("remarks");

                    b.Property<string>("status");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("actionId");

                    b.HasIndex("docId");

                    b.HasIndex("employeeId");

                    b.HasIndex("employeeReplaceId");

                    b.ToTable("MeetingDocRoute","MMS");
                });

            modelBuilder.Entity("OPUSERP.Meeting.Data.Entity.MeetingDocs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("docId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("meetingInfoId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("docId");

                    b.HasIndex("meetingInfoId");

                    b.ToTable("MeetingDocs","MMS");
                });

            modelBuilder.Entity("OPUSERP.Meeting.Data.Entity.MeetingDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date");

                    b.Property<string>("content");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("decision");

                    b.Property<int?>("docId");

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isClose");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isInitial");

                    b.Property<int?>("isMeeting");

                    b.Property<string>("noteType");

                    b.Property<string>("number");

                    b.Property<string>("subject");

                    b.Property<string>("summary");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("docId");

                    b.HasIndex("employeeId");

                    b.ToTable("MeetingDocument","MMS");
                });

            modelBuilder.Entity("OPUSERP.Meeting.Data.Entity.MeetingInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date");

                    b.Property<int?>("actionId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isAchived");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("status");

                    b.Property<string>("title");

                    b.Property<string>("type");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("actionId");

                    b.HasIndex("employeeId");

                    b.ToTable("MeetingInfo","MMS");
                });

            modelBuilder.Entity("OPUSERP.Meeting.Data.Entity.MeetingUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("role");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("MeetingUser","MMS");
                });

            modelBuilder.Entity("OPUSERP.MessageBox.Data.MessageBoxFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("fileUrl");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("messageBoxId");

                    b.Property<string>("name");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("messageBoxId");

                    b.ToTable("MessageBoxFile","MBox");
                });

            modelBuilder.Entity("OPUSERP.MessageBox.Data.MessageBoxInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("message");

                    b.Property<int?>("messageBoxId");

                    b.Property<int?>("messageGroupId");

                    b.Property<int?>("receiverId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("messageBoxId");

                    b.HasIndex("messageGroupId");

                    b.HasIndex("receiverId");

                    b.ToTable("MessageBoxInfo","MBox");
                });

            modelBuilder.Entity("OPUSERP.MessageBox.Data.MessageGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<string>("praivacy");

                    b.Property<string>("tagline");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("MessageGroup","MBox");
                });

            modelBuilder.Entity("OPUSERP.MessageBox.Data.MessageGroupMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("messageGroupId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("messageGroupId");

                    b.ToTable("MessageGroupMember","MBox");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.BarCodeInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("barCode")
                        .HasMaxLength(50);

                    b.Property<byte[]>("barCodeImage");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemPriceId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("itemPriceId");

                    b.ToTable("BarCodeInformation","OSales");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.BillReturnPaymentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("billReturnPaymentMasterId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("salesReturnInvoiceMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("billReturnPaymentMasterId");

                    b.HasIndex("salesReturnInvoiceMasterId");

                    b.ToTable("BillReturnPaymentDetails");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.BillReturnPaymentMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("bankAmount");

                    b.Property<string>("billNumber");

                    b.Property<string>("billPaymentBy")
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("billPaymentDate");

                    b.Property<string>("billPaymentNo")
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("cashAmount");

                    b.Property<int?>("companyId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isPartialReceived");

                    b.Property<int?>("paymentModeId");

                    b.Property<string>("receivedNotes");

                    b.Property<int?>("relSupplierCustomerResourseId");

                    b.Property<string>("remarks");

                    b.Property<int?>("storeId");

                    b.Property<decimal?>("totalAmount");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.HasIndex("paymentModeId");

                    b.HasIndex("relSupplierCustomerResourseId");

                    b.HasIndex("storeId");

                    b.ToTable("BillReturnPaymentMasters");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.ItemPriceFixing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("VAT");

                    b.Property<string>("barCode")
                        .HasMaxLength(50);

                    b.Property<byte[]>("barCodeImage");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("discountPersent");

                    b.Property<int?>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemSpecificationId");

                    b.Property<decimal?>("price");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("itemSpecificationId");

                    b.ToTable("ItemPriceFixing","OSales");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.MealType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("activeStatus")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("mealTypeName")
                        .HasMaxLength(300);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("MealType","OSales");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.MenuMealTypeMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("activeStatus")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("mealTypeId");

                    b.Property<int?>("salesMenuId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("mealTypeId");

                    b.HasIndex("salesMenuId");

                    b.ToTable("MenuMealTypeMapping","OSales");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.RelCustomerArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("areaId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("relSupplierCustomerResourseId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("areaId");

                    b.HasIndex("relSupplierCustomerResourseId");

                    b.ToTable("RelCustomerArea","Distribution");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.RelSupplierCustomerResourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LeadsId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("distributorTypeId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("ledgerId");

                    b.Property<int?>("organizationId");

                    b.Property<int?>("resourceId");

                    b.Property<int?>("roleTypeId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("LeadsId");

                    b.HasIndex("distributorTypeId");

                    b.HasIndex("ledgerId");

                    b.HasIndex("organizationId");

                    b.HasIndex("resourceId");

                    b.HasIndex("roleTypeId");

                    b.ToTable("RelSupplierCustomerResourse","OSales");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.RoleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("RoleType","OSales");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.SalesCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount");

                    b.Property<decimal?>("bankAmount");

                    b.Property<int?>("bankInfoId");

                    b.Property<string>("bankName");

                    b.Property<decimal?>("cardAmount");

                    b.Property<int?>("cardTypeId");

                    b.Property<decimal?>("cashAmount");

                    b.Property<string>("checqueNo");

                    b.Property<decimal?>("collectionAmount");

                    b.Property<DateTime?>("collectionDate");

                    b.Property<string>("collectionNumber");

                    b.Property<int?>("companyId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("mobileAmount");

                    b.Property<int?>("paymentModeId");

                    b.Property<int?>("relSupplierCustomerResourseId");

                    b.Property<string>("remarks");

                    b.Property<int?>("salesInvoiceMasterId");

                    b.Property<int?>("storeId");

                    b.Property<string>("trxNo");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("walletTypeId");

                    b.HasKey("Id");

                    b.HasIndex("bankInfoId");

                    b.HasIndex("cardTypeId");

                    b.HasIndex("companyId");

                    b.HasIndex("paymentModeId");

                    b.HasIndex("relSupplierCustomerResourseId");

                    b.HasIndex("salesInvoiceMasterId");

                    b.HasIndex("storeId");

                    b.HasIndex("walletTypeId");

                    b.ToTable("SalesCollection","OSales");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.SalesCollectionBillInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount");

                    b.Property<DateTime?>("billPaymentDate");

                    b.Property<string>("billPaymentNo");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("dueAmount");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("ispaid");

                    b.Property<int?>("relSupplierCustomerResourseId");

                    b.Property<string>("remarks");

                    b.Property<int?>("salesInvoiceMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("relSupplierCustomerResourseId");

                    b.HasIndex("salesInvoiceMasterId");

                    b.ToTable("SalesCollectionBillInfo","OSales");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.SalesCollectionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount");

                    b.Property<DateTime?>("collectionDate");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks");

                    b.Property<int?>("salesCollectionBillInfoId");

                    b.Property<int?>("salesCollectionId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("salesCollectionBillInfoId");

                    b.HasIndex("salesCollectionId");

                    b.ToTable("SalesCollectionDetail","OSales");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.SalesInvoiceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("atAmount");

                    b.Property<decimal?>("cdAmount");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("disAmount");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemPriceFixingId");

                    b.Property<int?>("itemSpecicationId");

                    b.Property<decimal?>("lineTotal");

                    b.Property<int?>("patientServiceDetailsId");

                    b.Property<decimal?>("quantity");

                    b.Property<decimal?>("rate");

                    b.Property<decimal?>("rdAmount");

                    b.Property<int?>("rentInvoiceDetailId");

                    b.Property<int?>("salesInvoiceMasterId");

                    b.Property<decimal?>("sdAmount");

                    b.Property<decimal?>("taxAmount");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("vatAmount");

                    b.HasKey("Id");

                    b.HasIndex("itemPriceFixingId");

                    b.HasIndex("itemSpecicationId");

                    b.HasIndex("patientServiceDetailsId");

                    b.HasIndex("rentInvoiceDetailId");

                    b.HasIndex("salesInvoiceMasterId");

                    b.ToTable("SalesInvoiceDetail","OSales");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.SalesInvoiceMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("ATOnTotal");

                    b.Property<decimal?>("CDOnTotal");

                    b.Property<decimal?>("DiscountOnTotal");

                    b.Property<decimal?>("NetTotal");

                    b.Property<decimal?>("RDOnTotal");

                    b.Property<decimal?>("SDOnTotal");

                    b.Property<decimal?>("TAXOnTotal");

                    b.Property<decimal?>("VATOnTotal");

                    b.Property<string>("alternateMobile");

                    b.Property<decimal?>("change");

                    b.Property<int?>("countryId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("exportType");

                    b.Property<decimal?>("givenAmount");

                    b.Property<DateTime?>("invoiceDate");

                    b.Property<string>("invoiceNumber");

                    b.Property<int?>("isClose");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isStockClose");

                    b.Property<DateTime?>("lcDate");

                    b.Property<string>("lcNo")
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("leadsId");

                    b.Property<DateTime?>("paymentDate");

                    b.Property<int?>("relSupplierCustomerResourseId");

                    b.Property<int?>("salesType");

                    b.Property<string>("shippingAddress");

                    b.Property<decimal?>("shippingCost");

                    b.Property<int?>("storeId");

                    b.Property<decimal?>("totalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("vds");

                    b.HasKey("Id");

                    b.HasIndex("countryId");

                    b.HasIndex("leadsId");

                    b.HasIndex("relSupplierCustomerResourseId");

                    b.HasIndex("storeId");

                    b.ToTable("SalesInvoiceMaster","OSales");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.SalesMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("activeStatus")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("fileName")
                        .HasMaxLength(500);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemSpecificationId");

                    b.Property<string>("menuName")
                        .HasMaxLength(300);

                    b.Property<int?>("salesMenuCategoryId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("itemSpecificationId");

                    b.HasIndex("salesMenuCategoryId");

                    b.ToTable("SalesMenu","OSales");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.SalesMenuCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("activeStatus")
                        .HasMaxLength(10);

                    b.Property<string>("categoryName")
                        .HasMaxLength(300);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("SalesMenuCategory","OSales");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.SalesMenuOpeningBalance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemSpecificationId");

                    b.Property<DateTime?>("openingDate");

                    b.Property<decimal?>("openingQty");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("itemSpecificationId");

                    b.ToTable("SalesMenuOpeningBalance","OSales");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.SalesReturnInvoiceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemPriceFixingId");

                    b.Property<decimal?>("quantity");

                    b.Property<int?>("salesInvoiceDetailId");

                    b.Property<int?>("salesReturnInvoiceMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("itemPriceFixingId");

                    b.HasIndex("salesInvoiceDetailId");

                    b.HasIndex("salesReturnInvoiceMasterId");

                    b.ToTable("SalesReturnInvoiceDetail","OSales");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.SalesReturnInvoiceMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("DiscountOnTotal");

                    b.Property<decimal?>("NetTotal");

                    b.Property<decimal?>("VATOnTotal");

                    b.Property<int?>("companyId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("invoiceDate");

                    b.Property<string>("invoiceNumber");

                    b.Property<int?>("isClose");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isPayClose");

                    b.Property<int?>("isStockClose");

                    b.Property<DateTime?>("paymentDate");

                    b.Property<int?>("relSupplierCustomerResourseId");

                    b.Property<string>("remarks");

                    b.Property<int?>("storeId");

                    b.Property<decimal?>("totalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.HasIndex("relSupplierCustomerResourseId");

                    b.HasIndex("storeId");

                    b.ToTable("SalesReturnInvoiceMaster","OSales");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.SalesTermsConditions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("salesInvoiceMasterId");

                    b.Property<string>("termtext");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("salesInvoiceMasterId");

                    b.ToTable("SalesTermsConditions","OSales");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.CardType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardTypeName")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("CardType","POS");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.DiscountRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("rate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("DiscountRate","POS");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.ItemPriceFixing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("VAT");

                    b.Property<string>("barCode")
                        .HasMaxLength(50);

                    b.Property<byte[]>("barCodeImage");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("discountPersent");

                    b.Property<int?>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemSpecificationId");

                    b.Property<decimal?>("price");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("itemSpecificationId");

                    b.ToTable("ItemPriceFixing","POS");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.MobileBankingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MobileBankingTypeName")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("MobileBankingType","POS");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.OfferDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemPriceFixingId");

                    b.Property<int?>("offerMasterId");

                    b.Property<decimal?>("quantity");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("itemPriceFixingId");

                    b.HasIndex("offerMasterId");

                    b.ToTable("OfferDetails","POS");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.OfferMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("VAT");

                    b.Property<string>("barCode")
                        .HasMaxLength(100);

                    b.Property<byte[]>("barCodeImage");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("discountPersent");

                    b.Property<DateTime?>("endDate");

                    b.Property<int?>("isDelete");

                    b.Property<string>("offerName")
                        .HasMaxLength(250);

                    b.Property<decimal?>("price");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("OfferMaster","POS");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.PosBillReturnPaymentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("billReturnPaymentMasterId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("salesReturnInvoiceMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("billReturnPaymentMasterId");

                    b.HasIndex("salesReturnInvoiceMasterId");

                    b.ToTable("PosBillReturnPaymentDetail","POS");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.PosBillReturnPaymentMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PosCustomerId");

                    b.Property<decimal?>("bankAmount");

                    b.Property<string>("billNumber")
                        .HasMaxLength(100);

                    b.Property<string>("billPaymentBy")
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("billPaymentDate");

                    b.Property<string>("billPaymentNo")
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("cashAmount");

                    b.Property<int?>("companyId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isPartialReceived");

                    b.Property<int?>("paymentModeId");

                    b.Property<string>("receivedNotes")
                        .HasMaxLength(100);

                    b.Property<string>("remarks");

                    b.Property<int?>("storeId");

                    b.Property<decimal?>("totalAmount");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("PosCustomerId");

                    b.HasIndex("companyId");

                    b.HasIndex("paymentModeId");

                    b.HasIndex("storeId");

                    b.ToTable("PosBillReturnPaymentMaster","POS");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.PosCollectionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount");

                    b.Property<DateTime?>("collectionDate");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("posCollectionMasterId");

                    b.Property<int?>("posInvoiceMasterId");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("posCollectionMasterId");

                    b.HasIndex("posInvoiceMasterId");

                    b.ToTable("PosCollectionDetail","POS");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.PosCollectionMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("bankAmount");

                    b.Property<int?>("bankInfoId");

                    b.Property<decimal?>("cardAmount");

                    b.Property<int?>("cardTypeId");

                    b.Property<decimal?>("cashAmount");

                    b.Property<decimal?>("collectionAmount");

                    b.Property<DateTime?>("collectionDate");

                    b.Property<string>("collectionNumber")
                        .HasMaxLength(100);

                    b.Property<int?>("companyId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("mobileAmount");

                    b.Property<int?>("mobileBankingTypeId");

                    b.Property<int?>("paymentModeId");

                    b.Property<int?>("posCustomerId");

                    b.Property<string>("remarks");

                    b.Property<int?>("storeId");

                    b.Property<string>("trxNumber")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("bankInfoId");

                    b.HasIndex("cardTypeId");

                    b.HasIndex("companyId");

                    b.HasIndex("mobileBankingTypeId");

                    b.HasIndex("paymentModeId");

                    b.HasIndex("posCustomerId");

                    b.HasIndex("storeId");

                    b.ToTable("PosCollectionMaster","POS");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.PosCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name")
                        .HasMaxLength(200);

                    b.Property<string>("phone")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("PosCustomer","POS");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.PosInvoiceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemPriceFixingId");

                    b.Property<int?>("posInvoiceMasterId");

                    b.Property<decimal?>("quantity");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("itemPriceFixingId");

                    b.HasIndex("posInvoiceMasterId");

                    b.ToTable("PosInvoiceDetail","POS");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.PosInvoiceMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("DiscountOnTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NetTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("VATOnTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("change")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("givenAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("invoiceDate");

                    b.Property<string>("invoiceNumber")
                        .HasMaxLength(100);

                    b.Property<int?>("isClose");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isStockClose");

                    b.Property<DateTime?>("paymentDate");

                    b.Property<int?>("posCustomerId");

                    b.Property<int?>("storeId");

                    b.Property<decimal?>("totalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("posCustomerId");

                    b.HasIndex("storeId");

                    b.ToTable("PosInvoiceMaster","POS");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.PosRepInvoiceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemPriceFixingId");

                    b.Property<int?>("posRepInvoiceMasterId");

                    b.Property<decimal?>("quantity");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("itemPriceFixingId");

                    b.HasIndex("posRepInvoiceMasterId");

                    b.ToTable("PosRepInvoiceDetail","POS");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.PosRepInvoiceMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("DiscountOnTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NetTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("VATOnTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("invoiceDate");

                    b.Property<string>("invoiceNumber");

                    b.Property<int?>("isClose");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isStockClose");

                    b.Property<DateTime?>("paymentDate");

                    b.Property<int?>("posCustomerId");

                    b.Property<int?>("storeId");

                    b.Property<decimal?>("totalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("posCustomerId");

                    b.HasIndex("storeId");

                    b.ToTable("PosRepInvoiceMaster","POS");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.PosSalesReturnInvoiceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemPriceFixingId");

                    b.Property<decimal?>("quantity");

                    b.Property<int?>("salesInvoiceDetailId");

                    b.Property<int?>("salesReturnInvoiceMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("itemPriceFixingId");

                    b.HasIndex("salesInvoiceDetailId");

                    b.HasIndex("salesReturnInvoiceMasterId");

                    b.ToTable("PosSalesReturnInvoiceDetail","POS");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.PosSalesReturnInvoiceMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("DiscountOnTotal");

                    b.Property<decimal?>("NetTotal");

                    b.Property<decimal?>("VATOnTotal");

                    b.Property<int?>("companyId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("invoiceDate");

                    b.Property<string>("invoiceNumber");

                    b.Property<int?>("isClose");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isPayClose");

                    b.Property<int?>("isStockClose");

                    b.Property<DateTime?>("paymentDate");

                    b.Property<int?>("posCustomerId");

                    b.Property<string>("remarks");

                    b.Property<int?>("storeId");

                    b.Property<decimal?>("totalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.HasIndex("posCustomerId");

                    b.HasIndex("storeId");

                    b.ToTable("PosSalesReturnInvoiceMaster","POS");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("alternativeEmail");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("email");

                    b.Property<int?>("isDelete");

                    b.Property<string>("licenseNumber");

                    b.Property<string>("mobile");

                    b.Property<string>("phone");

                    b.Property<string>("storeName")
                        .HasMaxLength(350);

                    b.Property<int?>("storeTypeId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("storeTypeId");

                    b.ToTable("Store","POS");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.StoreType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("storeTypeName")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("StoreType","POS");
                });

            modelBuilder.Entity("OPUSERP.Patient.Data.Entity.DiseaseInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("diseaseDescription")
                        .HasMaxLength(550);

                    b.Property<string>("diseaseName")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("DiseaseInfo","HOSPTL");
                });

            modelBuilder.Entity("OPUSERP.Patient.Data.Entity.PatientHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("diseaseInfoId");

                    b.Property<DateTime?>("diseaseStartDate");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("leadsId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("diseaseInfoId");

                    b.HasIndex("leadsId");

                    b.ToTable("PatientHistory","HOSPTL");
                });

            modelBuilder.Entity("OPUSERP.Patient.Data.Entity.PatientInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("admissionDate");

                    b.Property<int?>("ageInDays");

                    b.Property<int?>("ageInMonths");

                    b.Property<int?>("ageInYears");

                    b.Property<string>("bloodGroup")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("fatherName")
                        .HasMaxLength(200);

                    b.Property<string>("gender")
                        .HasMaxLength(6);

                    b.Property<int?>("isDelete");

                    b.Property<string>("maritalStatus")
                        .HasMaxLength(15);

                    b.Property<string>("motherName")
                        .HasMaxLength(200);

                    b.Property<string>("nationalId")
                        .HasMaxLength(20);

                    b.Property<string>("patientCode")
                        .HasMaxLength(10);

                    b.Property<string>("patientEmail")
                        .HasMaxLength(100);

                    b.Property<string>("patientMobile")
                        .HasMaxLength(15);

                    b.Property<string>("patientName")
                        .HasMaxLength(250);

                    b.Property<string>("patientPhone")
                        .HasMaxLength(15);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("PatientInfo","HOSPTL");
                });

            modelBuilder.Entity("OPUSERP.Patient.Data.Entity.PatientRepresentative", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeInfoId");

                    b.Property<DateTime?>("endDate");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isactive");

                    b.Property<int?>("leadsId");

                    b.Property<string>("representativeAddress")
                        .HasMaxLength(550);

                    b.Property<int?>("representativeDesignation")
                        .HasMaxLength(200);

                    b.Property<string>("representativeEmail")
                        .HasMaxLength(100);

                    b.Property<string>("representativeMobile")
                        .HasMaxLength(15);

                    b.Property<string>("representativeName")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("startDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("leadsId");

                    b.ToTable("PatientRepresentative","HOSPTL");
                });

            modelBuilder.Entity("OPUSERP.Patient.Data.Entity.PatientService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("billAmount");

                    b.Property<string>("billingType")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("iscomplete");

                    b.Property<int?>("itemCategoryId");

                    b.Property<int?>("leadsId");

                    b.Property<DateTime?>("serviceFromDate");

                    b.Property<DateTime?>("serviceToDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("itemCategoryId");

                    b.HasIndex("leadsId");

                    b.ToTable("PatientService","HOSPTL");
                });

            modelBuilder.Entity("OPUSERP.Patient.Data.Entity.PatientServiceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemSpecificationId");

                    b.Property<int?>("patientServiceId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("itemSpecificationId");

                    b.HasIndex("patientServiceId");

                    b.ToTable("PatientServiceDetail","HOSPTL");
                });

            modelBuilder.Entity("OPUSERP.Patient.Data.Entity.ProfessionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("professionDescription")
                        .HasMaxLength(550);

                    b.Property<string>("professionName")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ProfessionType","HOSPTL");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.PF.FdrInvestment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber");

                    b.Property<decimal?>("Amount");

                    b.Property<string>("ChequeNo");

                    b.Property<string>("FromBank");

                    b.Property<string>("FromBranch");

                    b.Property<string>("Ftno");

                    b.Property<decimal?>("Interest");

                    b.Property<DateTime?>("MaturityDate");

                    b.Property<DateTime?>("OpenDate");

                    b.Property<decimal?>("Rate");

                    b.Property<int?>("Tenure");

                    b.Property<string>("ToBank");

                    b.Property<string>("ToBranch");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("FdrInvestment","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.PF.GratiutyProcessData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("basic");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<string>("designation");

                    b.Property<int?>("employeeInfoId");

                    b.Property<decimal?>("gratuity");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("year");

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.ToTable("GratiutyProcessData","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.AdditionalTaxInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeInfoId");

                    b.Property<decimal>("exemptionAmount");

                    b.Property<string>("exemptionRule")
                        .HasMaxLength(300);

                    b.Property<int?>("isDelete");

                    b.Property<int>("salaryHeadId");

                    b.Property<int>("taxYearId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("salaryHeadId");

                    b.HasIndex("taxYearId");

                    b.ToTable("AdditionalTaxInfo","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.AdvanceAdjustment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("advanceAmount");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<int>("employeeInfoId");

                    b.Property<decimal>("installmentAmount");

                    b.Property<int?>("isComplete");

                    b.Property<int?>("isContinue");

                    b.Property<int?>("isDelete");

                    b.Property<int>("noOfInstallment");

                    b.Property<string>("purpose")
                        .HasMaxLength(300);

                    b.Property<int>("salaryHeadId");

                    b.Property<int?>("salaryPeriodId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("salaryHeadId");

                    b.HasIndex("salaryPeriodId");

                    b.ToTable("AdvanceAdjustment","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.AdvanceAdjustmentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("advanceAdjustmentId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isPaid");

                    b.Property<decimal?>("paidAmount");

                    b.Property<DateTime?>("paidDate");

                    b.Property<decimal?>("scheduleAmount");

                    b.Property<DateTime?>("scheduleDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("advanceAdjustmentId");

                    b.ToTable("AdvanceAdjustmentDetail","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.AdvancePayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("adjustedAmount");

                    b.Property<int>("advanceAdjustmentId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int>("salaryPeriodId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("advanceAdjustmentId");

                    b.ToTable("AdvancePayment","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.BonousCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bonousCategoryName")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("BonousCategory","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.BonousStructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BonousSubCategoryId");

                    b.Property<string>("bonousBasedOn")
                        .HasMaxLength(5);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("hasEmployee");

                    b.Property<int?>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("maxMonthValue");

                    b.Property<int?>("minMonthValue");

                    b.Property<string>("monthYearType")
                        .HasMaxLength(5);

                    b.Property<decimal?>("percentAmount");

                    b.Property<int?>("salaryCalulationTypeId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("BonousSubCategoryId");

                    b.HasIndex("salaryCalulationTypeId");

                    b.ToTable("BonousStructure","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.BonousSubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("bonousCategoryId");

                    b.Property<string>("bonousSubCategoryName")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("bonousCategoryId");

                    b.ToTable("BonousSubCategory","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.BonusType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bonusTypeName")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("BonusType","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.CodeManagement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("elementCode");

                    b.Property<int?>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("percentAmount");

                    b.Property<int?>("salaryHeadId");

                    b.Property<int?>("salaryPeriodId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("salaryHeadId");

                    b.HasIndex("salaryPeriodId");

                    b.ToTable("CodeManagement","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.EmpAttendanceSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("absent");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeInfoId");

                    b.Property<int?>("holiday");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("late");

                    b.Property<int?>("leave");

                    b.Property<int?>("present");

                    b.Property<string>("remarks")
                        .HasMaxLength(400);

                    b.Property<int?>("salaryPeriodId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("weeklyOff");

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("salaryPeriodId");

                    b.ToTable("EmpAttendanceSummary","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.EmployeeArrear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("arrearAmount");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<decimal>("ratio");

                    b.Property<int>("salaryHeadId");

                    b.Property<int>("salaryPeriodId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("salaryHeadId");

                    b.HasIndex("salaryPeriodId");

                    b.ToTable("EmployeeArrear","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.EmployeesBonusStructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("bonousStructureId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("bonousStructureId");

                    b.HasIndex("employeeInfoId");

                    b.ToTable("EmployeesBonusStructure","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.EmployeesCashSetup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("bankAmount");

                    b.Property<decimal?>("cashAmount");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("defaultAccount")
                        .HasMaxLength(10);

                    b.Property<int>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("walletAmount");

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.ToTable("EmployeesCashSetup","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.EmployeesSalaryStructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("amount");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("effectiveDate");

                    b.Property<int>("employeeInfoId");

                    b.Property<string>("isActive")
                        .HasMaxLength(10);

                    b.Property<int?>("isDelete");

                    b.Property<int>("salaryHeadId");

                    b.Property<int>("salarySlabId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("salaryHeadId");

                    b.HasIndex("salarySlabId");

                    b.ToTable("EmployeesSalaryStructure","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.EmployeesTax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("amount");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeInfoId");

                    b.Property<int?>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("taxYearId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("yearlyTaxableamount");

                    b.Property<decimal?>("yearlyTaxableincome");

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("taxYearId");

                    b.ToTable("EmployeesTax","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.FinalSettlement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("advSal");

                    b.Property<DateTime?>("appDate");

                    b.Property<decimal?>("bankAmount");

                    b.Property<decimal?>("basicDue");

                    b.Property<decimal?>("basicSalary");

                    b.Property<string>("cOAddition1");

                    b.Property<string>("cOAddition2");

                    b.Property<string>("cODeduction1");

                    b.Property<string>("cODeduction2");

                    b.Property<decimal?>("carADue");

                    b.Property<decimal?>("carAllowance");

                    b.Property<decimal?>("carallowanceDeduction");

                    b.Property<decimal?>("conveyanceDue");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("dailyAllowance");

                    b.Property<int?>("daysToYear");

                    b.Property<decimal?>("deductedAmount");

                    b.Property<decimal?>("deductedBonus");

                    b.Property<int?>("employeeInfoId");

                    b.Property<string>("fB1Remarks");

                    b.Property<string>("fB2Remarks");

                    b.Property<decimal?>("fBonus1");

                    b.Property<decimal?>("fBonus2");

                    b.Property<decimal?>("fixedallowanceDeduction");

                    b.Property<decimal?>("gratuity");

                    b.Property<decimal?>("grossSalary");

                    b.Property<decimal?>("hardInstall");

                    b.Property<decimal?>("houseRentDue");

                    b.Property<decimal?>("incomeTax");

                    b.Property<decimal?>("internetAllowance");

                    b.Property<decimal?>("internetallowanceDeduction");

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("lFAAdjust");

                    b.Property<string>("lStatus");

                    b.Property<string>("lastWorkingDay");

                    b.Property<decimal?>("leaveBalance");

                    b.Property<decimal?>("leaveEncashment");

                    b.Property<string>("lenghtOfService");

                    b.Property<decimal?>("lofSvsCG");

                    b.Property<decimal?>("medicalDue");

                    b.Property<decimal?>("mobileAllowance");

                    b.Property<decimal?>("mobileData");

                    b.Property<decimal?>("mobilePhone");

                    b.Property<decimal?>("mobileallowanceDeduction");

                    b.Property<decimal?>("noticePeriodDeducion");

                    b.Property<decimal?>("noticePeriodRequired");

                    b.Property<int?>("noticePeriod_Emt");

                    b.Property<int?>("noticePeriod_Served");

                    b.Property<decimal?>("oAddition1");

                    b.Property<decimal?>("oAddition2");

                    b.Property<decimal?>("oDeduction1");

                    b.Property<decimal?>("oDeduction2");

                    b.Property<decimal?>("pFAmount");

                    b.Property<decimal?>("pFAmountFifty");

                    b.Property<decimal?>("pFAmountHund");

                    b.Property<decimal?>("pFAmountInter");

                    b.Property<decimal?>("pFCompanyInter");

                    b.Property<decimal?>("pFLoan");

                    b.Property<decimal?>("pFOthersadjustment");

                    b.Property<decimal?>("perfBonus");

                    b.Property<decimal?>("porataBonus");

                    b.Property<decimal?>("poratedBonusAmount");

                    b.Property<decimal?>("salDue");

                    b.Property<string>("salaryDisbUpto");

                    b.Property<int?>("salaryPeriodId");

                    b.Property<decimal?>("salaryadjustment");

                    b.Property<string>("seperationStatus");

                    b.Property<decimal?>("specDue");

                    b.Property<decimal?>("specialAllowance");

                    b.Property<decimal?>("totalAmount");

                    b.Property<decimal?>("totalBenefit");

                    b.Property<decimal?>("totalDeduction");

                    b.Property<decimal?>("totalOtherBenefit");

                    b.Property<int?>("trStatus");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("wPPF");

                    b.Property<decimal?>("walletAmount");

                    b.Property<string>("workingBeyendDays");

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("salaryPeriodId");

                    b.ToTable("FinalSettlement","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.FixedTaxEmployees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("noofPeriod");

                    b.Property<decimal?>("taxAmount");

                    b.Property<int>("taxYearId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("taxYearId");

                    b.ToTable("FixedTaxEmployees","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.IncomeTaxSetup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("exemption");

                    b.Property<decimal>("exemptionAmount");

                    b.Property<decimal>("exemptionMaxAmount");

                    b.Property<decimal>("exemptionPercent");

                    b.Property<string>("exemptionRule")
                        .HasMaxLength(400);

                    b.Property<int?>("isDelete");

                    b.Property<int>("salaryHeadId");

                    b.Property<int?>("sortOrder");

                    b.Property<int>("taxYearId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("salaryHeadId");

                    b.HasIndex("taxYearId");

                    b.ToTable("IncomeTaxSetup","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.InvestmentRebateSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("allowableInvestment");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal>("investmentRebate");

                    b.Property<int?>("isDelete");

                    b.Property<decimal>("orInvestmentRebate");

                    b.Property<int>("taxYearId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("taxYearId");

                    b.ToTable("InvestmentRebateSettings","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.LeaveWithoutPay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<int>("noOfDays");

                    b.Property<int>("salaryPeriodId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("salaryPeriodId");

                    b.ToTable("LeaveWithoutPay","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.LfaInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("currentLfaYearNo");

                    b.Property<int>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<decimal>("lfaAmount");

                    b.Property<DateTime?>("lfaEndDate");

                    b.Property<DateTime?>("lfaStartDate");

                    b.Property<string>("lfaStatus")
                        .HasMaxLength(3);

                    b.Property<int>("salaryPeriodId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("salaryPeriodId");

                    b.ToTable("LfaInfo","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.LoanPolicy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("isActive")
                        .HasMaxLength(10);

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("loanInterestRate");

                    b.Property<int?>("loanNoOfInstallment");

                    b.Property<string>("loanPolicyName")
                        .HasMaxLength(300);

                    b.Property<decimal?>("maximumLoanAmount");

                    b.Property<int?>("salaryGradeId");

                    b.Property<int?>("salaryHeadId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("salaryGradeId");

                    b.HasIndex("salaryHeadId");

                    b.ToTable("LoanPolicy","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.LoanRoute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("loanScheduleMasterId");

                    b.Property<int?>("routeOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("loanScheduleMasterId");

                    b.ToTable("LoanRoute","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.LoanScheduleDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isPaid");

                    b.Property<int?>("loanScheduleMasterId");

                    b.Property<decimal?>("paidAmount");

                    b.Property<DateTime?>("paidDate");

                    b.Property<decimal?>("scheduleAmount");

                    b.Property<DateTime?>("scheduleDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("loanScheduleMasterId");

                    b.ToTable("LoanScheduleDetail","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.LoanScheduleMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("TotalLoanWithInterestAmount");

                    b.Property<int?>("approveStatus");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeInfoId");

                    b.Property<string>("fileUrl")
                        .HasMaxLength(300);

                    b.Property<decimal?>("installmentAmount");

                    b.Property<decimal?>("interestAmount");

                    b.Property<decimal?>("interestRate");

                    b.Property<int?>("isComplete");

                    b.Property<int?>("isContinue");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("loanDate");

                    b.Property<int?>("loanPolicyId");

                    b.Property<int?>("noOfInstallment");

                    b.Property<string>("purpose")
                        .HasMaxLength(600);

                    b.Property<decimal?>("totalLoanAmount");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("loanPolicyId");

                    b.ToTable("LoanScheduleMaster","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.MonthlyAllowance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("allowanceAmount");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks")
                        .HasMaxLength(400);

                    b.Property<int?>("salaryHeadId");

                    b.Property<int?>("salaryPeriodId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("salaryHeadId");

                    b.HasIndex("salaryPeriodId");

                    b.ToTable("MonthlyAllowance","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.PFLoan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PFLoanNo");

                    b.Property<decimal>("advanceAmount");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeInfoId");

                    b.Property<decimal>("installmentAmount");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isFromSalary");

                    b.Property<DateTime?>("loanDate");

                    b.Property<int>("noOfInstallment");

                    b.Property<string>("purpose")
                        .HasMaxLength(300);

                    b.Property<int>("salaryHeadId");

                    b.Property<int>("salaryPeriodId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("salaryHeadId");

                    b.HasIndex("salaryPeriodId");

                    b.ToTable("PFLoan","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.PFLoanPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("pFLoanId");

                    b.Property<decimal>("paymentAmount");

                    b.Property<DateTime?>("paymentDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("pFLoanId");

                    b.ToTable("PFLoanPayment","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.PFLoanSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PFLoanPaymentId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal>("installmentAmount");

                    b.Property<int?>("isComplete");

                    b.Property<int?>("isDelete");

                    b.Property<int>("noOfInstallment");

                    b.Property<int?>("pFLoanId");

                    b.Property<decimal>("restAmount");

                    b.Property<int>("salaryPeriodId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("PFLoanPaymentId");

                    b.HasIndex("pFLoanId");

                    b.ToTable("PFLoanSchedule","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.PaymentHead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<string>("remarks");

                    b.Property<string>("type");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("PaymentHead","Club");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.ProcessEmpSalaryMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bankAccountNo")
                        .HasMaxLength(50);

                    b.Property<string>("bankAddress")
                        .HasMaxLength(550);

                    b.Property<string>("bankName")
                        .HasMaxLength(200);

                    b.Property<decimal?>("bankPayable");

                    b.Property<decimal?>("cashPayable");

                    b.Property<string>("companyBankAccNo")
                        .HasMaxLength(50);

                    b.Property<string>("companyBankBranchName")
                        .HasMaxLength(150);

                    b.Property<string>("companyBankName")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("department")
                        .HasMaxLength(250);

                    b.Property<string>("designation")
                        .HasMaxLength(250);

                    b.Property<string>("division")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("netPayable");

                    b.Property<int?>("salaryPeriodId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("walletNo")
                        .HasMaxLength(50);

                    b.Property<decimal?>("walletPayable");

                    b.Property<string>("walletType")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("salaryPeriodId");

                    b.ToTable("ProcessEmpSalaryMaster","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.ProcessEmpSalaryStructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("amount");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<int>("salaryHeadId");

                    b.Property<int>("salaryPeriodId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("salaryHeadId");

                    b.HasIndex("salaryPeriodId");

                    b.ToTable("ProcessEmpSalaryStructure","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.ProcessSalaryRemarks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("comments");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("proposedAmount");

                    b.Property<int?>("salaryPeriodId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("salaryPeriodId");

                    b.ToTable("ProcessSalaryRemarks","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.RebateSlabType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("maxValue");

                    b.Property<decimal?>("minValue");

                    b.Property<string>("slabTypeName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("RebateSlabType","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.ReportFormat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("reportFormat");

                    b.Property<string>("reportTypeName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ReportFormat","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.SalaryActivityPercent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeInfoId");

                    b.Property<int?>("employeeProjectActivityId");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("employeeProjectActivityId");

                    b.ToTable("SalaryActivityPercent","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.SalaryCalulationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("salaryCalulationTypeName")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("SalaryCalulationType","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.SalaryGrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("basicAmount");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("currentBasic");

                    b.Property<string>("gradeName")
                        .HasMaxLength(100);

                    b.Property<int?>("isDelete");

                    b.Property<string>("payScale")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("SalaryGrade","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.SalaryGradePercent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("percentAmount");

                    b.Property<int>("salaryCalulationTypeId");

                    b.Property<int>("salaryGradeId");

                    b.Property<int>("salaryHeadId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("salaryCalulationTypeId");

                    b.HasIndex("salaryGradeId");

                    b.HasIndex("salaryHeadId");

                    b.ToTable("SalaryGradePercent","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.SalaryHead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("headShortName")
                        .HasMaxLength(50);

                    b.Property<string>("isAdvance")
                        .HasMaxLength(3);

                    b.Property<string>("isArrear")
                        .HasMaxLength(3);

                    b.Property<string>("isBonus")
                        .HasMaxLength(3);

                    b.Property<int?>("isDelete");

                    b.Property<string>("isIncomeTax")
                        .HasMaxLength(100);

                    b.Property<string>("isInvestments")
                        .HasMaxLength(100);

                    b.Property<string>("isLoan")
                        .HasMaxLength(3);

                    b.Property<string>("isMonthlyAllowance")
                        .HasMaxLength(3);

                    b.Property<string>("salaryHeadCode")
                        .HasMaxLength(100);

                    b.Property<string>("salaryHeadName")
                        .HasMaxLength(100);

                    b.Property<string>("salaryHeadType")
                        .HasMaxLength(100);

                    b.Property<int?>("sortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("SalaryHead","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.SalaryPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("bonusTypeId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("daysWorking");

                    b.Property<int?>("isDelete");

                    b.Property<string>("lockBy")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("lockDate");

                    b.Property<int?>("lockLabel");

                    b.Property<string>("mailSub")
                        .HasMaxLength(250);

                    b.Property<string>("mailText");

                    b.Property<string>("monthName")
                        .HasMaxLength(10);

                    b.Property<int?>("organizationsBranchId");

                    b.Property<string>("periodName")
                        .HasMaxLength(100);

                    b.Property<int>("salaryTypeId");

                    b.Property<int>("salaryYearId");

                    b.Property<int>("taxYearId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("bonusTypeId");

                    b.HasIndex("salaryTypeId");

                    b.HasIndex("salaryYearId");

                    b.HasIndex("taxYearId");

                    b.ToTable("SalaryPeriod","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.SalaryProcessLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("ipAddress")
                        .HasMaxLength(30);

                    b.Property<int?>("isDelete");

                    b.Property<string>("processType")
                        .HasMaxLength(30);

                    b.Property<int?>("salaryPeriodId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("salaryPeriodId");

                    b.ToTable("SalaryProcessLog","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.SalarySlab", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("effectDate");

                    b.Property<int?>("isDelete");

                    b.Property<int>("salaryGradeId");

                    b.Property<decimal>("slabAmount");

                    b.Property<string>("slabName")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("salaryGradeId");

                    b.ToTable("SalarySlab","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.SalaryStatusLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("ipAddress")
                        .HasMaxLength(40);

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks");

                    b.Property<int?>("salaryPeriodId");

                    b.Property<string>("statusType")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("salaryPeriodId");

                    b.ToTable("SalaryStatusLog","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.SalaryStructureHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("amount");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("effectiveDate");

                    b.Property<int?>("employeeInfoId");

                    b.Property<string>("historyCode")
                        .HasMaxLength(60);

                    b.Property<string>("isActive")
                        .HasMaxLength(10);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("salaryHeadId");

                    b.Property<int?>("salarySlabId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("salaryHeadId");

                    b.HasIndex("salarySlabId");

                    b.ToTable("SalaryStructureHistory","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.SalaryType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("salaryTypeName")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("SalaryType","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.SalaryYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("endDate");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("lockDate");

                    b.Property<DateTime?>("startDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("yearName")
                        .HasMaxLength(100);

                    b.Property<string>("yearStatus");

                    b.HasKey("Id");

                    b.ToTable("SalaryYear","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.SlabIncomeTax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<decimal>("slabAmount");

                    b.Property<string>("slabText")
                        .HasMaxLength(100);

                    b.Property<int>("slabTypeId");

                    b.Property<int?>("sortOrder");

                    b.Property<decimal>("taxRate");

                    b.Property<int>("taxYearId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("slabTypeId");

                    b.HasIndex("taxYearId");

                    b.ToTable("SlabIncomeTax","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.SlabIncomeTaxAssign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<int>("slabTypeId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("slabTypeId");

                    b.ToTable("SlabIncomeTaxAssign","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.SlabRebate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<decimal>("slabRebateAmount");

                    b.Property<string>("slabRebateText")
                        .HasMaxLength(250);

                    b.Property<int>("slabTypeId");

                    b.Property<int?>("sortOrder");

                    b.Property<decimal>("taxRate");

                    b.Property<int>("taxYearId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("slabTypeId");

                    b.HasIndex("taxYearId");

                    b.ToTable("SlabRebate","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.SlabType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("slabTypeName")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("SlabType","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.TaxChallan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("challanDate");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int>("salaryPeriodId");

                    b.Property<string>("taxChallanNo")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("salaryPeriodId");

                    b.ToTable("TaxChallan","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.TaxYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("allowablePerquisite");

                    b.Property<string>("assessmentYear")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("endDate");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("lockLabel");

                    b.Property<DateTime?>("startDate");

                    b.Property<decimal?>("taxLimit");

                    b.Property<string>("taxYearName")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("TaxYear","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.WagesProcessEmpSalaryMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bankAccountNo");

                    b.Property<string>("bankName");

                    b.Property<decimal?>("bankPayable");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("department");

                    b.Property<string>("designation");

                    b.Property<string>("division");

                    b.Property<int?>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("netPayable");

                    b.Property<int?>("salaryPeriodId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("walletNo");

                    b.Property<decimal?>("walletPayable");

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("salaryPeriodId");

                    b.ToTable("WagesProcessEmpSalaryMaster","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.WagesProcessEmpSalaryStructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("amount");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<int>("salaryHeadId");

                    b.Property<int>("salaryPeriodId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("salaryHeadId");

                    b.HasIndex("salaryPeriodId");

                    b.ToTable("WagesProcessEmpSalaryStructure","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.WalletType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("walletTypeName")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("WalletType","Payroll");
                });

            modelBuilder.Entity("OPUSERP.Production.Data.Entity.BOMDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("bOMMasterId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemSpecificationId");

                    b.Property<decimal?>("quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("wastePercent")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("bOMMasterId");

                    b.HasIndex("itemSpecificationId");

                    b.ToTable("BOMDetails","PROD");
                });

            modelBuilder.Entity("OPUSERP.Production.Data.Entity.BOMMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("bomDate");

                    b.Property<string>("bomItemDescription");

                    b.Property<string>("bomNo");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isactive");

                    b.Property<int?>("itemSpecificationId");

                    b.Property<string>("operationType");

                    b.Property<decimal?>("quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("itemSpecificationId");

                    b.ToTable("BOMMasters","PROD");
                });

            modelBuilder.Entity("OPUSERP.Production.Data.Entity.BOMOverheadDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("bOMMasterId");

                    b.Property<decimal?>("cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("costType");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("ledgerId");

                    b.Property<int?>("overheadCostId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("bOMMasterId");

                    b.HasIndex("ledgerId");

                    b.HasIndex("overheadCostId");

                    b.ToTable("BOMOverheadDetail","PROD");
                });

            modelBuilder.Entity("OPUSERP.Production.Data.Entity.OverheadCost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("accountCode")
                        .HasMaxLength(100);

                    b.Property<string>("accountName")
                        .HasMaxLength(300);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("haveLedgerRelation");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("statusId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("OverheadCosts","PROD");
                });

            modelBuilder.Entity("OPUSERP.Production.Data.Entity.ProductionBatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("batchNumber");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("expectedEndDate");

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("perDayTargetQuantity");

                    b.Property<int?>("productionPlanId");

                    b.Property<decimal?>("quantity");

                    b.Property<DateTime?>("startDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("productionPlanId");

                    b.ToTable("ProductionBatchs","PROD");
                });

            modelBuilder.Entity("OPUSERP.Production.Data.Entity.ProductionDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("bOMDetailId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("defaultPrice");

                    b.Property<int?>("defaultSupplierId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("productionId");

                    b.Property<decimal?>("qty");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("wastePercent");

                    b.HasKey("Id");

                    b.HasIndex("bOMDetailId");

                    b.HasIndex("productionId");

                    b.ToTable("ProductionDetails","PROD");
                });

            modelBuilder.Entity("OPUSERP.Production.Data.Entity.ProductionDocumentAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("actionType")
                        .HasMaxLength(250);

                    b.Property<int?>("actionTypeId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description")
                        .HasMaxLength(450);

                    b.Property<string>("documentType")
                        .HasMaxLength(250);

                    b.Property<string>("fileName")
                        .HasMaxLength(350);

                    b.Property<string>("filePath")
                        .HasMaxLength(350);

                    b.Property<string>("fileType")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("subject")
                        .HasMaxLength(350);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ProductionDocumentAttachments","PROD");
                });

            modelBuilder.Entity("OPUSERP.Production.Data.Entity.ProductionMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("bOMId");

                    b.Property<int?>("batchId");

                    b.Property<decimal?>("bomQty");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isClose");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isStockClose");

                    b.Property<string>("operationType")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("productionDate");

                    b.Property<string>("productionNo")
                        .HasMaxLength(150);

                    b.Property<string>("remarks")
                        .HasMaxLength(350);

                    b.Property<int?>("supplierId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("bOMId");

                    b.HasIndex("batchId");

                    b.HasIndex("supplierId");

                    b.ToTable("ProductionMasters","PROD");
                });

            modelBuilder.Entity("OPUSERP.Production.Data.Entity.ProductionPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("bOMMasterId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("planDate");

                    b.Property<string>("planNumber");

                    b.Property<decimal?>("quantity");

                    b.Property<DateTime?>("targetDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("bOMMasterId");

                    b.ToTable("ProductionPlans","PROD");
                });

            modelBuilder.Entity("OPUSERP.Production.Data.Entity.ProductionRequsitionDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BOMDetailId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("productionRequsitionMasterId");

                    b.Property<decimal?>("rate");

                    b.Property<decimal?>("requsitionQuantity");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("BOMDetailId");

                    b.HasIndex("productionRequsitionMasterId");

                    b.ToTable("ProductionRequsitionDetails","PROD");
                });

            modelBuilder.Entity("OPUSERP.Production.Data.Entity.ProductionRequsitionMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<int?>("isClose");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isStockClose");

                    b.Property<int?>("productionBatchId");

                    b.Property<int?>("productionPlanId");

                    b.Property<decimal?>("requisitionQty");

                    b.Property<string>("requsitionNumber");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("productionBatchId");

                    b.HasIndex("productionPlanId");

                    b.ToTable("ProductionRequsitionMasters","PROD");
                });

            modelBuilder.Entity("OPUSERP.Production.Data.Entity.ProductionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("productionTypeName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ProductionTypes","PROD");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.BenificiaryActiveType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("BenificiaryActiveType","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.BenificiaryType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("typeName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("BenificiaryType","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.DateRange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("DateRange","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Gender","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.IdType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("typeName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("IdType","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.PeopleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("PeopleType","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ProgramOutPutId");

                    b.Property<string>("activity");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description");

                    b.Property<string>("indicator");

                    b.Property<int?>("isDelete");

                    b.Property<string>("outComeName");

                    b.Property<string>("outPutName");

                    b.Property<string>("outPutValues");

                    b.Property<string>("outputIndicator");

                    b.Property<int?>("programMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("values");

                    b.HasKey("Id");

                    b.HasIndex("ProgramOutPutId");

                    b.HasIndex("programMasterId");

                    b.ToTable("ProgramActivity","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramActivityProgres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<string>("description");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("programActivityId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("programActivityId");

                    b.ToTable("ProgramActivityProgres","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("programMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("programMasterId");

                    b.ToTable("ProgramAddress","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("caption");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("fileUrl");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("programMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("programMasterId");

                    b.ToTable("ProgramAttachment","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<int?>("programMainCategoryId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("programMainCategoryId");

                    b.ToTable("ProgramCategory","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramHeadline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("headline");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("programMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("programMasterId");

                    b.ToTable("ProgramHeadline","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramImpact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description");

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ProgramImpact","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramImplementor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("implementor");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("programMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("programMasterId");

                    b.ToTable("ProgramImplementor","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramIndicator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("indicator");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("programMasterId");

                    b.Property<int?>("programOutPutId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("programMasterId");

                    b.HasIndex("programOutPutId");

                    b.ToTable("ProgramIndicator","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("location");

                    b.Property<int?>("programMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("programMasterId");

                    b.ToTable("ProgramLocation","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramMainCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ProgramMainCategory","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Enddate");

                    b.Property<DateTime?>("Startdate");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<int?>("districtId");

                    b.Property<int?>("divisionId");

                    b.Property<string>("grantNumber");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isDiscussion");

                    b.Property<string>("number");

                    b.Property<string>("place");

                    b.Property<int?>("programCategoryId");

                    b.Property<int?>("programImpactId");

                    b.Property<int?>("programYearId");

                    b.Property<string>("projectName");

                    b.Property<string>("subject");

                    b.Property<int?>("thanaId");

                    b.Property<decimal?>("totalBudget");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("districtId");

                    b.HasIndex("divisionId");

                    b.HasIndex("programCategoryId");

                    b.HasIndex("programImpactId");

                    b.HasIndex("programYearId");

                    b.HasIndex("thanaId");

                    b.ToTable("ProgramMaster","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramOutCome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("outcome");

                    b.Property<int?>("programMasterId");

                    b.Property<int?>("programStatusId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("programMasterId");

                    b.HasIndex("programStatusId");

                    b.ToTable("ProgramOutCome","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramOutComeProgres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("outcome");

                    b.Property<int?>("programOutComeId");

                    b.Property<int?>("programStatusId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("programOutComeId");

                    b.HasIndex("programStatusId");

                    b.ToTable("ProgramOutComeProgres","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramOutPut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("output");

                    b.Property<int?>("programMasterId");

                    b.Property<int?>("programOutComeId");

                    b.Property<int?>("programStatusId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("programMasterId");

                    b.HasIndex("programOutComeId");

                    b.HasIndex("programStatusId");

                    b.ToTable("ProgramOutPut","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramOutPutProgres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("programOutPutId");

                    b.Property<int?>("programStatusId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("programOutPutId");

                    b.HasIndex("programStatusId");

                    b.ToTable("ProgramOutPutProgres","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramPeopleAttendee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address");

                    b.Property<int?>("benificiaryActiveTypeId");

                    b.Property<int?>("benificiaryTypeId");

                    b.Property<string>("contact");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("dateRangeId");

                    b.Property<int?>("genderId");

                    b.Property<string>("idNumber");

                    b.Property<int?>("idTypeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("isEthnic");

                    b.Property<string>("isFemaleHeaded");

                    b.Property<string>("isLactatingMother");

                    b.Property<string>("mobile");

                    b.Property<string>("name");

                    b.Property<int?>("peopleTypeId");

                    b.Property<int?>("programActivityId");

                    b.Property<int?>("programMasterId");

                    b.Property<string>("type");

                    b.Property<string>("union");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("village");

                    b.HasKey("Id");

                    b.HasIndex("benificiaryActiveTypeId");

                    b.HasIndex("benificiaryTypeId");

                    b.HasIndex("dateRangeId");

                    b.HasIndex("genderId");

                    b.HasIndex("idTypeId");

                    b.HasIndex("peopleTypeId");

                    b.HasIndex("programActivityId");

                    b.HasIndex("programMasterId");

                    b.ToTable("ProgramAttendee","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramPeopleInDiscussion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<int?>("programMasterId");

                    b.Property<decimal?>("quantity");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("programMasterId");

                    b.ToTable("ProgramPeopleInDiscussion","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramPlanLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("districtId");

                    b.Property<int?>("divisionId");

                    b.Property<decimal?>("executionQuantity");

                    b.Property<int?>("isDelete");

                    b.Property<string>("maillingAddress");

                    b.Property<string>("monthName")
                        .HasMaxLength(10);

                    b.Property<decimal?>("planQuantity");

                    b.Property<int?>("programActivityId");

                    b.Property<int?>("programYearId");

                    b.Property<decimal?>("targetQuantity");

                    b.Property<int?>("thanaId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("districtId");

                    b.HasIndex("divisionId");

                    b.HasIndex("programActivityId");

                    b.HasIndex("programYearId");

                    b.HasIndex("thanaId");

                    b.ToTable("ProgramPlanLocation","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramSourceFund", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("amount");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("percent");

                    b.Property<int?>("programMasterId");

                    b.Property<string>("sourceName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("programMasterId");

                    b.ToTable("ProgramSourceFund","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramSourceFundApprove", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("percent");

                    b.Property<int?>("programMasterId");

                    b.Property<string>("sourceName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("programMasterId");

                    b.ToTable("ProgramSourceFundApprove","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ProgramStatus","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("programMasterId");

                    b.Property<string>("subject");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("programMasterId");

                    b.ToTable("ProgramSubject","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramVideo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description");

                    b.Property<int?>("isDelete");

                    b.Property<string>("title");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("url");

                    b.HasKey("Id");

                    b.ToTable("ProgramVideo","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramViewer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<int?>("programMasterId");

                    b.Property<decimal?>("quantity");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("programMasterId");

                    b.ToTable("ProgramViewer","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramWorkPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("eighthMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("eleventhMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("fifthMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("firstMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("fourthMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("ninethMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("programActivityId");

                    b.Property<int?>("programYearId");

                    b.Property<string>("remarks");

                    b.Property<decimal?>("secondMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("seventhMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("sixthMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("subTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("tenthMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("thirdMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("twelvethMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("programActivityId");

                    b.HasIndex("programYearId");

                    b.ToTable("ProgramWorkPlan","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ProgramYear","PM");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.programPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("districtId");

                    b.Property<int?>("divisionId");

                    b.Property<DateTime?>("endDate");

                    b.Property<int?>("isDelete");

                    b.Property<string>("number");

                    b.Property<int?>("programCategoryId");

                    b.Property<int?>("programYearId");

                    b.Property<DateTime?>("startDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("districtId");

                    b.HasIndex("divisionId");

                    b.HasIndex("programCategoryId");

                    b.HasIndex("programYearId");

                    b.ToTable("ProgramPlan","PM");
                });

            modelBuilder.Entity("OPUSERP.Purchase.Data.Entity.BillPaymentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("billPaymentMasterId");

                    b.Property<int?>("billReceiveInformationId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("billPaymentMasterId");

                    b.HasIndex("billReceiveInformationId");

                    b.ToTable("BillPaymentDetail","Purchase");
                });

            modelBuilder.Entity("OPUSERP.Purchase.Data.Entity.BillPaymentMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("bankAmount");

                    b.Property<string>("billNumber");

                    b.Property<string>("billPaymentBy")
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("billPaymentDate");

                    b.Property<string>("billPaymentNo")
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("cashAmount");

                    b.Property<int?>("companyId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isPartialReceived");

                    b.Property<int?>("paymentModeId");

                    b.Property<string>("receivedNotes");

                    b.Property<int?>("relSupplierCustomerResourseId");

                    b.Property<string>("remarks");

                    b.Property<decimal?>("totalAmount");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.HasIndex("paymentModeId");

                    b.HasIndex("relSupplierCustomerResourseId");

                    b.ToTable("BillPaymentMaster","Purchase");
                });

            modelBuilder.Entity("OPUSERP.Purchase.Data.Entity.BillReceiveInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("bankAmount");

                    b.Property<string>("billPaymentBy")
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("billPaymentDate");

                    b.Property<string>("billPaymentNo")
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("cashAmount");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("dueAmount");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("ispaid");

                    b.Property<int?>("paymentModeId");

                    b.Property<int?>("purchaseOrderMasterId");

                    b.Property<int?>("relSupplierCustomerResourseId");

                    b.Property<string>("remarks");

                    b.Property<decimal?>("totalAmount");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("paymentModeId");

                    b.HasIndex("purchaseOrderMasterId");

                    b.HasIndex("relSupplierCustomerResourseId");

                    b.ToTable("BillReceiveInformation","Purchase");
                });

            modelBuilder.Entity("OPUSERP.Purchase.Data.Entity.PurchaseOrdersDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("currencyId");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemSpecificationId");

                    b.Property<int?>("purchaseId");

                    b.Property<decimal?>("quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("taxPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("vatPercent")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("currencyId");

                    b.HasIndex("itemSpecificationId");

                    b.HasIndex("purchaseId");

                    b.ToTable("PurchaseOrdersDetails","Purchase");
                });

            modelBuilder.Entity("OPUSERP.Purchase.Data.Entity.PurchaseOrdersMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("billToLocation")
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("companyId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("deliveryDate");

                    b.Property<int?>("isClose");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isStockClose");

                    b.Property<decimal?>("netTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("paymentDate");

                    b.Property<DateTime?>("poDate");

                    b.Property<string>("poNo")
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("relSupplierCustomerResourseId");

                    b.Property<string>("remarks")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("rfqRef")
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("taxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("taxPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("totalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("vatAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("vatPercent")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("relSupplierCustomerResourseId");

                    b.ToTable("PurchaseOrdersMasters","Purchase");
                });

            modelBuilder.Entity("OPUSERP.Purchase.Data.Entity.PurchaseReturnInfoDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("purchaseOrdersDetailId");

                    b.Property<int?>("purchaseReturnInfoMasterId");

                    b.Property<decimal?>("quantity");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("purchaseOrdersDetailId");

                    b.HasIndex("purchaseReturnInfoMasterId");

                    b.ToTable("PurchaseReturnInfoDetail","Purchase");
                });

            modelBuilder.Entity("OPUSERP.Purchase.Data.Entity.PurchaseReturnInfoMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("DiscountOnTotal");

                    b.Property<decimal?>("NetTotal");

                    b.Property<decimal?>("VATOnTotal");

                    b.Property<int?>("companyId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("invoiceDate");

                    b.Property<string>("invoiceNumber");

                    b.Property<int?>("isClose");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isPayClose");

                    b.Property<int?>("isStockClose");

                    b.Property<DateTime?>("paymentDate");

                    b.Property<int?>("purchaseOrdersMasterId");

                    b.Property<int?>("relSupplierCustomerResourseId");

                    b.Property<string>("remarks");

                    b.Property<int?>("storeId");

                    b.Property<decimal?>("totalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.HasIndex("purchaseOrdersMasterId");

                    b.HasIndex("relSupplierCustomerResourseId");

                    b.HasIndex("storeId");

                    b.ToTable("PurchaseReturnInfoMaster","Purchase");
                });

            modelBuilder.Entity("OPUSERP.Purchase.Data.Entity.TransferDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemSpecificationId");

                    b.Property<decimal?>("qty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("transferMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("itemSpecificationId");

                    b.HasIndex("transferMasterId");

                    b.ToTable("TransferDetail","Purchase");
                });

            modelBuilder.Entity("OPUSERP.Purchase.Data.Entity.TransferMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("companyId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isStockClose");

                    b.Property<string>("remarks");

                    b.Property<int?>("storeFromId");

                    b.Property<int?>("storeToId");

                    b.Property<DateTime?>("transferDate");

                    b.Property<string>("transferNO")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.HasIndex("storeFromId");

                    b.HasIndex("storeToId");

                    b.ToTable("TransferMaster","Purchase");
                });

            modelBuilder.Entity("OPUSERP.REMS.Data.Entity.AssignType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("assignTypeName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("AssignType","REMS");
                });

            modelBuilder.Entity("OPUSERP.REMS.Data.Entity.ClaimAssign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("assignDate");

                    b.Property<int?>("assignTypeId");

                    b.Property<int?>("assignUserId");

                    b.Property<int?>("claimId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("deliveryMode")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("organizationId");

                    b.Property<string>("problemDescription");

                    b.Property<string>("remarks");

                    b.Property<string>("secretCode")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("assignTypeId");

                    b.HasIndex("claimId");

                    b.HasIndex("organizationId");

                    b.ToTable("ClaimAssign","REMS");
                });

            modelBuilder.Entity("OPUSERP.REMS.Data.Entity.ClaimAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("claimId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("fileName")
                        .HasMaxLength(350);

                    b.Property<string>("filePath")
                        .HasMaxLength(500);

                    b.Property<string>("fileType")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("subject")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("claimId");

                    b.ToTable("ClaimAttachment","REMS");
                });

            modelBuilder.Entity("OPUSERP.REMS.Data.Entity.ClaimBillInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("amount");

                    b.Property<int?>("claimId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("paymentHead")
                        .HasMaxLength(350);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("claimId");

                    b.ToTable("ClaimBillInformation","REMS");
                });

            modelBuilder.Entity("OPUSERP.REMS.Data.Entity.ClaimRegister", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("assetRegistrationId");

                    b.Property<DateTime?>("claimDate");

                    b.Property<string>("claimDescription");

                    b.Property<string>("claimNumber")
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isWarrenty");

                    b.Property<int?>("statusId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("userId");

                    b.HasKey("Id");

                    b.HasIndex("assetRegistrationId");

                    b.HasIndex("statusId");

                    b.ToTable("ClaimRegister","REMS");
                });

            modelBuilder.Entity("OPUSERP.REMS.Data.Entity.ClaimStatusInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("statusName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ClaimStatusInfo","REMS");
                });

            modelBuilder.Entity("OPUSERP.REMS.Data.Entity.RepairTransactionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("claimId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("statusInfoId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("claimId");

                    b.HasIndex("statusInfoId");

                    b.ToTable("RepairTransactionLog","REMS");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.CandidateInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bloodGroup");

                    b.Property<string>("candidateCode")
                        .HasMaxLength(30);

                    b.Property<string>("candidateName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("dateOfBirth");

                    b.Property<int?>("department");

                    b.Property<string>("designation");

                    b.Property<string>("email");

                    b.Property<string>("gender");

                    b.Property<string>("homeDistrict");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("jobReqId");

                    b.Property<string>("maritalStatus");

                    b.Property<string>("mobile");

                    b.Property<string>("nationalID");

                    b.Property<string>("nationality");

                    b.Property<string>("placeOfBirth");

                    b.Property<string>("religion");

                    b.Property<int?>("status");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("jobReqId");

                    b.ToTable("CandidateInfo","RCRT");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.CandidatePhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("candidateId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks");

                    b.Property<string>("type")
                        .IsRequired();

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("url")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("candidateId");

                    b.ToTable("CandidatePhoto","RCRT");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.ExamType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("examTypeName");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ExamType","RCRT");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.InterviewCalling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("candidateInfoId");

                    b.Property<string>("communicationType");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("interviewDate");

                    b.Property<string>("interviewTime");

                    b.Property<string>("interviewType");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("jobPostId");

                    b.Property<int?>("jobRequisitionId");

                    b.Property<string>("status");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("venue");

                    b.HasKey("Id");

                    b.HasIndex("candidateInfoId");

                    b.HasIndex("jobPostId");

                    b.HasIndex("jobRequisitionId");

                    b.ToTable("InterviewCalling","RCRT");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.JobPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("deadline");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("jobReqId");

                    b.Property<string>("media");

                    b.Property<DateTime?>("postDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("jobReqId");

                    b.ToTable("JobPost","RCRT");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.JobRequisition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("addRequirements");

                    b.Property<DateTime?>("appointmentDate");

                    b.Property<string>("compensationOthers");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("departmentId");

                    b.Property<int?>("designationId");

                    b.Property<string>("employmentStatus");

                    b.Property<int?>("isDelete");

                    b.Property<string>("jobContext");

                    b.Property<string>("jobLocation");

                    b.Property<string>("jobNo");

                    b.Property<string>("jobResponsibility");

                    b.Property<int?>("jobSourceId");

                    b.Property<string>("jobTitle");

                    b.Property<string>("justification");

                    b.Property<string>("reqEducationalQ");

                    b.Property<string>("reqExperience");

                    b.Property<DateTime?>("requisitionDate");

                    b.Property<decimal?>("salary");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("vacancy");

                    b.HasKey("Id");

                    b.HasIndex("departmentId");

                    b.HasIndex("designationId");

                    b.HasIndex("jobSourceId");

                    b.ToTable("JobRequisition","RCRT");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.JobSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("jobSourceName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("JobSource","RCRT");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.RCRTAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("blockSector");

                    b.Property<int>("candidateId");

                    b.Property<int?>("countryId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("districtId");

                    b.Property<int?>("divisionId");

                    b.Property<string>("houseVillage");

                    b.Property<int?>("isDelete");

                    b.Property<string>("postCode");

                    b.Property<string>("postOffice");

                    b.Property<string>("roadNumber");

                    b.Property<int?>("thanaId");

                    b.Property<string>("type")
                        .IsRequired();

                    b.Property<string>("union");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("candidateId");

                    b.HasIndex("countryId");

                    b.HasIndex("districtId");

                    b.HasIndex("divisionId");

                    b.HasIndex("thanaId");

                    b.ToTable("RCRTAddress","RCRT");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.RCRTEducation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("candidateId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("degreeId");

                    b.Property<string>("grade");

                    b.Property<string>("institution");

                    b.Property<int?>("isDelete");

                    b.Property<string>("majorGroup");

                    b.Property<int?>("organizationId");

                    b.Property<int?>("passingYear");

                    b.Property<int?>("reldegreesubjectId");

                    b.Property<int?>("resultId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("candidateId");

                    b.HasIndex("degreeId");

                    b.HasIndex("organizationId");

                    b.HasIndex("reldegreesubjectId");

                    b.HasIndex("resultId");

                    b.ToTable("RCRTEducation","RCRT");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.RCRTOtherQualification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("candidateId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("instituteName");

                    b.Property<int?>("isDelete");

                    b.Property<string>("markGrade");

                    b.Property<int?>("otherQualificationHeadId");

                    b.Property<string>("passingYear");

                    b.Property<int?>("resultId");

                    b.Property<string>("subject");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("candidateId");

                    b.HasIndex("otherQualificationHeadId");

                    b.HasIndex("resultId");

                    b.ToTable("RCRTOtherQualification","RCRT");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.RCRTProfessionalQualification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("candidateId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("instituteName");

                    b.Property<int?>("isDelete");

                    b.Property<string>("markGrade");

                    b.Property<string>("passingYear");

                    b.Property<int?>("qualificationHeadId");

                    b.Property<int?>("resultId");

                    b.Property<string>("subject");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("candidateId");

                    b.HasIndex("qualificationHeadId");

                    b.HasIndex("resultId");

                    b.ToTable("RCRTProfessionalQualifications","RCRT");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.RCRTTrainingLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("candidateId");

                    b.Property<int?>("countryId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("fromDate");

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks");

                    b.Property<string>("sponsoringAgency");

                    b.Property<DateTime?>("toDate");

                    b.Property<int?>("trainingCategoryId");

                    b.Property<int?>("trainingInstituteId");

                    b.Property<string>("trainingTitle");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("candidateId");

                    b.HasIndex("countryId");

                    b.HasIndex("trainingCategoryId");

                    b.HasIndex("trainingInstituteId");

                    b.ToTable("RCRTTrainingLog","RCRT");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.RcrtEmpMembership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("candidateId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("membershipId");

                    b.Property<string>("membershipNo");

                    b.Property<string>("nameOrganization");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("candidateId");

                    b.HasIndex("membershipId");

                    b.ToTable("RcrtEmpMemberships");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.RcrtPreviousEmployment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("candidateId");

                    b.Property<string>("companyBusiness");

                    b.Property<string>("companyLocation");

                    b.Property<string>("companyName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("department");

                    b.Property<DateTime?>("endDate");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("organizationTypeId");

                    b.Property<string>("position");

                    b.Property<string>("responsibilities");

                    b.Property<DateTime?>("startDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("candidateId");

                    b.HasIndex("organizationTypeId");

                    b.ToTable("RcrtPreviousEmployment","RCRT");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.RcrtPublication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("candidateId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("publicationDate");

                    b.Property<string>("publicationName");

                    b.Property<string>("publicationPlace");

                    b.Property<string>("publicationType");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("candidateId");

                    b.ToTable("RcrtPublication","RCRT");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.RcrtReference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("candidateId");

                    b.Property<string>("contact");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("designation");

                    b.Property<string>("email");

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<string>("organization");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("candidateId");

                    b.ToTable("RcrtReferences");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.ResultDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ResultMasterId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("examTypeId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("marks");

                    b.Property<int?>("percentage");

                    b.Property<int>("resultId");

                    b.Property<string>("status");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("ResultMasterId");

                    b.HasIndex("examTypeId");

                    b.ToTable("ResultDetails","RCRT");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.ResultMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("candidateInfoId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("examNumber");

                    b.Property<int?>("isDelete");

                    b.Property<int>("jobRequisitionId");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("candidateInfoId");

                    b.HasIndex("jobRequisitionId");

                    b.ToTable("ResultMaster","RCRT");
                });

            modelBuilder.Entity("OPUSERP.Rental.Data.Entity.Sales.RentInvoiceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("EndDate");

                    b.Property<string>("EndTime")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("StartDate");

                    b.Property<string>("StartTime")
                        .HasMaxLength(20);

                    b.Property<decimal?>("atAmount");

                    b.Property<decimal?>("cdAmount");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("disAmount");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemPriceFixingId");

                    b.Property<int?>("itemSpecicationId");

                    b.Property<decimal?>("lineTotal");

                    b.Property<decimal?>("quantity");

                    b.Property<decimal?>("rate");

                    b.Property<decimal?>("rdAmount");

                    b.Property<int?>("salesInvoiceMasterId");

                    b.Property<decimal?>("sdAmount");

                    b.Property<decimal?>("taxAmount");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("vatAmount");

                    b.HasKey("Id");

                    b.HasIndex("itemPriceFixingId");

                    b.HasIndex("itemSpecicationId");

                    b.HasIndex("salesInvoiceMasterId");

                    b.ToTable("RentInvoiceDetail","Rental");
                });

            modelBuilder.Entity("OPUSERP.Rental.Data.Entity.Sales.RentInvoiceMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("ATOnTotal");

                    b.Property<decimal?>("CDOnTotal");

                    b.Property<decimal?>("DiscountOnTotal");

                    b.Property<decimal?>("NetTotal");

                    b.Property<decimal?>("RDOnTotal");

                    b.Property<decimal?>("SDOnTotal");

                    b.Property<decimal?>("TAXOnTotal");

                    b.Property<decimal?>("VATOnTotal");

                    b.Property<int?>("countryId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("exportType");

                    b.Property<DateTime?>("invoiceDate");

                    b.Property<string>("invoiceNumber");

                    b.Property<int?>("isClose");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isStockClose");

                    b.Property<int?>("isreceive");

                    b.Property<DateTime?>("lcDate");

                    b.Property<string>("lcNo")
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("leadsId");

                    b.Property<DateTime?>("paymentDate");

                    b.Property<DateTime?>("receiveDate");

                    b.Property<int?>("relSupplierCustomerResourseId");

                    b.Property<int?>("rentInvoiceMasterId");

                    b.Property<int?>("salesType");

                    b.Property<int?>("storeId");

                    b.Property<decimal?>("totalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("vds");

                    b.HasKey("Id");

                    b.HasIndex("countryId");

                    b.HasIndex("leadsId");

                    b.HasIndex("relSupplierCustomerResourseId");

                    b.HasIndex("rentInvoiceMasterId");

                    b.HasIndex("storeId");

                    b.ToTable("RentInvoiceMaster","Rental");
                });

            modelBuilder.Entity("OPUSERP.Rental.Data.Entity.Sales.RentTermsConditions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("salesInvoiceMasterId");

                    b.Property<string>("termtext");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("salesInvoiceMasterId");

                    b.ToTable("RentTermsConditions","Rental");
                });

            modelBuilder.Entity("OPUSERP.Rental.Data.Entity.Sales.TermsAndConditions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("shortOrder");

                    b.Property<string>("termName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("TermsAndConditions","Rental");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Disbarse.DisbarseDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IOUId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("disbarseId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("issueBy");

                    b.Property<DateTime?>("issueDate");

                    b.Property<int?>("statusId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("userId");

                    b.HasKey("Id");

                    b.HasIndex("IOUId");

                    b.HasIndex("disbarseId");

                    b.ToTable("DeisbarseDetails","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Disbarse.DisbarseMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("disbarseDate");

                    b.Property<string>("disbarseNo");

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks");

                    b.Property<int?>("statusId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("userId");

                    b.HasKey("Id");

                    b.ToTable("DisbarseMaster","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.IOU.IOUDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IOUId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("currencyId");

                    b.Property<decimal?>("currencyRate");

                    b.Property<int?>("deliveryLocationId");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("iou_DStatus");

                    b.Property<int?>("isDelete");

                    b.Property<string>("otherDeliveryLocation")
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("qty");

                    b.Property<decimal?>("rate");

                    b.Property<int?>("requisitionDetailId");

                    b.Property<int?>("requisitionId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("vatAmount");

                    b.Property<decimal?>("vatPercent");

                    b.HasKey("Id");

                    b.HasIndex("IOUId");

                    b.HasIndex("currencyId");

                    b.HasIndex("deliveryLocationId");

                    b.HasIndex("requisitionDetailId");

                    b.ToTable("IOUDetails","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.IOU.IOUMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("attentionTo")
                        .HasColumnType("nvarchar(120)");

                    b.Property<int?>("attentionToId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("expectedDeliveryDate");

                    b.Property<DateTime?>("iouDate");

                    b.Property<string>("iouNo")
                        .HasColumnType("nvarchar(120)");

                    b.Property<int?>("iouStatus");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("projectId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("userId");

                    b.HasKey("Id");

                    b.HasIndex("projectId");

                    b.ToTable("IOUMaster","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.IOU.IOUPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IOUId");

                    b.Property<decimal?>("adjustmentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("adjustmentBy");

                    b.Property<DateTime?>("adjustmentDate");

                    b.Property<decimal?>("balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("bankName");

                    b.Property<string>("chequeNo");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("iOUPaymentMasterId");

                    b.Property<decimal?>("iouAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("paymentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("paymentBy");

                    b.Property<DateTime?>("paymentDate");

                    b.Property<string>("paymentMode");

                    b.Property<DateTime?>("receiveDate");

                    b.Property<int?>("receivebyId");

                    b.Property<string>("remarks")
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("statusInfoId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("IOUId");

                    b.HasIndex("iOUPaymentMasterId");

                    b.HasIndex("receivebyId");

                    b.HasIndex("statusInfoId");

                    b.ToTable("IOUPayment","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.IOU.IOUPaymentMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("attentionTo")
                        .HasColumnType("nvarchar(320)");

                    b.Property<int?>("attentionToId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("iouPaymentDate");

                    b.Property<string>("iouPaymentNo")
                        .HasColumnType("nvarchar(120)");

                    b.Property<int>("iouPaymentStatus");

                    b.Property<int?>("isDelete");

                    b.Property<string>("paymentBy");

                    b.Property<int?>("projectId");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("userId");

                    b.HasKey("Id");

                    b.HasIndex("projectId");

                    b.ToTable("IOUPaymentMaster","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.JobAssign.JobAssignDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("assignDate");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("jobAssignId");

                    b.Property<int?>("requisitionDetailId");

                    b.Property<int?>("teamMemberId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("jobAssignId");

                    b.HasIndex("teamMemberId");

                    b.ToTable("JobAssignDetail","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.JobAssign.JobAssignMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("assignDate");

                    b.Property<int?>("assignTypeId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("requisitionId");

                    b.Property<int?>("statusId");

                    b.Property<int?>("teamId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("assignTypeId");

                    b.HasIndex("requisitionId");

                    b.HasIndex("teamId");

                    b.ToTable("JobAssignMaster","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.JobAssign.JobAssignType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("jobAssignName")
                        .HasMaxLength(150);

                    b.Property<string>("jobAssignNameBN")
                        .HasMaxLength(250);

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("JobAssignType","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.MasterData.AutoGeneratedNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("alphaNumeric");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int>("digit");

                    b.Property<string>("format");

                    b.Property<int>("isDate");

                    b.Property<int?>("isDelete");

                    b.Property<int>("isEmpCode");

                    b.Property<string>("numericStartPoint");

                    b.Property<string>("speratedSign");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("AutoGeneratedNumber","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.MasterData.BuyerItemMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemCategoryId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.HasIndex("itemCategoryId");

                    b.ToTable("BuyerItemMapping","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.MasterData.FeatureItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemSpecificationId");

                    b.Property<int?>("shortOrder");

                    b.Property<int?>("statusId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("userId");

                    b.HasKey("Id");

                    b.HasIndex("itemSpecificationId");

                    b.ToTable("FeatureItems","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.MasterData.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("accountLedgerId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("fileName");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isParent");

                    b.Property<string>("itemCode")
                        .HasMaxLength(20);

                    b.Property<string>("itemDescription");

                    b.Property<string>("itemName")
                        .HasMaxLength(250);

                    b.Property<string>("itemShortName")
                        .HasMaxLength(20);

                    b.Property<int?>("itemTypeId");

                    b.Property<int?>("parentId");

                    b.Property<int?>("reOrderLevel");

                    b.Property<int?>("unitId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("itemTypeId");

                    b.HasIndex("parentId");

                    b.HasIndex("unitId");

                    b.ToTable("Item","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.MasterData.ItemCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("categoryDescription");

                    b.Property<string>("categoryName")
                        .HasMaxLength(250);

                    b.Property<string>("categoryPrefix");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isParent");

                    b.Property<int?>("parentId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ItemCategory","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SKUNumber");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemId");

                    b.Property<string>("specImageUrl");

                    b.Property<string>("specificationName")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("itemId");

                    b.ToTable("ItemSpecification","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.MasterData.ItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("itemTypeName")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ItemType","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.MasterData.OrganizationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("organizationTypeName")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("OrganizationTypes","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.MasterData.PreferableVendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("organizationId");

                    b.Property<int>("requisitionDetailId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("organizationId");

                    b.HasIndex("requisitionDetailId");

                    b.ToTable("PreferableVendors","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.MasterData.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("endDate");

                    b.Property<string>("inChargeEmpCode")
                        .HasMaxLength(20);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isdefault");

                    b.Property<string>("projectLocation")
                        .HasMaxLength(450);

                    b.Property<string>("projectName")
                        .HasMaxLength(250);

                    b.Property<string>("projectNameBN")
                        .HasMaxLength(250);

                    b.Property<string>("projectShortName")
                        .HasMaxLength(50);

                    b.Property<string>("projectStatus")
                        .HasMaxLength(20);

                    b.Property<int?>("specialBranchUnitId");

                    b.Property<DateTime?>("startDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("specialBranchUnitId");

                    b.ToTable("Project","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.MasterData.SpecificationCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemCategoryId");

                    b.Property<string>("specificationCategoryName")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("itemCategoryId");

                    b.ToTable("SpecificationCategory","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.MasterData.SpecificationDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemSpecificationId");

                    b.Property<int?>("specificationCategoryId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("value")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("itemSpecificationId");

                    b.HasIndex("specificationCategoryId");

                    b.ToTable("SpecificationDetail","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.MasterData.StoreDepartmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("deptName")
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("deptNameBn")
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("StoreDepartmentTypes","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.MasterData.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("organizationTypeId");

                    b.Property<string>("supplierCode")
                        .HasMaxLength(20);

                    b.Property<string>("supplierName")
                        .HasMaxLength(250);

                    b.Property<int?>("supplierTypeId");

                    b.Property<string>("tinNo")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("vatRegNo")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("organizationTypeId");

                    b.HasIndex("supplierTypeId");

                    b.ToTable("Suppliers","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.MasterData.SupplierType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("supplierTypeName")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("SupplierTypes","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.MasterData.TeamMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("leaderId");

                    b.Property<int?>("shortOrder");

                    b.Property<string>("teamCode")
                        .HasMaxLength(50);

                    b.Property<string>("teamName")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("TeamMaster","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.MasterData.TeamMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("memberId");

                    b.Property<int?>("shortOrder");

                    b.Property<int?>("teamMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("teamMasterId");

                    b.ToTable("TeamMember","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.MasterData.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("unitName")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Unit","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Matrix.MailLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isSuccess");

                    b.Property<string>("mailType")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("notSendReason")
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("recipient")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("refNo")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("sendTime");

                    b.Property<string>("sender")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("subject")
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("MailLog","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Matrix.PrintHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("cSMasterId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("iOUId");

                    b.Property<int?>("iOUPaymentMasterId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("matrixTypeId");

                    b.Property<DateTime?>("printDate");

                    b.Property<int?>("printStatus");

                    b.Property<int?>("purchaseId");

                    b.Property<int?>("requisitionId");

                    b.Property<int?>("stockId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("cSMasterId");

                    b.HasIndex("iOUId");

                    b.HasIndex("iOUPaymentMasterId");

                    b.HasIndex("matrixTypeId");

                    b.HasIndex("purchaseId");

                    b.HasIndex("requisitionId");

                    b.HasIndex("stockId");

                    b.ToTable("PrintHistory","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.ProjectStatus.ActivityWiseDailyProgressDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemDetialId");

                    b.Property<decimal?>("materialConsumtion");

                    b.Property<decimal?>("materialReceived");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("workProgressActivityId");

                    b.HasKey("Id");

                    b.HasIndex("itemDetialId");

                    b.HasIndex("workProgressActivityId");

                    b.ToTable("ActivityWiseDailyProgressDetails","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.ProjectStatus.ActivityWiseItemDetial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("activityDetailsId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemSpecificationId");

                    b.Property<decimal?>("qty");

                    b.Property<int?>("unitId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("activityDetailsId");

                    b.HasIndex("itemSpecificationId");

                    b.HasIndex("unitId");

                    b.ToTable("ActivityWiseItemDetials","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.ProjectStatus.DailyProgressReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("projectId");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("reportDate");

                    b.Property<string>("reportNo");

                    b.Property<string>("siteCondition");

                    b.Property<string>("siteWeather");

                    b.Property<int?>("statusId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("projectId");

                    b.ToTable("DailyProgressReports","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.ProjectStatus.ManpowerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("manpowerTypeName");

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ManpowerTypes","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.ProjectStatus.ProjectConstructionLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("floorNo");

                    b.Property<int?>("isDelete");

                    b.Property<string>("locationPosition");

                    b.Property<int?>("projectId");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("projectId");

                    b.ToTable("ProjectConstructionLocations","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.ProjectStatus.ProjectGridLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("gridLocation");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("projectConstructionLocationId");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("projectConstructionLocationId");

                    b.ToTable("ProjectGridLocations","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.ProjectStatus.ProjectLocationActivityDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("progressActivityTypeId");

                    b.Property<int?>("projectGridLocationId");

                    b.Property<decimal?>("qty");

                    b.Property<int?>("unitId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("progressActivityTypeId");

                    b.HasIndex("projectGridLocationId");

                    b.HasIndex("unitId");

                    b.ToTable("ProjectLocationActivityDetails","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.ProjectStatus.ProjectWiseEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("endDate");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemSpecificationId");

                    b.Property<int?>("projectId");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("startDate");

                    b.Property<int?>("status");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("itemSpecificationId");

                    b.HasIndex("projectId");

                    b.ToTable("ProjectWiseEquipment","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.ProjectStatus.SiteConstraint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<int?>("progressReportId");

                    b.Property<int?>("statusId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("progressReportId");

                    b.ToTable("SiteConstraints","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.ProjectStatus.SiteEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("categoryName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("equipmentHours");

                    b.Property<string>("equipmentNo");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemSpecificationId");

                    b.Property<int?>("progressReportId");

                    b.Property<string>("status");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("itemSpecificationId");

                    b.HasIndex("progressReportId");

                    b.ToTable("SiteEquipments","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.ProjectStatus.SiteManpower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("actual");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description");

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<string>("planned");

                    b.Property<int?>("progressReportId");

                    b.Property<string>("unitName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("progressReportId");

                    b.ToTable("SiteManpowers","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.ProjectStatus.SiteMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("forDay");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemSpecificationId");

                    b.Property<int?>("progressReportId");

                    b.Property<string>("status");

                    b.Property<string>("tillDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("itemSpecificationId");

                    b.HasIndex("progressReportId");

                    b.ToTable("SiteMaterials","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.ProjectStatus.SiteVisitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("imagePath");

                    b.Property<int?>("isDelete");

                    b.Property<string>("mobileNo");

                    b.Property<int?>("progressReportId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("visitorName");

                    b.Property<string>("visitorOrganization");

                    b.HasKey("Id");

                    b.HasIndex("progressReportId");

                    b.ToTable("SiteVisitors","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.ProjectStatus.WorkProgressActivityDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("compPercent");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("cumAchived");

                    b.Property<string>("forDayAchived");

                    b.Property<string>("forDayPlanned");

                    b.Property<string>("gridName");

                    b.Property<int?>("isDelete");

                    b.Property<string>("locationName");

                    b.Property<string>("nextDayPlanned");

                    b.Property<int?>("progressActivityTypeId");

                    b.Property<int?>("progressReportId");

                    b.Property<int?>("projectConstructionLocationId");

                    b.Property<int?>("projectGridLocationId");

                    b.Property<decimal?>("totalQty");

                    b.Property<string>("unit");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("progressActivityTypeId");

                    b.HasIndex("progressReportId");

                    b.HasIndex("projectConstructionLocationId");

                    b.HasIndex("projectGridLocationId");

                    b.ToTable("WorkProgressActivityDescriptions","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.ProjectStatus.WorkProgressActivityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("activityName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("WorkProgressActivityTypes","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.PurchaseOrder.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("currencyName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("currencyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("currencyShortName")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("currencySign")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Currency","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.PurchaseOrder.DeliveryLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("locationName")
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("DeliveryLocation","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.PurchaseOrder.DeliveryMode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("deliveryModeName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("DeliveryMode","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.PurchaseOrder.PODismissDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("dismissQty");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("pODismissId");

                    b.Property<decimal?>("poQty");

                    b.Property<int?>("purchaseDetailsId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("pODismissId");

                    b.HasIndex("purchaseDetailsId");

                    b.ToTable("PODismissDetails","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.PurchaseOrder.PODismissMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("dismissDate");

                    b.Property<int?>("dismissStatus");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("purchaseId");

                    b.Property<string>("remarks");

                    b.Property<string>("reviseNo");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("purchaseId");

                    b.ToTable("PODismissMaster","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.PurchaseOrder.POTermAndCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("purchaseId");

                    b.Property<string>("tarmsType")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("purchaseId");

                    b.ToTable("POTermAndCondition","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.PurchaseOrder.PaymentMode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("paymentModeName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("PaymentMode","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.PurchaseOrder.PaymentTerms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("paymentTermsCode")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("paymentTermsName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("PaymentTerms","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.PurchaseOrder.PurchaseOrderDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("cSDetailId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("currencyId");

                    b.Property<int?>("deliveryLocationId");

                    b.Property<string>("description");

                    b.Property<decimal?>("grQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemSpecificationId");

                    b.Property<string>("otherDeliveryLocation")
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal?>("poQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("poRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("purchaseId");

                    b.Property<decimal?>("tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("taxPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("vat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("vatPercent")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("cSDetailId");

                    b.HasIndex("currencyId");

                    b.HasIndex("deliveryLocationId");

                    b.HasIndex("itemSpecificationId");

                    b.HasIndex("purchaseId");

                    b.ToTable("PurchaseOrderDetails","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.PurchaseOrder.PurchaseOrderMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("billToLocation")
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("csMasterId");

                    b.Property<DateTime?>("deliveryDate");

                    b.Property<int?>("deliveryModeId");

                    b.Property<int?>("isClose");

                    b.Property<int?>("isCustomise");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isStockClose");

                    b.Property<decimal?>("netTotal");

                    b.Property<DateTime?>("paymentDate");

                    b.Property<int?>("paymentModeId");

                    b.Property<int?>("paymentTermsId");

                    b.Property<DateTime?>("poDate");

                    b.Property<string>("poNo")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("poStatus");

                    b.Property<string>("poType")
                        .HasMaxLength(50);

                    b.Property<int?>("receiveStatus");

                    b.Property<string>("remarks")
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("rfqRef")
                        .HasMaxLength(150);

                    b.Property<decimal?>("savingAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("savingPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("supplierId");

                    b.Property<decimal?>("taxAmount");

                    b.Property<decimal?>("taxPercent");

                    b.Property<decimal?>("totalAmount");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("userId");

                    b.Property<decimal?>("vatAmount");

                    b.Property<decimal?>("vatPercent");

                    b.HasKey("Id");

                    b.HasIndex("csMasterId");

                    b.HasIndex("deliveryModeId");

                    b.HasIndex("paymentModeId");

                    b.HasIndex("paymentTermsId");

                    b.HasIndex("supplierId");

                    b.ToTable("PurchaseOrderMaster","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.PurchaseProcess.CSDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("cSMasterId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("currentStatus");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemCategoryId");

                    b.Property<decimal?>("qty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("rFQReqDetailPriceId");

                    b.Property<decimal?>("rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("requisitionDetailId");

                    b.Property<int?>("supplierId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("cSMasterId");

                    b.HasIndex("itemCategoryId");

                    b.HasIndex("rFQReqDetailPriceId");

                    b.HasIndex("requisitionDetailId");

                    b.HasIndex("supplierId");

                    b.ToTable("CSDetail","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.PurchaseProcess.CSItemCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("itemCatName")
                        .HasMaxLength(50);

                    b.Property<string>("itemCatNameBN")
                        .HasMaxLength(50);

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("CSItemCategory","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.PurchaseProcess.CSMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("csDate");

                    b.Property<string>("csNo")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("csStatus");

                    b.Property<DateTime?>("expectedDeliveryDate");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("procurementTypeId");

                    b.Property<int?>("procurementValueId");

                    b.Property<int?>("rFQMasterId");

                    b.Property<int?>("requisitionId");

                    b.Property<string>("rfqRefNo")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("userId");

                    b.HasKey("Id");

                    b.HasIndex("procurementTypeId");

                    b.HasIndex("procurementValueId");

                    b.HasIndex("rFQMasterId");

                    b.HasIndex("requisitionId");

                    b.ToTable("CSMaster","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.PurchaseProcess.Justification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("cSMasterId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isJustify");

                    b.Property<int?>("justificationTypeId");

                    b.Property<string>("justificationValue")
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("cSMasterId");

                    b.HasIndex("justificationTypeId");

                    b.ToTable("Justification","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.PurchaseProcess.JustificationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("defaultValue");

                    b.Property<int?>("isDelete");

                    b.Property<string>("justificationTypeName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("JustificationType","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.PurchaseProcess.ProcurementType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("procurementTypeName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ProcurementType","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.PurchaseProcess.ProcurementValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("procurementValueName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ProcurementValue","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Requisition.DocumentAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("fileName");

                    b.Property<string>("filePath");

                    b.Property<string>("fileType");

                    b.Property<int?>("isDelete");

                    b.Property<int>("masterId");

                    b.Property<int>("matrixTypeId");

                    b.Property<string>("subject");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("matrixTypeId");

                    b.ToTable("DocumentAttachments","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Requisition.DocumentAttachmentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("fileName");

                    b.Property<string>("filePath");

                    b.Property<string>("fileType");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemSpecificationId");

                    b.Property<int?>("requisitionDetailId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("itemSpecificationId");

                    b.HasIndex("requisitionDetailId");

                    b.ToTable("DocumentAttachmentDetail","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Requisition.RFQDocumentAttachmentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("fileName");

                    b.Property<string>("filePath");

                    b.Property<string>("fileType");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("rFQPriceMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("rFQPriceMasterId");

                    b.ToTable("RFQDocumentAttachmentDetail","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Requisition.RFQMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isclose");

                    b.Property<DateTime?>("rfqDate");

                    b.Property<string>("rfqNo");

                    b.Property<string>("rfqSubject");

                    b.Property<int?>("status");

                    b.Property<string>("termscondition");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("RFQMaster","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Requisition.RFQPriceMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("rFQMasterId");

                    b.Property<int?>("supplierId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("rFQMasterId");

                    b.HasIndex("supplierId");

                    b.ToTable("RFQPriceMaster","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Requisition.RFQReqDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LotNo");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("rFQMasterId");

                    b.Property<int?>("requisitionDetailId");

                    b.Property<int?>("requisitionMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("rFQMasterId");

                    b.HasIndex("requisitionDetailId");

                    b.HasIndex("requisitionMasterId");

                    b.ToTable("RFQReqDetail","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Requisition.RFQReqDetailPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("rFQPriceMasterId");

                    b.Property<int?>("rFQReqDetailId");

                    b.Property<decimal?>("rate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("rFQPriceMasterId");

                    b.HasIndex("rFQReqDetailId");

                    b.ToTable("RFQReqDetailPrice","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Requisition.RFQSupDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("rFQMasterId");

                    b.Property<int?>("requisitionMasterId");

                    b.Property<int?>("supplierId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("rFQMasterId");

                    b.HasIndex("supplierId");

                    b.ToTable("RFQSupDetail","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Requisition.RequisitionAssignToTeamLead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("assignDate");

                    b.Property<int?>("assignToUserId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("requisitionDetailId");

                    b.Property<int?>("requisitionMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("requisitionDetailId");

                    b.HasIndex("requisitionMasterId");

                    b.ToTable("RequisitionAssignToTeamLeads","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Requisition.RequisitionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("budgetCode");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("deliveryLocation");

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemSpecificationId");

                    b.Property<DateTime?>("jobAssignDate");

                    b.Property<string>("justification");

                    b.Property<decimal?>("reqQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("reqRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("requisitionMasterId");

                    b.Property<DateTime?>("targetDate");

                    b.Property<int?>("teamMemberId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("itemSpecificationId");

                    b.HasIndex("requisitionMasterId");

                    b.HasIndex("teamMemberId");

                    b.ToTable("RequisitionDetails","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Requisition.RequisitionMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("approveDate");

                    b.Property<DateTime?>("assignDate");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("deliveryaddress");

                    b.Property<int?>("employeeinfoId");

                    b.Property<int?>("fundSourceId");

                    b.Property<int>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<string>("isPostPR")
                        .HasMaxLength(50);

                    b.Property<string>("justification");

                    b.Property<int?>("projectId");

                    b.Property<int?>("reqBy");

                    b.Property<DateTime?>("reqDate");

                    b.Property<string>("reqDept")
                        .HasMaxLength(200);

                    b.Property<string>("reqNo")
                        .HasMaxLength(150);

                    b.Property<string>("reqType")
                        .HasMaxLength(50);

                    b.Property<int?>("statusInfoId");

                    b.Property<string>("subject");

                    b.Property<DateTime?>("targetDate");

                    b.Property<int?>("teamMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeinfoId");

                    b.HasIndex("fundSourceId");

                    b.HasIndex("projectId");

                    b.HasIndex("statusInfoId");

                    b.HasIndex("teamMasterId");

                    b.ToTable("RequisitionMasters","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Requisition.RequisitionStatusLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CSMID");

                    b.Property<string>("EntryDate");

                    b.Property<int?>("POID");

                    b.Property<int?>("PPID");

                    b.Property<string>("Remarks");

                    b.Property<string>("Status");

                    b.Property<int?>("StatusID");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("naUserId");

                    b.Property<int?>("nextApproverUserId");

                    b.Property<int?>("requisitionDetailId");

                    b.Property<int?>("requisitionMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("userId");

                    b.HasKey("Id");

                    b.HasIndex("requisitionDetailId");

                    b.HasIndex("requisitionMasterId");

                    b.ToTable("RequisitionStatusLogs","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Stock.ItemReqDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemReqMasterId");

                    b.Property<int?>("itemspecificationId");

                    b.Property<decimal?>("quantity");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("itemReqMasterId");

                    b.HasIndex("itemspecificationId");

                    b.ToTable("ItemReqDetails","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Stock.ItemReqMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("reqDate");

                    b.Property<string>("reqNo");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ItemReqMaster","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Stock.OpeningStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("balanceUpTo");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemSpecificationId");

                    b.Property<decimal?>("openingQty");

                    b.Property<decimal?>("openingRate");

                    b.Property<decimal?>("openingValue");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("itemSpecificationId");

                    b.ToTable("OpeningStock","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Stock.StockDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("grQty");

                    b.Property<int?>("iOUDetailsId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemReqDetailsId");

                    b.Property<int?>("itemSpecificationId");

                    b.Property<int?>("orderDetailsId");

                    b.Property<decimal?>("poQty");

                    b.Property<int?>("productionRequsitionDetailsId");

                    b.Property<int?>("purchaseOrdersDetailId");

                    b.Property<decimal?>("purchaseRate");

                    b.Property<decimal?>("qty");

                    b.Property<decimal?>("rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("salesInvoiceDetailId");

                    b.Property<int?>("stockMasterId");

                    b.Property<int?>("storeDepartmentTypeId");

                    b.Property<int?>("transferDetailId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("iOUDetailsId");

                    b.HasIndex("itemReqDetailsId");

                    b.HasIndex("itemSpecificationId");

                    b.HasIndex("orderDetailsId");

                    b.HasIndex("productionRequsitionDetailsId");

                    b.HasIndex("purchaseOrdersDetailId");

                    b.HasIndex("salesInvoiceDetailId");

                    b.HasIndex("stockMasterId");

                    b.HasIndex("storeDepartmentTypeId");

                    b.HasIndex("transferDetailId");

                    b.ToTable("StockDetails","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Stock.StockMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IOUId");

                    b.Property<string>("MRNO");

                    b.Property<DateTime?>("StockDate");

                    b.Property<int?>("companyId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemReqMasterId");

                    b.Property<int?>("openingStockId");

                    b.Property<int?>("productionRequsitionId");

                    b.Property<int?>("purchaseId");

                    b.Property<int?>("purchaseOrdersMasterId");

                    b.Property<string>("receiveBy");

                    b.Property<DateTime?>("receiveDate");

                    b.Property<string>("receiveMode");

                    b.Property<string>("receiveNo");

                    b.Property<string>("receiveType");

                    b.Property<string>("remarks");

                    b.Property<int?>("stockStatusId");

                    b.Property<int?>("storeId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("userId");

                    b.HasKey("Id");

                    b.HasIndex("IOUId");

                    b.HasIndex("companyId");

                    b.HasIndex("itemReqMasterId");

                    b.HasIndex("openingStockId");

                    b.HasIndex("productionRequsitionId");

                    b.HasIndex("purchaseId");

                    b.HasIndex("purchaseOrdersMasterId");

                    b.HasIndex("storeId");

                    b.ToTable("StockMaster","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Supplier.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("addressTypeId");

                    b.Property<string>("blockSector");

                    b.Property<int?>("countryId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("districtId");

                    b.Property<int?>("divisionId");

                    b.Property<string>("houseVillage");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("organizationId");

                    b.Property<string>("postCode");

                    b.Property<string>("postOffice");

                    b.Property<int?>("thanaId");

                    b.Property<string>("type");

                    b.Property<string>("union");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("addressTypeId");

                    b.HasIndex("countryId");

                    b.HasIndex("districtId");

                    b.HasIndex("divisionId");

                    b.HasIndex("organizationId");

                    b.HasIndex("thanaId");

                    b.ToTable("Address","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Supplier.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Department");

                    b.Property<string>("Designation");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("mobileNumber");

                    b.Property<int?>("organizationId");

                    b.Property<string>("personName");

                    b.Property<string>("phoneNumber");

                    b.Property<int?>("resourceId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("organizationId");

                    b.HasIndex("resourceId");

                    b.ToTable("Contact","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Supplier.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LicenseNumber")
                        .HasMaxLength(100);

                    b.Property<string>("VATNumber")
                        .HasMaxLength(100);

                    b.Property<string>("alternativeEmail")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("eTinNumber")
                        .HasMaxLength(100);

                    b.Property<string>("email")
                        .HasMaxLength(100);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("ledgerId");

                    b.Property<string>("mobile")
                        .HasMaxLength(100);

                    b.Property<string>("orgCode")
                        .HasMaxLength(50);

                    b.Property<string>("organizationName")
                        .HasMaxLength(250);

                    b.Property<string>("organizationNameBn")
                        .HasMaxLength(250);

                    b.Property<string>("phone")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("website")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.HasIndex("ledgerId");

                    b.ToTable("Organization","SCM");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Supplier.SupplierItemInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemId");

                    b.Property<int?>("organizationId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("itemId");

                    b.HasIndex("organizationId");

                    b.ToTable("SupplierItemInfo","SCM");
                });

            modelBuilder.Entity("OPUSERP.SEBA.Data.Entity.CustomerProductWarranty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("invoiceNo")
                        .HasMaxLength(50);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("itemSpecificationId");

                    b.Property<int?>("leadsId");

                    b.Property<string>("modelNo")
                        .HasMaxLength(80);

                    b.Property<DateTime?>("salesDate");

                    b.Property<string>("serialNo")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("warrantyDescription");

                    b.Property<DateTime?>("warrantyEndDate");

                    b.Property<DateTime?>("warrantyStartDate");

                    b.HasKey("Id");

                    b.HasIndex("itemSpecificationId");

                    b.HasIndex("leadsId");

                    b.ToTable("CustomerProductWarranty","SEBA");
                });

            modelBuilder.Entity("OPUSERP.SEBA.Data.Entity.ProblemDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("customerProductWarrantyId");

                    b.Property<string>("description");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("problemMasterId");

                    b.Property<string>("problemTitle")
                        .HasMaxLength(300);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("customerProductWarrantyId");

                    b.HasIndex("problemMasterId");

                    b.ToTable("ProblemDetail","SEBA");
                });

            modelBuilder.Entity("OPUSERP.SEBA.Data.Entity.ProblemMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("priority")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("targetDate");

                    b.Property<string>("tokenNo")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ProblemMaster","SEBA");
                });

            modelBuilder.Entity("OPUSERP.Sales.Data.Entity.Collection.RepSalesCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("bankAmount");

                    b.Property<decimal?>("cashAmount");

                    b.Property<decimal?>("collectionAmount");

                    b.Property<DateTime?>("collectionDate");

                    b.Property<string>("collectionNumber");

                    b.Property<int?>("companyId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("leadsId");

                    b.Property<decimal?>("mobileAmount");

                    b.Property<int?>("paymentModeId");

                    b.Property<string>("remarks");

                    b.Property<int?>("salesCollectionId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.HasIndex("leadsId");

                    b.HasIndex("paymentModeId");

                    b.HasIndex("salesCollectionId");

                    b.ToTable("RepSalesCollection","Sales");
                });

            modelBuilder.Entity("OPUSERP.Sales.Data.Entity.Collection.RepSalesCollectionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount");

                    b.Property<DateTime?>("collectionDate");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks");

                    b.Property<int?>("repSalesCollectionId");

                    b.Property<int?>("salesCollectionDetailId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("repSalesCollectionId");

                    b.HasIndex("salesCollectionDetailId");

                    b.ToTable("RepSalesCollectionDetail","Sales");
                });

            modelBuilder.Entity("OPUSERP.Sales.Data.Entity.Collection.SalesCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("bankAmount");

                    b.Property<decimal?>("cashAmount");

                    b.Property<decimal?>("collectionAmount");

                    b.Property<DateTime?>("collectionDate");

                    b.Property<string>("collectionNumber");

                    b.Property<int?>("companyId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("leadsId");

                    b.Property<decimal?>("mobileAmount");

                    b.Property<int?>("paymentModeId");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.HasIndex("leadsId");

                    b.HasIndex("paymentModeId");

                    b.ToTable("SalesCollection","Sales");
                });

            modelBuilder.Entity("OPUSERP.Sales.Data.Entity.Collection.SalesCollectionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount");

                    b.Property<DateTime?>("collectionDate");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks");

                    b.Property<int?>("salesCollectionId");

                    b.Property<int?>("salesInvoiceMasterId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("salesCollectionId");

                    b.HasIndex("salesInvoiceMasterId");

                    b.ToTable("SalesCollectionDetail","Sales");
                });

            modelBuilder.Entity("OPUSERP.Sales.Data.Entity.Sales.RepSalesInvoiceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("agreementDetailsId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("discountAmount");

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("quantity");

                    b.Property<int?>("repSalesInvoiceMasterId");

                    b.Property<int?>("salesInvoiceDetailId");

                    b.Property<decimal?>("taxAmount");

                    b.Property<decimal?>("unitPrice");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("vatAmount");

                    b.HasKey("Id");

                    b.HasIndex("agreementDetailsId");

                    b.HasIndex("repSalesInvoiceMasterId");

                    b.HasIndex("salesInvoiceDetailId");

                    b.ToTable("RepSalesInvoiceDetail","Sales");
                });

            modelBuilder.Entity("OPUSERP.Sales.Data.Entity.Sales.RepSalesInvoiceMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("DiscountOnTotal");

                    b.Property<decimal?>("NetTotal");

                    b.Property<decimal?>("TAXOnTotal");

                    b.Property<decimal?>("VATOnTotal");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("invoiceDate");

                    b.Property<string>("invoiceNumber");

                    b.Property<int?>("isClose");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isStockClose");

                    b.Property<DateTime?>("lcDate");

                    b.Property<string>("lcNo")
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("leadsId");

                    b.Property<DateTime?>("paymentDate");

                    b.Property<int?>("salesInvoiceMasterId");

                    b.Property<decimal?>("totalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("leadsId");

                    b.HasIndex("salesInvoiceMasterId");

                    b.ToTable("RepSalesInvoiceMaster","Sales");
                });

            modelBuilder.Entity("OPUSERP.Sales.Data.Entity.Sales.SalesInvoiceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("agreementDetailsId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("discountAmount");

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("quantity");

                    b.Property<int?>("salesInvoiceMasterId");

                    b.Property<decimal?>("taxAmount");

                    b.Property<decimal?>("unitPrice");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("vatAmount");

                    b.HasKey("Id");

                    b.HasIndex("agreementDetailsId");

                    b.HasIndex("salesInvoiceMasterId");

                    b.ToTable("SalesInvoiceDetail","Sales");
                });

            modelBuilder.Entity("OPUSERP.Sales.Data.Entity.Sales.SalesInvoiceMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("DiscountOnTotal");

                    b.Property<decimal?>("NetTotal");

                    b.Property<decimal?>("TAXOnTotal");

                    b.Property<decimal?>("VATOnTotal");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("invoiceDate");

                    b.Property<string>("invoiceNumber");

                    b.Property<int?>("isClose");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isStockClose");

                    b.Property<DateTime?>("lcDate");

                    b.Property<string>("lcNo")
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("leadsId");

                    b.Property<DateTime?>("paymentDate");

                    b.Property<decimal?>("totalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("leadsId");

                    b.ToTable("SalesInvoiceMaster","Sales");
                });

            modelBuilder.Entity("OPUSERP.Shagotom.Data.Entity.Visitor.VisitorEntryDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cardNo");

                    b.Property<string>("company");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("date");

                    b.Property<string>("email");

                    b.Property<string>("imgUrl");

                    b.Property<int?>("isDelete");

                    b.Property<string>("mobile");

                    b.Property<string>("name");

                    b.Property<int?>("status");

                    b.Property<string>("time");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("visitorEntryMasterId");

                    b.HasKey("Id");

                    b.HasIndex("visitorEntryMasterId");

                    b.ToTable("VisitorEntryDetails","Shagotom");
                });

            modelBuilder.Entity("OPUSERP.Shagotom.Data.Entity.Visitor.VisitorEntryMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("status");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeInfoId");

                    b.ToTable("VisitorEntryMaster","Shagotom");
                });

            modelBuilder.Entity("OPUSERP.TAMS.Data.Entity.TaskAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("fileTitle");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("taskInformationId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("url");

                    b.HasKey("Id");

                    b.HasIndex("taskInformationId");

                    b.ToTable("TaskAttachment","TMS");
                });

            modelBuilder.Entity("OPUSERP.TAMS.Data.Entity.TaskComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("comments");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("taskInformationId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("taskInformationId");

                    b.ToTable("TaskComment","TMS");
                });

            modelBuilder.Entity("OPUSERP.TAMS.Data.Entity.TaskFollowUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("activityCategoryId");

                    b.Property<int?>("activitySessionId");

                    b.Property<int?>("activityStatusId");

                    b.Property<int?>("activityTypeId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description");

                    b.Property<DateTime?>("executionDate");

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<string>("note");

                    b.Property<int?>("remainderStatus");

                    b.Property<DateTime?>("reminderDate");

                    b.Property<string>("status");

                    b.Property<DateTime?>("targetDate");

                    b.Property<int?>("taskInformationId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("activityCategoryId");

                    b.HasIndex("activitySessionId");

                    b.HasIndex("activityStatusId");

                    b.HasIndex("activityTypeId");

                    b.HasIndex("taskInformationId");

                    b.ToTable("TaskFollowUp","TMS");
                });

            modelBuilder.Entity("OPUSERP.TAMS.Data.Entity.TaskFollower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("taskInformationId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("taskInformationId");

                    b.ToTable("TaskFollower","TMS");
                });

            modelBuilder.Entity("OPUSERP.TAMS.Data.Entity.TaskHours", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<decimal?>("hours");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("taskInformationId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("taskInformationId");

                    b.ToTable("TaskHours","TMS");
                });

            modelBuilder.Entity("OPUSERP.TAMS.Data.Entity.TaskInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("activityCategoryId");

                    b.Property<int?>("activitySessionId");

                    b.Property<int?>("activityStatusId");

                    b.Property<int?>("activityTypeId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description");

                    b.Property<int?>("employeeAssignId");

                    b.Property<int?>("employeeId");

                    b.Property<DateTime?>("endDate");

                    b.Property<decimal?>("estimatedHours");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("leadsId");

                    b.Property<string>("name")
                        .HasMaxLength(400);

                    b.Property<int?>("problemMasterId");

                    b.Property<DateTime?>("satrtDate");

                    b.Property<int?>("taskSectionId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("activityCategoryId");

                    b.HasIndex("activitySessionId");

                    b.HasIndex("activityStatusId");

                    b.HasIndex("activityTypeId");

                    b.HasIndex("employeeAssignId");

                    b.HasIndex("employeeId");

                    b.HasIndex("leadsId");

                    b.HasIndex("problemMasterId");

                    b.HasIndex("taskSectionId");

                    b.ToTable("TaskInformation","TMS");
                });

            modelBuilder.Entity("OPUSERP.TAMS.Data.Entity.TaskProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("approxEndDate");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<string>("description");

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<DateTime?>("satrtDate");

                    b.Property<string>("shortDescription");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("TaskProject","TMS");
                });

            modelBuilder.Entity("OPUSERP.TAMS.Data.Entity.TaskSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<int?>("taskProjectId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("taskProjectId");

                    b.ToTable("TaskSection","TMS");
                });

            modelBuilder.Entity("OPUSERP.TAMS.Data.Entity.TaskStatusList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("date");

                    b.Property<int?>("isDelete");

                    b.Property<string>("remarks");

                    b.Property<string>("status");

                    b.Property<int?>("taskInformationId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("taskInformationId");

                    b.ToTable("TaskStatusList","TMS");
                });

            modelBuilder.Entity("OPUSERP.TAMS.Data.Entity.TaskSubtask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("details");

                    b.Property<DateTime?>("endDate");

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("satrtDate");

                    b.Property<int?>("status");

                    b.Property<string>("statusDetails");

                    b.Property<int?>("taskInformationId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("taskInformationId");

                    b.ToTable("TaskSubtask","TMS");
                });

            modelBuilder.Entity("OPUSERP.TAMS.Data.Entity.TaskTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("tag");

                    b.Property<int?>("taskInformationId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("taskInformationId");

                    b.ToTable("TaskTag","TMS");
                });

            modelBuilder.Entity("OPUSERP.VEMS.Data.Entity.MasterData.CodeOfContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("CodeOfContact","VEMS");
                });

            modelBuilder.Entity("OPUSERP.VEMS.Data.Entity.MasterData.NDAFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("fileNmae")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("filePath")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("fileType")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("NDAFile","VEMS");
                });

            modelBuilder.Entity("OPUSERP.VEMS.Data.Entity.MasterData.RequiredDocuments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("RequiredDocuments","VEMS");
                });

            modelBuilder.Entity("OPUSERP.VEMS.Data.Entity.RegistrationForm.AuthorizedPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("contactNumber");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("department");

                    b.Property<string>("designation");

                    b.Property<string>("email");

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<int?>("registrationFormId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("registrationFormId");

                    b.ToTable("AuthorizedPerson","VEMS");
                });

            modelBuilder.Entity("OPUSERP.VEMS.Data.Entity.RegistrationForm.BankInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("accountName");

                    b.Property<string>("accountNumber");

                    b.Property<string>("bankName");

                    b.Property<string>("branchName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("registrationFormId");

                    b.Property<string>("routingNumber");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("registrationFormId");

                    b.ToTable("BankInformation","VEMS");
                });

            modelBuilder.Entity("OPUSERP.VEMS.Data.Entity.RegistrationForm.CompanyInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("businessNature");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("dateOfEstablishment");

                    b.Property<decimal?>("investment");

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("liquidityRatio");

                    b.Property<string>("officeTelephone");

                    b.Property<int?>("permanentEmployee");

                    b.Property<int?>("registrationFormId");

                    b.Property<decimal?>("turnover");

                    b.Property<string>("typeOfVendor");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("registrationFormId");

                    b.ToTable("CompanyInformation","VEMS");
                });

            modelBuilder.Entity("OPUSERP.VEMS.Data.Entity.RegistrationForm.InterestedArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("productName");

                    b.Property<int?>("registrationFormId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("registrationFormId");

                    b.ToTable("InterestedArea","VEMS");
                });

            modelBuilder.Entity("OPUSERP.VEMS.Data.Entity.RegistrationForm.RegistrationForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("alternativeEmail");

                    b.Property<int?>("approveType");

                    b.Property<string>("companyEmail");

                    b.Property<string>("companyName");

                    b.Property<string>("contactNumber");

                    b.Property<string>("contactPersonName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("eTinNumber");

                    b.Property<int?>("isDelete");

                    b.Property<string>("loginId");

                    b.Property<int?>("organizationId");

                    b.Property<string>("partialDisagreement");

                    b.Property<string>("password");

                    b.Property<int?>("procurementCategoryId");

                    b.Property<string>("productServiceName");

                    b.Property<string>("tradeLicenseNumber");

                    b.Property<int?>("typeOfNDAAgree");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("vatNumber");

                    b.HasKey("Id");

                    b.HasIndex("organizationId");

                    b.HasIndex("procurementCategoryId");

                    b.ToTable("RegistrationForm","VEMS");
                });

            modelBuilder.Entity("OPUSERP.VEMS.Data.Entity.RegistrationForm.TopOfficial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("contactNumber");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("department");

                    b.Property<string>("designation");

                    b.Property<string>("email");

                    b.Property<int?>("isDelete");

                    b.Property<string>("name");

                    b.Property<int?>("registrationFormId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("registrationFormId");

                    b.ToTable("TopOfficial","VEMS");
                });

            modelBuilder.Entity("OPUSERP.VEMS.Data.Entity.RegistrationForm.VendorAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("addressTypeId");

                    b.Property<string>("blockSector");

                    b.Property<int?>("countryId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("districtId");

                    b.Property<int?>("divisionId");

                    b.Property<string>("houseVillage");

                    b.Property<int?>("isDelete");

                    b.Property<string>("postCode");

                    b.Property<string>("postOffice");

                    b.Property<int?>("registrationFormId");

                    b.Property<int?>("thanaId");

                    b.Property<string>("type");

                    b.Property<string>("union");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("addressTypeId");

                    b.HasIndex("countryId");

                    b.HasIndex("districtId");

                    b.HasIndex("divisionId");

                    b.HasIndex("registrationFormId");

                    b.HasIndex("thanaId");

                    b.ToTable("VendorAddress","VEMS");
                });

            modelBuilder.Entity("OPUSERP.VEMS.Data.Entity.RegistrationForm.VendorAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("fileFor");

                    b.Property<string>("fileNmae");

                    b.Property<string>("filePath");

                    b.Property<string>("fileType");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("registrationFormId");

                    b.Property<string>("remark");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("registrationFormId");

                    b.ToTable("VendorAttachment","VEMS");
                });

            modelBuilder.Entity("OPUSERP.VIMS.Data.Visitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("contactNo");

                    b.Property<string>("contactPerson");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("department");

                    b.Property<string>("designation");

                    b.Property<string>("email");

                    b.Property<string>("floorNo");

                    b.Property<string>("imagePath");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("visitorCompany");

                    b.Property<string>("visitorContact");

                    b.Property<string>("visitorEmail");

                    b.Property<string>("visitorName");

                    b.HasKey("Id");

                    b.ToTable("Visitors");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Agreement.AgreementCostHead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("agreementHeadName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("AgreementCostHead","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Agreement.AgreementCostInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("agreementId");

                    b.Property<int?>("amountTypeId");

                    b.Property<int?>("costHeadId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("periodTypeId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("value");

                    b.HasKey("Id");

                    b.HasIndex("agreementId");

                    b.HasIndex("amountTypeId");

                    b.HasIndex("costHeadId");

                    b.HasIndex("periodTypeId");

                    b.ToTable("AgreementCostInformation","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Agreement.AgreementInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("agreementBy");

                    b.Property<string>("agreementDate");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("expireDate");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("supplierId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("vehicleId");

                    b.HasKey("Id");

                    b.HasIndex("supplierId");

                    b.HasIndex("vehicleId");

                    b.ToTable("AgreementInformation","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.CarManagement.SourceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("sourceName");

                    b.Property<string>("sourceNameBN");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("SourceType","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.CarManagement.SpareParts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("brandName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("modelName");

                    b.Property<string>("partsName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("SpareParts","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.FuelInfo.FuelComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("comment");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("fuelInformationId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("title")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("fuelInformationId");

                    b.ToTable("FuelComment","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.FuelInfo.FuelDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("fuelInformationId");

                    b.Property<int?>("fuelTypeId");

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("quantity");

                    b.Property<decimal?>("rate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("fuelInformationId");

                    b.HasIndex("fuelTypeId");

                    b.ToTable("FuelDetail","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.FuelInfo.FuelInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("fuelStationInfoId");

                    b.Property<DateTime?>("fuelTakenDate");

                    b.Property<int?>("isDelete");

                    b.Property<string>("odometer");

                    b.Property<string>("referenceNo")
                        .HasMaxLength(350);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("vehicleInformationId");

                    b.HasKey("Id");

                    b.HasIndex("fuelStationInfoId");

                    b.HasIndex("vehicleInformationId");

                    b.ToTable("FuelInformation","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.FuelInfo.FuelStation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("fuelStationName")
                        .HasMaxLength(350);

                    b.Property<int?>("isDelete");

                    b.Property<string>("phoneNumber")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("webSite")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("FuelStation","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.FuelStation.FuelStationComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("comments");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("fuelStationInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("titles")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("fuelStationInfoId");

                    b.ToTable("FuelStationComment","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.FuelStation.FuelStationInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("fuelStationName")
                        .HasMaxLength(150);

                    b.Property<int?>("isDelete");

                    b.Property<string>("managerName")
                        .HasMaxLength(150);

                    b.Property<string>("ownerName")
                        .HasMaxLength(150);

                    b.Property<string>("tradelicenseNo")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("FuelStationInfo","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.FuelStation.StationFuelInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("fuelStationInfoId");

                    b.Property<int?>("fuelTypeId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("noOfNozlzle");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("fuelStationInfoId");

                    b.HasIndex("fuelTypeId");

                    b.ToTable("StationFuelInfo","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.FuelStation.VMSAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("blockSector");

                    b.Property<int?>("countryId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("districtId");

                    b.Property<int?>("divisionId");

                    b.Property<int>("fuelStationInfoId");

                    b.Property<string>("houseVillage");

                    b.Property<int?>("isDelete");

                    b.Property<string>("postCode");

                    b.Property<string>("postOffice");

                    b.Property<int?>("thanaId");

                    b.Property<string>("type")
                        .IsRequired();

                    b.Property<string>("union");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("countryId");

                    b.HasIndex("districtId");

                    b.HasIndex("divisionId");

                    b.HasIndex("fuelStationInfoId");

                    b.HasIndex("thanaId");

                    b.ToTable("VMSAddress","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.FuelStation.VMSContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("fuelStationInfoId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("resourceID");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("fuelStationInfoId");

                    b.HasIndex("resourceID");

                    b.ToTable("VMSContact","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Inspection.InspectionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("comments");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("filePath");

                    b.Property<string>("filename");

                    b.Property<int?>("inspectionCheckListCategoryId");

                    b.Property<int?>("inspectionMasterId");

                    b.Property<int?>("isDelete");

                    b.Property<bool>("result");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("inspectionCheckListCategoryId");

                    b.HasIndex("inspectionMasterId");

                    b.ToTable("InspectionDetail","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Inspection.InspectionMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("inspectionDate");

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("odometer");

                    b.Property<string>("signature");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("vehicleInformationId");

                    b.HasKey("Id");

                    b.HasIndex("vehicleInformationId");

                    b.ToTable("InspectionMaster","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Inventory.PartsIssueDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("partsDetailId");

                    b.Property<int?>("partsIssueId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("partsDetailId");

                    b.HasIndex("partsIssueId");

                    b.ToTable("PartsIssueDetails","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Inventory.PartsIssueMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("issueDate");

                    b.Property<string>("issueNo")
                        .HasMaxLength(100);

                    b.Property<int?>("purchasePartsId");

                    b.Property<decimal>("quantity");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("vehicleId");

                    b.HasKey("Id");

                    b.HasIndex("purchasePartsId");

                    b.HasIndex("vehicleId");

                    b.ToTable("PartsIssueMaster","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Inventory.PurchasePartsDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("barCode")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isUse");

                    b.Property<decimal?>("price");

                    b.Property<int?>("purchasePartsMasterId");

                    b.Property<decimal?>("quantity");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("purchasePartsMasterId");

                    b.ToTable("PurchasePartsDetail","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Inventory.PurchasePartsMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("challanNo")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("price");

                    b.Property<string>("purchaseBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("purchaseDate");

                    b.Property<decimal?>("quantity");

                    b.Property<int?>("sparePartsId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("sparePartsId");

                    b.ToTable("PurchasePartsMaster","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Master.InspectionCheckLIstCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("checkListCategoryName");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int>("order");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("InspectionCheckLIstCategory","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Master.LimitAmountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("limitAmountTypeName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("LimitAmountType","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Master.LimitPeriodType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("limitPeriodTypeName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("LimitPeriodType","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Master.RenewalType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("renewalTypeName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("RenewalType","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Master.ReportField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("fieldValue");

                    b.Property<int?>("isDelete");

                    b.Property<string>("originName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ReportField","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Master.VMSResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("birthIdentificationNo")
                        .HasMaxLength(100);

                    b.Property<string>("birthPlace");

                    b.Property<string>("bloodGroup");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("dateOfBirth");

                    b.Property<int>("departmentID");

                    b.Property<int>("designationID");

                    b.Property<string>("disability");

                    b.Property<string>("email");

                    b.Property<string>("emailAddress");

                    b.Property<string>("emailAddressPersonal");

                    b.Property<string>("fatherNameBangla");

                    b.Property<string>("fatherNameEnglish");

                    b.Property<string>("fax");

                    b.Property<bool>("freedomFighter");

                    b.Property<string>("freedomFighterNo");

                    b.Property<string>("gender");

                    b.Property<string>("homeDistrict");

                    b.Property<string>("imagePath");

                    b.Property<int?>("isDelete");

                    b.Property<string>("maritalStatus");

                    b.Property<string>("mobile");

                    b.Property<string>("mobileNumberPersonal")
                        .HasMaxLength(50);

                    b.Property<string>("motherNameBangla");

                    b.Property<string>("motherNameEnglish");

                    b.Property<string>("nameBangla");

                    b.Property<string>("nameEnglish");

                    b.Property<string>("nationalID")
                        .HasMaxLength(100);

                    b.Property<string>("nationality");

                    b.Property<string>("pabx");

                    b.Property<string>("phone");

                    b.Property<int?>("religionId");

                    b.Property<string>("resourceCode")
                        .HasMaxLength(50);

                    b.Property<int?>("resourceTypeId");

                    b.Property<string>("specialSkill");

                    b.Property<string>("telephoneResidence");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("departmentID");

                    b.HasIndex("designationID");

                    b.HasIndex("religionId");

                    b.HasIndex("resourceTypeId");

                    b.ToTable("VMSResource","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Master.VMSResourceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("empType");

                    b.Property<string>("empTypeBn");

                    b.Property<int?>("isDelete");

                    b.Property<string>("shortName");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("VMSResourceType","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Requisition.RequisitionComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("comments");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("requisitionMasterId");

                    b.Property<string>("titles")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("requisitionMasterId");

                    b.ToTable("RequisitionComment","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Requisition.VMSRequisitionDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("requisitionId");

                    b.Property<string>("routingPlace");

                    b.Property<int?>("sequenseNo");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("requisitionId");

                    b.ToTable("VMSRequisitionDetails","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Requisition.VMSRequisitionMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("districtId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("reqBy");

                    b.Property<string>("reqDate");

                    b.Property<string>("reqNo");

                    b.Property<string>("reqTime");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("vehicleCondition");

                    b.Property<string>("vehicleSeat");

                    b.Property<int?>("vehicleTypeId");

                    b.HasKey("Id");

                    b.HasIndex("districtId");

                    b.HasIndex("vehicleTypeId");

                    b.ToTable("VMSRequisitionMaster","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Requisition.VehicleUse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("comments");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("journeyDate");

                    b.Property<string>("journeyDestination");

                    b.Property<string>("journeyFrom");

                    b.Property<string>("journeyTime");

                    b.Property<decimal?>("odometerValuejourneyEnd");

                    b.Property<decimal?>("odometerValuejourneyStart");

                    b.Property<decimal?>("petrolOpeningStock");

                    b.Property<decimal?>("petrolSupply");

                    b.Property<decimal?>("petrolUse");

                    b.Property<string>("reason");

                    b.Property<int?>("requisitionId");

                    b.Property<string>("timetoleave");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("vehicleInformationId");

                    b.HasKey("Id");

                    b.HasIndex("requisitionId");

                    b.HasIndex("vehicleInformationId");

                    b.ToTable("VehicleUse","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.SOR.SORDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("rate");

                    b.Property<int>("sORMasterId");

                    b.Property<int?>("sparePartsId");

                    b.Property<int?>("supplierId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("sORMasterId");

                    b.HasIndex("sparePartsId");

                    b.HasIndex("supplierId");

                    b.ToTable("SORDetails","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.SOR.SORMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("duration");

                    b.Property<DateTime>("fromDate");

                    b.Property<decimal?>("grandTotal");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("numberOfItems");

                    b.Property<string>("sorNumber");

                    b.Property<string>("sorTitle");

                    b.Property<int?>("statusId");

                    b.Property<DateTime>("toDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("SORMaster","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.ServiceVehicle.ItemStoreInServiceCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("quantity");

                    b.Property<int?>("sparePartsId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("vehicleServiceHistoryId");

                    b.HasKey("Id");

                    b.HasIndex("sparePartsId");

                    b.HasIndex("vehicleServiceHistoryId");

                    b.ToTable("ItemStoreInServiceCenter","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.ServiceVehicle.LabelType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("labelTypeName")
                        .HasMaxLength(250);

                    b.Property<int?>("sortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("LabelType","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.ServiceVehicle.ReminderSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("scheduleDate");

                    b.Property<decimal?>("scheduleOdometer");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("vehicleServiceReminderId");

                    b.HasKey("Id");

                    b.HasIndex("vehicleServiceReminderId");

                    b.ToTable("ReminderSchedule","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.ServiceVehicle.ServiceLabel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("labelTypeId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("vehicleInformationId");

                    b.Property<int?>("vehicleServiceHistoryId");

                    b.HasKey("Id");

                    b.HasIndex("labelTypeId");

                    b.HasIndex("vehicleServiceHistoryId");

                    b.ToTable("ServiceLabel","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.ServiceVehicle.ServiceTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description");

                    b.Property<int?>("isDelete");

                    b.Property<string>("serviceTaskName")
                        .HasMaxLength(350);

                    b.Property<string>("subTaskName")
                        .HasMaxLength(350);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ServiceTask","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.ServiceVehicle.VMSSupplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("isFuel")
                        .HasMaxLength(20);

                    b.Property<string>("isParts")
                        .HasMaxLength(20);

                    b.Property<string>("isService")
                        .HasMaxLength(20);

                    b.Property<string>("isVehicle")
                        .HasMaxLength(20);

                    b.Property<string>("phoneNo")
                        .HasMaxLength(20);

                    b.Property<string>("supplierCode")
                        .HasMaxLength(20);

                    b.Property<string>("supplierName")
                        .HasMaxLength(250);

                    b.Property<string>("tinNo")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("vatRegNo")
                        .HasMaxLength(20);

                    b.Property<string>("website")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("VMSSupplier","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.ServiceVehicle.VehicleLineItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("labor");

                    b.Property<decimal?>("parts");

                    b.Property<int?>("sparePartsId");

                    b.Property<decimal?>("subTotal");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("vehicleServiceHistoryId");

                    b.HasKey("Id");

                    b.HasIndex("sparePartsId");

                    b.HasIndex("vehicleServiceHistoryId");

                    b.ToTable("VehicleLineItem","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.ServiceVehicle.VehicleMaintenanceLimit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("vehicleInformationId");

                    b.HasKey("Id");

                    b.HasIndex("vehicleInformationId");

                    b.ToTable("VehicleMaintenanceLimit","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.ServiceVehicle.VehicleMaintenanceLimitDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("fromDate");

                    b.Property<int?>("fuelTypeId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("limitAmountTypeId");

                    b.Property<int?>("limitPeriodTypeId");

                    b.Property<decimal?>("limitValue");

                    b.Property<DateTime?>("toDate");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("vehicleMaintenanceLimitId");

                    b.HasKey("Id");

                    b.HasIndex("fuelTypeId");

                    b.HasIndex("limitAmountTypeId");

                    b.HasIndex("limitPeriodTypeId");

                    b.HasIndex("vehicleMaintenanceLimitId");

                    b.ToTable("VehicleMaintenanceLimitDetail","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.ServiceVehicle.VehicleServiceComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("comments");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("titles")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("vehicleServiceHistoryId");

                    b.HasKey("Id");

                    b.HasIndex("vehicleServiceHistoryId");

                    b.ToTable("VehicleServiceComment","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.ServiceVehicle.VehicleServiceHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("billCommitteeDate");

                    b.Property<string>("billCommitteeNo")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("completionDate");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("discount");

                    b.Property<string>("discountType");

                    b.Property<string>("generalNotes");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("issueDate");

                    b.Property<decimal?>("laborTotal");

                    b.Property<decimal?>("partsTotal");

                    b.Property<string>("referenceNo")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("startDate");

                    b.Property<decimal?>("subTotal");

                    b.Property<int?>("supplierId");

                    b.Property<decimal?>("tax");

                    b.Property<string>("taxType");

                    b.Property<decimal?>("total");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int>("vehicleInformationId");

                    b.Property<DateTime?>("workorderDate");

                    b.Property<string>("workorderNo")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("supplierId");

                    b.HasIndex("vehicleInformationId");

                    b.ToTable("VehicleServiceHistory","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.ServiceVehicle.VehicleServiceIssue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("assignedTo");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description");

                    b.Property<DateTime?>("dueDate");

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("odometerValue");

                    b.Property<decimal?>("overdueOdometerValue");

                    b.Property<string>("reportedBy");

                    b.Property<DateTime?>("reportedDate");

                    b.Property<string>("summary");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("vehicleInformationId");

                    b.HasKey("Id");

                    b.HasIndex("vehicleInformationId");

                    b.ToTable("VehicleServiceIssue","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.ServiceVehicle.VehicleServiceIssueComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("comment");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("title")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("vehicleServiceIssueId");

                    b.HasKey("Id");

                    b.HasIndex("vehicleServiceIssueId");

                    b.ToTable("VehicleServiceIssueComment","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.ServiceVehicle.VehicleServiceReminder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("comments");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("dueMeterThreshold");

                    b.Property<int?>("dueTimeThreshold");

                    b.Property<string>("dueTimeThresholdType")
                        .HasMaxLength(10);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("manualDay");

                    b.Property<string>("manualMonth")
                        .HasMaxLength(10);

                    b.Property<decimal?>("manualOdometer");

                    b.Property<int?>("manualYear");

                    b.Property<decimal?>("meterInterval");

                    b.Property<string>("sendEmailNotification")
                        .HasMaxLength(3);

                    b.Property<string>("setManualReminder")
                        .HasMaxLength(3);

                    b.Property<int?>("sparePartsId");

                    b.Property<int?>("timeInterval");

                    b.Property<string>("timeIntervalType")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("vehicleInformationId");

                    b.HasKey("Id");

                    b.HasIndex("sparePartsId");

                    b.HasIndex("vehicleInformationId");

                    b.ToTable("VehicleServiceReminder","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.Aspiration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("aspirationName")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("sortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Aspiration","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.BlockType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("blockTypeName")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("sortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("BlockType","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.BrakeSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("brakeSystemName")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("sortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("BrakeSystem","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.CamType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("camTypeName")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("sortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("CamType","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.ContactRenewalReminder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("emailId")
                        .HasMaxLength(100);

                    b.Property<string>("emailNotifications")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("expireDate");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("issueDate");

                    b.Property<string>("reminderType")
                        .HasMaxLength(150);

                    b.Property<string>("reminderValue")
                        .HasMaxLength(100);

                    b.Property<int?>("renewalTypeId");

                    b.Property<int?>("supplierId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("renewalTypeId");

                    b.HasIndex("supplierId");

                    b.ToTable("ContactRenewalReminder","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.DriveType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("driveTypeName")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("sortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("DriveType","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.FuelInduction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("fuelInductionName")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("sortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("FuelInduction","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.FuelType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("fuelTypeName")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("sortOrder");

                    b.Property<string>("unit");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("FuelType","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.LinkedVehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("vehicleInformationId");

                    b.HasKey("Id");

                    b.HasIndex("vehicleInformationId");

                    b.ToTable("LinkedVehicle","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.MeterType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("meterTypeName")
                        .HasMaxLength(250);

                    b.Property<int?>("sortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("MeterType","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.Odometer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("odometerValue")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("readingDate");

                    b.Property<int?>("sortOrder");

                    b.Property<string>("sourceType")
                        .HasMaxLength(250);

                    b.Property<int?>("sourceTypeId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("vehicleInformationId");

                    b.HasKey("Id");

                    b.HasIndex("vehicleInformationId");

                    b.ToTable("Odometer","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.TransmissionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("sortOrder");

                    b.Property<string>("transmissionTypeName")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("TransmissionType","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleBodySubType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("sortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("vehicleBodySubTypeName")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("VehicleBodySubType","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleBodyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("sortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("vehicleBodyTypeName")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("VehicleBodyType","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("comments");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("titles")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("vehicleInformationId");

                    b.HasKey("Id");

                    b.HasIndex("vehicleInformationId");

                    b.ToTable("VehicleComment","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleEngineTransmission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("aspirationId");

                    b.Property<int?>("blockTypeId");

                    b.Property<decimal?>("bore");

                    b.Property<int?>("camTypeId");

                    b.Property<decimal?>("compression");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("cylinders");

                    b.Property<decimal?>("displacement");

                    b.Property<string>("engineBrand")
                        .HasMaxLength(250);

                    b.Property<string>("engineSummary");

                    b.Property<int?>("fuelInductionId");

                    b.Property<string>("fuelQuality")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("maxHp");

                    b.Property<decimal?>("maxTorque");

                    b.Property<string>("redLineRpm")
                        .HasMaxLength(250);

                    b.Property<decimal?>("stroke");

                    b.Property<string>("transmissionBrand")
                        .HasMaxLength(250);

                    b.Property<decimal?>("transmissionGears");

                    b.Property<string>("transmissionSummary");

                    b.Property<int?>("transmissionTypeId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("valves");

                    b.Property<int?>("vehicleInformationId");

                    b.HasKey("Id");

                    b.HasIndex("aspirationId");

                    b.HasIndex("blockTypeId");

                    b.HasIndex("camTypeId");

                    b.HasIndex("fuelInductionId");

                    b.HasIndex("transmissionTypeId");

                    b.HasIndex("vehicleInformationId");

                    b.ToTable("VehicleEngineTransmission","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleFluid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("capacity");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("fuelQuality")
                        .HasMaxLength(250);

                    b.Property<string>("fuelTankNo");

                    b.Property<int?>("fuelTypeId");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("vehicleInformationId");

                    b.HasKey("Id");

                    b.HasIndex("fuelTypeId");

                    b.HasIndex("vehicleInformationId");

                    b.ToTable("VehicleFluid","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("sortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("vehicleGroupName")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("VehicleGroup","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("color")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("licensePlate")
                        .HasMaxLength(50);

                    b.Property<decimal?>("msrPrice");

                    b.Property<string>("operatorId");

                    b.Property<string>("registrationStateArea")
                        .HasMaxLength(350);

                    b.Property<string>("trim")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("vehicleBodySubTypeId");

                    b.Property<int?>("vehicleBodyTypeId");

                    b.Property<int?>("vehicleGroupId");

                    b.Property<int?>("vehicleLinkedLId");

                    b.Property<int?>("vehicleManufactureId");

                    b.Property<int?>("vehicleModelId");

                    b.Property<string>("vehicleName")
                        .HasMaxLength(250);

                    b.Property<int?>("vehicleOwnershipId");

                    b.Property<int?>("vehicleStatusId");

                    b.Property<int?>("vehicleTypeId");

                    b.Property<string>("vehicleYear")
                        .HasMaxLength(4);

                    b.Property<string>("vinNo")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("vehicleBodySubTypeId");

                    b.HasIndex("vehicleBodyTypeId");

                    b.HasIndex("vehicleGroupId");

                    b.HasIndex("vehicleManufactureId");

                    b.HasIndex("vehicleModelId");

                    b.HasIndex("vehicleOwnershipId");

                    b.HasIndex("vehicleStatusId");

                    b.HasIndex("vehicleTypeId");

                    b.ToTable("VehicleInformation","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleManufacture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("sortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("vehicleManufactureName")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("VehicleManufacture","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("sortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("vehicleModelName")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("VehicleModel","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleOwnership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("sortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("vehicleOwnershipName")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("VehicleOwnership","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleRenewalReminder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("emailId")
                        .HasMaxLength(100);

                    b.Property<string>("emailNotifications")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("expireDate");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("issueDate");

                    b.Property<string>("reminderType")
                        .HasMaxLength(150);

                    b.Property<string>("reminderValue")
                        .HasMaxLength(100);

                    b.Property<int?>("renewalTypeId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("vehicleInformationId");

                    b.HasKey("Id");

                    b.HasIndex("renewalTypeId");

                    b.HasIndex("vehicleInformationId");

                    b.ToTable("VehicleRenewalReminder","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("meterTypeId");

                    b.Property<int?>("sortOrder");

                    b.Property<int?>("unitId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("vehicleInformationId");

                    b.HasKey("Id");

                    b.HasIndex("meterTypeId");

                    b.HasIndex("unitId");

                    b.HasIndex("vehicleInformationId");

                    b.ToTable("VehicleSetting","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleSpecification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("bedLength");

                    b.Property<decimal?>("cargoVolume");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<decimal?>("curbWeight");

                    b.Property<decimal?>("epaCity");

                    b.Property<decimal?>("epaCombined");

                    b.Property<decimal?>("epaHighway");

                    b.Property<decimal?>("grossVehicleWeightRating");

                    b.Property<decimal?>("groundClearance");

                    b.Property<decimal?>("height");

                    b.Property<decimal?>("interiorVolume");

                    b.Property<int?>("isDelete");

                    b.Property<decimal?>("length");

                    b.Property<decimal?>("maxPayload");

                    b.Property<decimal?>("passengerVolume");

                    b.Property<decimal?>("towingCapacity");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("vehicleInformationId");

                    b.Property<decimal?>("width");

                    b.HasKey("Id");

                    b.HasIndex("vehicleInformationId");

                    b.ToTable("VehicleSpecification","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("colorCode")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("sortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("vehicleStatusName")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("VehicleStatus","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("sortOrder");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("vehicleTypeName")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("VehicleType","VMS");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleWheelTire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("brakeSystemId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("driveTypeId");

                    b.Property<decimal?>("frontTirePsi");

                    b.Property<string>("frontTireType")
                        .HasMaxLength(250);

                    b.Property<decimal?>("frontTrackWidth");

                    b.Property<string>("frontWheelDiameter")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<string>("rearAxle")
                        .HasMaxLength(250);

                    b.Property<decimal?>("rearTirePsi");

                    b.Property<string>("rearTireType")
                        .HasMaxLength(250);

                    b.Property<decimal?>("rearTrackWidth");

                    b.Property<string>("rearWheelDiameter")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("vehicleInformationId");

                    b.Property<decimal?>("wheelBase");

                    b.HasKey("Id");

                    b.HasIndex("brakeSystemId");

                    b.HasIndex("driveTypeId");

                    b.HasIndex("vehicleInformationId");

                    b.ToTable("VehicleWheelTire","VMS");
                });

            modelBuilder.Entity("OPUSERP.Workflow.Data.Entity.ActionInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<string>("description");

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ActionInfo","WMS");
                });

            modelBuilder.Entity("OPUSERP.Workflow.Data.Entity.Doc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date");

                    b.Property<string>("content");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("docId");

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isClose");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isInitial");

                    b.Property<string>("noteType");

                    b.Property<string>("number");

                    b.Property<string>("subject");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("docId");

                    b.HasIndex("employeeId");

                    b.ToTable("Doc","WMS");
                });

            modelBuilder.Entity("OPUSERP.Workflow.Data.Entity.DocAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("docId");

                    b.Property<string>("fileUrl");

                    b.Property<int?>("isDelete");

                    b.Property<string>("title");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("docId");

                    b.ToTable("DocAttachment","WMS");
                });

            modelBuilder.Entity("OPUSERP.Workflow.Data.Entity.DocRoute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("actionId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("docId");

                    b.Property<int?>("employeeId");

                    b.Property<int?>("employeeReplaceId");

                    b.Property<int?>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("order");

                    b.Property<string>("remarks");

                    b.Property<string>("status");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("actionId");

                    b.HasIndex("docId");

                    b.HasIndex("employeeId");

                    b.HasIndex("employeeReplaceId");

                    b.ToTable("DocRoute","WMS");
                });

            modelBuilder.Entity("OPUSERP.Workflow.Data.Entity.DraftAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("draftDocId");

                    b.Property<string>("fileUrl");

                    b.Property<int?>("isDelete");

                    b.Property<string>("title");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("draftDocId");

                    b.ToTable("DraftAttachment","WMS");
                });

            modelBuilder.Entity("OPUSERP.Workflow.Data.Entity.DraftDoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date");

                    b.Property<string>("content");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("docId");

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isClose");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("isInitial");

                    b.Property<string>("noteType");

                    b.Property<string>("number");

                    b.Property<string>("subject");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("docId");

                    b.HasIndex("employeeId");

                    b.ToTable("DraftDoc","WMS");
                });

            modelBuilder.Entity("OPUSERP.Workflow.Data.Entity.DraftRouting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("draftDocId");

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("order");

                    b.Property<string>("remarks");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("draftDocId");

                    b.HasIndex("employeeId");

                    b.ToTable("DraftRouting","WMS");
                });

            modelBuilder.Entity("OPUSERP.Workflow.Data.Entity.ReviewRoute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("actionId");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("docRouteId");

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isDelete");

                    b.Property<string>("status");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("actionId");

                    b.HasIndex("docRouteId");

                    b.HasIndex("employeeId");

                    b.ToTable("ReviewRoute","WMS");
                });

            modelBuilder.Entity("OPUSERP.Workflow.Data.Entity.Urlgeneration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Urlgeneration","WMS");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Data.Entity.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.AccountingSettings.AccountGroup", b =>
                {
                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.GroupNature", "nature")
                        .WithMany()
                        .HasForeignKey("natureId");

                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.AccountGroup", "parentGroup")
                        .WithMany()
                        .HasForeignKey("parentGroupId");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.AccountingSettings.BalanceSheetDetails", b =>
                {
                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.Ledger", "ledger")
                        .WithMany()
                        .HasForeignKey("ledgerId");

                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.NoteMaster", "noteMaster")
                        .WithMany()
                        .HasForeignKey("noteMasterId");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.AccountingSettings.BalanceSheetMaster", b =>
                {
                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.AccountGroup", "accountGroup")
                        .WithMany()
                        .HasForeignKey("accountGroupId");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.AccountingSettings.BalanceSheetProcess", b =>
                {
                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.BalanceSheetDetails", "balanceSheetDetails")
                        .WithMany()
                        .HasForeignKey("balanceSheetDetailsId");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.AccountingSettings.Ledger", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.Currency", "currency")
                        .WithMany()
                        .HasForeignKey("currencyId");

                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.AccountGroup", "group")
                        .WithMany()
                        .HasForeignKey("groupId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.SpecialBranchUnit", "specialBranchUnit")
                        .WithMany()
                        .HasForeignKey("specialBranchUnitId");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.AccountingSettings.LedgerRelation", b =>
                {
                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.Ledger", "ledger")
                        .WithMany()
                        .HasForeignKey("ledgerId");

                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.Ledger", "subLedger")
                        .WithMany()
                        .HasForeignKey("subLedgerId");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.AccountingSettings.NoteMaster", b =>
                {
                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.BalanceSheetMaster", "balanceSheetMaster")
                        .WithMany()
                        .HasForeignKey("balanceSheetMasterId");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.AccountingSettings.OpeningBalance", b =>
                {
                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.LedgerRelation", "ledgerRelation")
                        .WithMany()
                        .HasForeignKey("ledgerRelationId");

                    b.HasOne("OPUSERP.Accounting.Data.Entity.Voucher.TransectionMode", "transectionMode")
                        .WithMany()
                        .HasForeignKey("transectionModeId");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.AccountingSettings.ProfitAndLossAccountDetails", b =>
                {
                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.Ledger", "ledger")
                        .WithMany()
                        .HasForeignKey("ledgerId");

                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.ProfitAndLossAccountMaster", "profitAndLossAccountMaster")
                        .WithMany()
                        .HasForeignKey("profitAndLossAccountMasterId");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.AccountingSettings.ProfitAndLossAccountMaster", b =>
                {
                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.AccountGroup", "accountGroup")
                        .WithMany()
                        .HasForeignKey("accountGroupId");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.AccountingSettings.ProfitAndLossAccountProcess", b =>
                {
                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.ProfitAndLossAccountDetails", "profitAndLossAccountDetails")
                        .WithMany()
                        .HasForeignKey("profitAndLossAccountDetailsId");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.AccountingSettings.SubLedger", b =>
                {
                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.Ledger", "ledger")
                        .WithMany()
                        .HasForeignKey("ledgerId");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.FDR.BankChargeMaster", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.BankBranchDetails", "bankBranchDetails")
                        .WithMany()
                        .HasForeignKey("bankBranchDetailsId");

                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.LedgerRelation", "ledgerRelation")
                        .WithMany()
                        .HasForeignKey("ledgerRelationId");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.FDR.FDREncashment", b =>
                {
                    b.HasOne("OPUSERP.Accounting.Data.Entity.FDR.FDRInvestmentDetail", "fDRInvestmentDetail")
                        .WithMany()
                        .HasForeignKey("fDRInvestmentDetailId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.Bank", "interestBank")
                        .WithMany()
                        .HasForeignKey("interestBankId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.Bank", "principleBank")
                        .WithMany()
                        .HasForeignKey("principleBankId");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.FDR.FDRInvesmentMaster", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.Bank", "bank")
                        .WithMany()
                        .HasForeignKey("bankId");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.FDR.FDRInvestmentDetail", b =>
                {
                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.LedgerRelation", "LinkledgerRelation")
                        .WithMany()
                        .HasForeignKey("LinkledgerRelationId");

                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.LedgerRelation", "ReceiveLinkLedger")
                        .WithMany()
                        .HasForeignKey("ReceiveLinkLedgerId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.Bank", "bank")
                        .WithMany()
                        .HasForeignKey("bankId");

                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.LedgerRelation", "encashRecLedgerRel")
                        .WithMany()
                        .HasForeignKey("encashRecLedgerRelId");

                    b.HasOne("OPUSERP.Accounting.Data.Entity.FDR.FDRInvesmentMaster", "fDRInvesmentMaster")
                        .WithMany()
                        .HasForeignKey("fDRInvesmentMasterId");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.MasterData.Signature", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");

                    b.HasOne("OPUSERP.Accounting.Data.Entity.MasterData.SignatureType", "signatureType")
                        .WithMany()
                        .HasForeignKey("signatureTypeId");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.NonPoTransaction.DailyBillReceive", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Department", "NonDepartment")
                        .WithMany()
                        .HasForeignKey("NonDepartmentId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "ResposneemployeeInfo")
                        .WithMany()
                        .HasForeignKey("ResposneemployeeInfoId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Supplier.Organization", "supplier")
                        .WithMany()
                        .HasForeignKey("supplierId");

                    b.HasOne("OPUSERP.Accounting.Data.Entity.Voucher.VoucherMaster", "voucherMaster")
                        .WithMany()
                        .HasForeignKey("voucherMasterId");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.NonPoTransaction.VatTaxRate", b =>
                {
                    b.HasOne("OPUSERP.Accounting.Data.Entity.NonPoTransaction.RateType", "rateType")
                        .WithMany()
                        .HasForeignKey("rateTypeId");

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.TaxYear", "taxYear")
                        .WithMany()
                        .HasForeignKey("taxYearId");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.Voucher.AutoVoucherDetail", b =>
                {
                    b.HasOne("OPUSERP.Accounting.Data.Entity.Voucher.AutoVoucherMaster", "autoVoucherMaster")
                        .WithMany()
                        .HasForeignKey("autoVoucherMasterId");

                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.LedgerRelation", "ledgerRelation")
                        .WithMany()
                        .HasForeignKey("ledgerRelationId");

                    b.HasOne("OPUSERP.Accounting.Data.Entity.Voucher.TransectionMode", "transectionMode")
                        .WithMany()
                        .HasForeignKey("transectionModeId");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.Voucher.AutoVoucherMaster", b =>
                {
                    b.HasOne("OPUSERP.Accounting.Data.Entity.Voucher.AutoVoucherName", "autoVoucherName")
                        .WithMany()
                        .HasForeignKey("autoVoucherNameId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.Project", "project")
                        .WithMany()
                        .HasForeignKey("projectId");

                    b.HasOne("OPUSERP.Accounting.Data.Entity.MasterData.VoucherType", "voucherType")
                        .WithMany()
                        .HasForeignKey("voucherTypeId");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.Voucher.CostCentreAllocation", b =>
                {
                    b.HasOne("OPUSERP.Accounting.Data.Entity.MasterData.CostCentre", "costCentre")
                        .WithMany()
                        .HasForeignKey("costCentreId");

                    b.HasOne("OPUSERP.Accounting.Data.Entity.Voucher.VoucherDetail", "voucherDetail")
                        .WithMany()
                        .HasForeignKey("voucherDetailId");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.Voucher.DeleteVoucherMaster", b =>
                {
                    b.HasOne("OPUSERP.Accounting.Data.Entity.MasterData.VoucherType", "voucherType")
                        .WithMany()
                        .HasForeignKey("voucherTypeId");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.Voucher.VoucherDetail", b =>
                {
                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.LedgerRelation", "ledgerRelation")
                        .WithMany()
                        .HasForeignKey("ledgerRelationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.SpecialBranchUnit", "specialBranchUnit")
                        .WithMany()
                        .HasForeignKey("specialBranchUnitId");

                    b.HasOne("OPUSERP.Accounting.Data.Entity.Voucher.TransectionMode", "transectionMode")
                        .WithMany()
                        .HasForeignKey("transectionModeId");

                    b.HasOne("OPUSERP.Accounting.Data.Entity.Voucher.VoucherMaster", "voucher")
                        .WithMany()
                        .HasForeignKey("voucherId");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.Voucher.VoucherMaster", b =>
                {
                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryYear", "fiscalYear")
                        .WithMany()
                        .HasForeignKey("fiscalYearId");

                    b.HasOne("OPUSERP.Accounting.Data.Entity.MasterData.FundSource", "fundSource")
                        .WithMany()
                        .HasForeignKey("fundSourceId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.Project", "project")
                        .WithMany()
                        .HasForeignKey("projectId");

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.TaxYear", "taxYear")
                        .WithMany()
                        .HasForeignKey("taxYearId");

                    b.HasOne("OPUSERP.Accounting.Data.Entity.MasterData.VoucherType", "voucherType")
                        .WithMany()
                        .HasForeignKey("voucherTypeId");
                });

            modelBuilder.Entity("OPUSERP.Accounting.Data.Entity.Voucher.VoucherSetting", b =>
                {
                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.LedgerRelation", "bankAccountLedger")
                        .WithMany()
                        .HasForeignKey("bankAccountLedgerId");

                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.LedgerRelation", "cashAccountLedger")
                        .WithMany()
                        .HasForeignKey("cashAccountLedgerId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.PaymentMode", "paymentMode")
                        .WithMany()
                        .HasForeignKey("paymentModeId");
                });

            modelBuilder.Entity("OPUSERP.Budget.Data.Entity.BudgetBranchAddress", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.AddressType", "addressType")
                        .WithMany()
                        .HasForeignKey("addressTypeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.SpecialBranchUnit", "budgetBranch")
                        .WithMany()
                        .HasForeignKey("budgetBranchId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryId");

                    b.HasOne("OPUSERP.Data.Entity.Master.District", "district")
                        .WithMany()
                        .HasForeignKey("districtId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Division", "division")
                        .WithMany()
                        .HasForeignKey("divisionId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Thana", "thana")
                        .WithMany()
                        .HasForeignKey("thanaId");
                });

            modelBuilder.Entity("OPUSERP.Budget.Data.Entity.BudgetDisbursementDetail", b =>
                {
                    b.HasOne("OPUSERP.Budget.Data.Entity.BudgetDisbursementMaster", "budgetDisbursementMaster")
                        .WithMany()
                        .HasForeignKey("budgetDisbursementMasterId");

                    b.HasOne("OPUSERP.Budget.Data.Entity.BudgetHead", "budgetHead")
                        .WithMany()
                        .HasForeignKey("budgetHeadId");
                });

            modelBuilder.Entity("OPUSERP.Budget.Data.Entity.BudgetDisbursementMaster", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.SpecialBranchUnit", "budgetBranch")
                        .WithMany()
                        .HasForeignKey("budgetBranchId");

                    b.HasOne("OPUSERP.Budget.Data.Entity.FiscalYear", "fiscalYear")
                        .WithMany()
                        .HasForeignKey("fiscalYearId");
                });

            modelBuilder.Entity("OPUSERP.Budget.Data.Entity.BudgetHead", b =>
                {
                    b.HasOne("OPUSERP.Budget.Data.Entity.BudgetSubHead", "budgetSubHead")
                        .WithMany()
                        .HasForeignKey("budgetSubHeadId");
                });

            modelBuilder.Entity("OPUSERP.Budget.Data.Entity.BudgetHeadDetail", b =>
                {
                    b.HasOne("OPUSERP.Budget.Data.Entity.BudgetHead", "budgetHead")
                        .WithMany()
                        .HasForeignKey("budgetHeadId");

                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.Ledger", "ledger")
                        .WithMany()
                        .HasForeignKey("ledgerId");
                });

            modelBuilder.Entity("OPUSERP.Budget.Data.Entity.BudgetRequsitionDetail", b =>
                {
                    b.HasOne("OPUSERP.Budget.Data.Entity.BudgetHead", "budgetHead")
                        .WithMany()
                        .HasForeignKey("budgetHeadId");

                    b.HasOne("OPUSERP.Budget.Data.Entity.BudgetRequsitionMaster", "budgetRequsitionMaster")
                        .WithMany()
                        .HasForeignKey("budgetRequsitionMasterId");
                });

            modelBuilder.Entity("OPUSERP.Budget.Data.Entity.BudgetRequsitionDetailFin", b =>
                {
                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.Ledger", "budgetHead")
                        .WithMany()
                        .HasForeignKey("budgetHeadId");

                    b.HasOne("OPUSERP.Budget.Data.Entity.BudgetRequsitionMasterFin", "budgetRequsitionMaster")
                        .WithMany()
                        .HasForeignKey("budgetRequsitionMasterId");

                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.LedgerRelation", "ledgerRelation")
                        .WithMany()
                        .HasForeignKey("ledgerRelationId");

                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.Ledger", "partner")
                        .WithMany()
                        .HasForeignKey("partnerId");
                });

            modelBuilder.Entity("OPUSERP.Budget.Data.Entity.BudgetRequsitionMaster", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.SpecialBranchUnit", "budgetBranch")
                        .WithMany()
                        .HasForeignKey("budgetBranchId");

                    b.HasOne("OPUSERP.Budget.Data.Entity.FiscalYear", "fiscalYear")
                        .WithMany()
                        .HasForeignKey("fiscalYearId");
                });

            modelBuilder.Entity("OPUSERP.Budget.Data.Entity.BudgetRequsitionMasterFin", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.SpecialBranchUnit", "budgetBranch")
                        .WithMany()
                        .HasForeignKey("budgetBranchId");

                    b.HasOne("OPUSERP.Budget.Data.Entity.FiscalYear", "fiscalYear")
                        .WithMany()
                        .HasForeignKey("fiscalYearId");
                });

            modelBuilder.Entity("OPUSERP.Budget.Data.Entity.BudgetSubHead", b =>
                {
                    b.HasOne("OPUSERP.Budget.Data.Entity.BudgetMainHead", "budgetMainHead")
                        .WithMany()
                        .HasForeignKey("budgetMainHeadId");
                });

            modelBuilder.Entity("OPUSERP.Budget.Data.Entity.HOBudgetRequsitionDetail", b =>
                {
                    b.HasOne("OPUSERP.Budget.Data.Entity.BudgetHead", "budgetHead")
                        .WithMany()
                        .HasForeignKey("budgetHeadId");

                    b.HasOne("OPUSERP.Budget.Data.Entity.HOBudgetRequsitionMaster", "hOBudgetRequsitionMaster")
                        .WithMany()
                        .HasForeignKey("hOBudgetRequsitionMasterId");
                });

            modelBuilder.Entity("OPUSERP.Budget.Data.Entity.HOBudgetRequsitionMaster", b =>
                {
                    b.HasOne("OPUSERP.Budget.Data.Entity.FiscalYear", "fiscalYear")
                        .WithMany()
                        .HasForeignKey("fiscalYearId");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Bulk.RlnMemberGroup", b =>
                {
                    b.HasOne("OPUSERP.CLUB.Data.Member.MemberInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.CLUB.Data.Bulk.MemberGroup", "memberGroup")
                        .WithMany()
                        .HasForeignKey("memberGroupId");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Event.EventInformation", b =>
                {
                    b.HasOne("OPUSERP.CLUB.Data.Event.EventCategory", "eventCategory")
                        .WithMany()
                        .HasForeignKey("eventCategoryId");

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.PaymentHead", "paymentHead")
                        .WithMany()
                        .HasForeignKey("paymentHeadId");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Event.EventParticipantType", b =>
                {
                    b.HasOne("OPUSERP.CLUB.Data.Event.EventInformation", "eventInformation")
                        .WithMany()
                        .HasForeignKey("eventInformationId");

                    b.HasOne("OPUSERP.CLUB.Data.Event.ParticipantType", "participantType")
                        .WithMany()
                        .HasForeignKey("participantTypeId");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Event.EventPerticipantHead", b =>
                {
                    b.HasOne("OPUSERP.CLUB.Data.Event.EventInformation", "eventInformation")
                        .WithMany()
                        .HasForeignKey("eventInformationId");

                    b.HasOne("OPUSERP.CLUB.Data.Event.ParticipantHead", "participantHead")
                        .WithMany()
                        .HasForeignKey("participantHeadId");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Event.EventRegister", b =>
                {
                    b.HasOne("OPUSERP.CLUB.Data.Member.MemberInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.CLUB.Data.Event.EventInformation", "eventInformation")
                        .WithMany()
                        .HasForeignKey("eventInformationId");

                    b.HasOne("OPUSERP.CLUB.Data.Event.EventPerticipantHead", "eventPerticipantHead")
                        .WithMany()
                        .HasForeignKey("eventPerticipantHeadId");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Finance.Balance", b =>
                {
                    b.HasOne("OPUSERP.CLUB.Data.Member.MemberInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.PaymentHead", "paymentHead")
                        .WithMany()
                        .HasForeignKey("paymentHeadId");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Finance.Collection", b =>
                {
                    b.HasOne("OPUSERP.CLUB.Data.Member.MemberInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.PaymentHead", "paymentHead")
                        .WithMany()
                        .HasForeignKey("paymentHeadId");

                    b.HasOne("OPUSERP.CLUB.Data.Finance.TrMaster", "trMaster")
                        .WithMany()
                        .HasForeignKey("trMasterId");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Finance.Invoice", b =>
                {
                    b.HasOne("OPUSERP.CLUB.Data.Member.MemberInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.PaymentHead", "paymentHead")
                        .WithMany()
                        .HasForeignKey("paymentHeadId");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Finance.PaymentLog", b =>
                {
                    b.HasOne("OPUSERP.CLUB.Data.Member.MemberInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Finance.TrMaster", b =>
                {
                    b.HasOne("OPUSERP.CLUB.Data.Member.MemberInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Forum.MemberComment", b =>
                {
                    b.HasOne("OPUSERP.CLUB.Data.Member.MemberInfo", "member")
                        .WithMany()
                        .HasForeignKey("memberId");

                    b.HasOne("OPUSERP.CLUB.Data.Forum.Topic", "topic")
                        .WithMany()
                        .HasForeignKey("topicId");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Forum.Topic", b =>
                {
                    b.HasOne("OPUSERP.CLUB.Data.Member.MemberInfo", "member")
                        .WithMany()
                        .HasForeignKey("memberId");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Gallery.GalleryContent", b =>
                {
                    b.HasOne("OPUSERP.CLUB.Data.Gallery.GalleryTitle", "galleryTitle")
                        .WithMany()
                        .HasForeignKey("galleryTitleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Hall.HallRentalApplicationInfo", b =>
                {
                    b.HasOne("OPUSERP.CLUB.Data.Hall.HallInfo", "hallInfo")
                        .WithMany()
                        .HasForeignKey("hallInfoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.CLUB.Data.Hall.HallRentalShift", "hallRentalShift")
                        .WithMany()
                        .HasForeignKey("hallRentalShiftId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Hall.HallRentalPayment", b =>
                {
                    b.HasOne("OPUSERP.CLUB.Data.Hall.HallRentalApplicationInfo", "HallRentalApplicationInfo")
                        .WithMany()
                        .HasForeignKey("hallRentalApplicationInfoId");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.MemberAddress", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryId");

                    b.HasOne("OPUSERP.Data.Entity.Master.District", "district")
                        .WithMany()
                        .HasForeignKey("districtId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Division", "division")
                        .WithMany()
                        .HasForeignKey("divisionId");

                    b.HasOne("OPUSERP.CLUB.Data.Member.MemberInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Data.Entity.Master.Thana", "thana")
                        .WithMany()
                        .HasForeignKey("thanaId");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.MemberAward", b =>
                {
                    b.HasOne("OPUSERP.CLUB.Data.Member.MemberInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.MemberChildren", b =>
                {
                    b.HasOne("OPUSERP.CLUB.Data.Member.MemberInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.MemberDrivingLicense", b =>
                {
                    b.HasOne("OPUSERP.CLUB.Data.Member.MemberInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.MemberEducationalQualification", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Degree", "degree")
                        .WithMany()
                        .HasForeignKey("degreeId");

                    b.HasOne("OPUSERP.CLUB.Data.Member.MemberInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Organization", "organization")
                        .WithMany()
                        .HasForeignKey("organizationId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.RelDegreeSubject", "reldegreesubject")
                        .WithMany()
                        .HasForeignKey("reldegreesubjectId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Result", "result")
                        .WithMany()
                        .HasForeignKey("resultId");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.MemberInfo", b =>
                {
                    b.HasOne("OPUSERP.CLUB.Data.Master.MemberType", "memberType")
                        .WithMany()
                        .HasForeignKey("memberTypeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Religion", "religion")
                        .WithMany()
                        .HasForeignKey("religionId");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.MemberLanguage", b =>
                {
                    b.HasOne("OPUSERP.CLUB.Data.Member.MemberInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Language", "language")
                        .WithMany()
                        .HasForeignKey("languageId");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.MemberOtherInfo", b =>
                {
                    b.HasOne("OPUSERP.CLUB.Data.Member.MemberInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.MemberPassportDetails", b =>
                {
                    b.HasOne("OPUSERP.CLUB.Data.Member.MemberInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.MemberPhotograph", b =>
                {
                    b.HasOne("OPUSERP.CLUB.Data.Member.MemberInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.MemberPublication", b =>
                {
                    b.HasOne("OPUSERP.CLUB.Data.Member.MemberInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.MemberSpouse", b =>
                {
                    b.HasOne("OPUSERP.CLUB.Data.Member.MemberInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.MemberTraningLog", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryId");

                    b.HasOne("OPUSERP.CLUB.Data.Member.MemberInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.TrainingCategory", "trainingCategory")
                        .WithMany()
                        .HasForeignKey("trainingCategoryId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.TrainingInstitute", "trainingInstitute")
                        .WithMany()
                        .HasForeignKey("trainingInstituteId");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.MemberTransferLog", b =>
                {
                    b.HasOne("OPUSERP.CLUB.Data.Member.MemberInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryGrade", "salaryGrade")
                        .WithMany()
                        .HasForeignKey("salaryGradeId");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Member.OtherMembership", b =>
                {
                    b.HasOne("OPUSERP.CLUB.Data.Member.MemberInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Membership", "membership")
                        .WithMany()
                        .HasForeignKey("membershipId");
                });

            modelBuilder.Entity("OPUSERP.CLUB.Data.Notice.RlnNoticeAuthor", b =>
                {
                    b.HasOne("OPUSERP.CLUB.Data.Notice.NoticeAuthor", "noticeAuthor")
                        .WithMany()
                        .HasForeignKey("noticeAuthorId");

                    b.HasOne("OPUSERP.CLUB.Data.Notice.NoticeInfo", "noticeInfo")
                        .WithMany()
                        .HasForeignKey("noticeInfoId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Budget.CompanyBudgets", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Year", "year")
                        .WithMany()
                        .HasForeignKey("yearId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Budget.MemberBudgets", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Budget.TeamBudgets", "teamBudgets")
                        .WithMany()
                        .HasForeignKey("teamBudgetsId");

                    b.HasOne("OPUSERP.Data.Entity.MasterData.Team", "team")
                        .WithMany()
                        .HasForeignKey("teamId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Budget.TeamBudgets", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Budget.CompanyBudgets", "companyBudgets")
                        .WithMany()
                        .HasForeignKey("companyBudgetsId");

                    b.HasOne("OPUSERP.Data.Entity.MasterData.Team", "team")
                        .WithMany()
                        .HasForeignKey("teamId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Client.Clients", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Leads", "leads")
                        .WithMany()
                        .HasForeignKey("leadsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Cold.ColdActivityDetails", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Cold.ColdActivityMasters", "coldActivityMasters")
                        .WithMany()
                        .HasForeignKey("coldActivityMastersId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Cold.ColdActivityDiscussion", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Cold.ColdActivityMasters", "coldActivityMasters")
                        .WithMany()
                        .HasForeignKey("coldActivityMastersId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Cold.ColdActivityMasters", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.ActivityCategory", "activityCategory")
                        .WithMany()
                        .HasForeignKey("activityCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.ActivitySession", "activitySession")
                        .WithMany()
                        .HasForeignKey("activitySessionId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.ActivityStatus", "activityStatus")
                        .WithMany()
                        .HasForeignKey("activityStatusId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.ActivityType", "activityType")
                        .WithMany()
                        .HasForeignKey("activityTypeId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Cold.ColdActivityMasters", "coldActivityMasters")
                        .WithMany()
                        .HasForeignKey("coldActivityMastersId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Cold.ColdActivityTeams", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Cold.ColdActivityMasters", "coldActivityMasters")
                        .WithMany()
                        .HasForeignKey("coldActivityMastersId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Data.Entity.MasterData.Team", "team")
                        .WithMany()
                        .HasForeignKey("teamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.ActivityDetails", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.ActivityMaster", "activityMaster")
                        .WithMany()
                        .HasForeignKey("activityMasterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.ActivityMaster", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.ActivityCategory", "activityCategory")
                        .WithMany()
                        .HasForeignKey("activityCategoryId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.ActivityMaster", "activityMaster")
                        .WithMany()
                        .HasForeignKey("activityMasterId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.ActivitySession", "activitySession")
                        .WithMany()
                        .HasForeignKey("activitySessionId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.ActivityStatus", "activityStatus")
                        .WithMany()
                        .HasForeignKey("activityStatusId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.ActivityType", "activityType")
                        .WithMany()
                        .HasForeignKey("activityTypeId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Leads", "leads")
                        .WithMany()
                        .HasForeignKey("leadsId");

                    b.HasOne("OPUSERP.TAMS.Data.Entity.TaskSection", "taskSection")
                        .WithMany()
                        .HasForeignKey("taskSectionId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.ActivityStatusProgress", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.ActivityMaster", "activityMaster")
                        .WithMany()
                        .HasForeignKey("activityMasterId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.ActivityStatus", "activityStatus")
                        .WithMany()
                        .HasForeignKey("activityStatusId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.ActivityTeam", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.ActivityMaster", "activityMaster")
                        .WithMany()
                        .HasForeignKey("activityMasterId");

                    b.HasOne("OPUSERP.Data.Entity.MasterData.Team", "team")
                        .WithMany()
                        .HasForeignKey("teamId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.Address", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.AddressCategory", "addressCategory")
                        .WithMany()
                        .HasForeignKey("addressCategoryId");

                    b.HasOne("OPUSERP.Data.Entity.Master.AddressType", "addressType")
                        .WithMany()
                        .HasForeignKey("addressTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Data.Entity.Master.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryId");

                    b.HasOne("OPUSERP.Data.Entity.Master.District", "district")
                        .WithMany()
                        .HasForeignKey("districtId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Division", "division")
                        .WithMany()
                        .HasForeignKey("divisionId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Organization", "organization")
                        .WithMany()
                        .HasForeignKey("organizationId");

                    b.HasOne("OPUSERP.Data.Entity.Master.PostOffice", "postOffice")
                        .WithMany()
                        .HasForeignKey("postOfficeId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Resource", "resource")
                        .WithMany()
                        .HasForeignKey("resourceId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Thana", "thana")
                        .WithMany()
                        .HasForeignKey("thanaId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.Agreement", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.AgreementCategory", "agreementCategory")
                        .WithMany()
                        .HasForeignKey("agreementCategoryId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.AgreementStatus", "agreementStatus")
                        .WithMany()
                        .HasForeignKey("agreementStatusId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.AgreementType", "agreementType")
                        .WithMany()
                        .HasForeignKey("agreementTypeId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Contacts", "contactSignatory")
                        .WithMany()
                        .HasForeignKey("contactSignatoryId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Contacts", "contactWitness")
                        .WithMany()
                        .HasForeignKey("contactWitnessId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Leads", "leads")
                        .WithMany()
                        .HasForeignKey("leadsId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.RatingCategory", "ratingCategory")
                        .WithMany()
                        .HasForeignKey("ratingCategoryId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.AgreementDetails", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Agreement", "agreement")
                        .WithMany()
                        .HasForeignKey("agreementId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.RatingYear", "ratingYear")
                        .WithMany()
                        .HasForeignKey("ratingYearId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.TaxCategory", "taxCategory")
                        .WithMany()
                        .HasForeignKey("taxCategoryId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.VatCategory", "vatCategory")
                        .WithMany()
                        .HasForeignKey("vatCategoryId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.AgreementDetailsHistory", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Agreement", "agreement")
                        .WithMany()
                        .HasForeignKey("agreementId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.ApprovedforCro", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.AgreementDetails", "agreementDetails")
                        .WithMany()
                        .HasForeignKey("agreementDetailsId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.BillCollection", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.BankBranchDetails", "bankBranchDetails")
                        .WithMany()
                        .HasForeignKey("bankBranchDetailsId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.BillGenerate", "billGenerate")
                        .WithMany()
                        .HasForeignKey("billGenerateId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.PaymentMode", "paymentMode")
                        .WithMany()
                        .HasForeignKey("paymentModeId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.BillCollectionHistory", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.BillCollection", "billCollection")
                        .WithMany()
                        .HasForeignKey("billCollectionId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.BillGenerate", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.AgreementDetails", "agreementDetailss")
                        .WithMany()
                        .HasForeignKey("agreementDetailssId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Agreement", "agreementt")
                        .WithMany()
                        .HasForeignKey("agreementtId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.ApprovedforCro", "approvedforCro")
                        .WithMany()
                        .HasForeignKey("approvedforCroId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.BankBranchDetails", "bankBranchDetails")
                        .WithMany()
                        .HasForeignKey("bankBranchDetailsId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Leads", "leadss")
                        .WithMany()
                        .HasForeignKey("leadssId");

                    b.HasOne("OPUSERP.OtherSales.Data.Entity.Sales.SalesInvoiceMaster", "salesInvoiceMaster")
                        .WithMany()
                        .HasForeignKey("salesInvoiceMasterId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.BillGenerateHistory", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.BillGenerate", "billGenerate")
                        .WithMany()
                        .HasForeignKey("billGenerateId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.Contacts", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Leads", "leads")
                        .WithMany()
                        .HasForeignKey("leadsId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Resource", "resource")
                        .WithMany()
                        .HasForeignKey("resourceId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.Document", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Contacts", "contacts")
                        .WithMany()
                        .HasForeignKey("contactsId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.Leads", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.CompanyGroup", "companyGroup")
                        .WithMany()
                        .HasForeignKey("companyGroupId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.FIType", "fIType")
                        .WithMany()
                        .HasForeignKey("fITypeId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.LeadProgressStatus", "leadProgressStatus")
                        .WithMany()
                        .HasForeignKey("leadProgressStatusId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.OwnerShipType", "ownerShipType")
                        .WithMany()
                        .HasForeignKey("ownerShipTypeId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.Sector", "sector")
                        .WithMany()
                        .HasForeignKey("sectorId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.Source", "source")
                        .WithMany()
                        .HasForeignKey("sourceId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.LeadsBankInfo", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.BankBranchDetails", "bankBranchDetails")
                        .WithMany()
                        .HasForeignKey("bankBranchDetailsId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.CRMDepartment", "crmdepartments")
                        .WithMany()
                        .HasForeignKey("crmdepartmentsId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.CRMDesignation", "crmdesignations")
                        .WithMany()
                        .HasForeignKey("crmdesignationsId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Leads", "leads")
                        .WithMany()
                        .HasForeignKey("leadsId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.LeadsHistory", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Leads", "leads")
                        .WithMany()
                        .HasForeignKey("leadsId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.OwnerChangeHistory", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Leads", "leads")
                        .WithMany()
                        .HasForeignKey("leadsId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.RatingReview", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.AgreementDetails", "agreementDetails")
                        .WithMany()
                        .HasForeignKey("agreementDetailsId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.RelProductAgreement", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Agreement", "agreement")
                        .WithMany()
                        .HasForeignKey("agreementId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Proposal.Product", "product")
                        .WithMany()
                        .HasForeignKey("productId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Lead.Resource", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.CRMDepartment", "crmdepartments")
                        .WithMany()
                        .HasForeignKey("crmdepartmentsId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.CRMDesignation", "crmdesignations")
                        .WithMany()
                        .HasForeignKey("crmdesignationsId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Department", "departments")
                        .WithMany()
                        .HasForeignKey("departmentsId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Designation", "designations")
                        .WithMany()
                        .HasForeignKey("designationsId");

                    b.HasOne("OPUSERP.Patient.Data.Entity.ProfessionType", "professionType")
                        .WithMany()
                        .HasForeignKey("professionTypeId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.MasterData.Area", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.Area", "area")
                        .WithMany()
                        .HasForeignKey("areaId");

                    b.HasOne("OPUSERP.Distribution.Data.Entity.MasterData.SalesLevel", "salesLevel")
                        .WithMany()
                        .HasForeignKey("salesLevelId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.MasterData.Bank", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.FIType", "fiType")
                        .WithMany()
                        .HasForeignKey("fiTypeId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.MasterData.BankBranchDetails", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.BankBranch", "bankBranch")
                        .WithMany()
                        .HasForeignKey("bankBranchId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.Bank", "bank")
                        .WithMany()
                        .HasForeignKey("bankId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Thana", "thana")
                        .WithMany()
                        .HasForeignKey("thanaId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.MasterData.Sector", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.Sector", "sector")
                        .WithMany()
                        .HasForeignKey("sectorId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Notes.CRMNoteMaster", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Leads", "leads")
                        .WithMany()
                        .HasForeignKey("leadsId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Proposal.ProposalDetail", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Proposal.ProposalMaster", "proposalMaster")
                        .WithMany()
                        .HasForeignKey("proposalMasterId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Proposal.ProposalParticulars", "proposalParticulars")
                        .WithMany()
                        .HasForeignKey("proposalParticularsId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Proposal.ProposalMaster", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Leads", "leads")
                        .WithMany()
                        .HasForeignKey("leadsId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Proposal.ProposalStatus", "proposalStatus")
                        .WithMany()
                        .HasForeignKey("proposalStatusId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Proposal.ProposalType", "proposalType")
                        .WithMany()
                        .HasForeignKey("proposalTypeId");
                });

            modelBuilder.Entity("OPUSERP.CRM.Data.Entity.Proposal.RelProductProposal", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Proposal.Product", "product")
                        .WithMany()
                        .HasForeignKey("productId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Proposal.ProposalMaster", "proposalMaster")
                        .WithMany()
                        .HasForeignKey("proposalMasterId");
                });

            modelBuilder.Entity("OPUSERP.CRO.Data.Entity.DistributeJob.Archive", b =>
                {
                    b.HasOne("OPUSERP.CRO.Data.Entity.DistributeJob.ArchiveShelf", "archiveShelf")
                        .WithMany()
                        .HasForeignKey("archiveShelfId");

                    b.HasOne("OPUSERP.CRO.Data.Entity.DistributeJob.OperationMaster", "operationMaster")
                        .WithMany()
                        .HasForeignKey("operationMasterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.CRO.Data.Entity.DistributeJob.ArchiveShelf", b =>
                {
                    b.HasOne("OPUSERP.CRO.Data.Entity.DistributeJob.ArchiveFloor", "archiveFloor")
                        .WithMany()
                        .HasForeignKey("archiveFloorId");
                });

            modelBuilder.Entity("OPUSERP.CRO.Data.Entity.DistributeJob.AttachmentStatus", b =>
                {
                    b.HasOne("OPUSERP.CRO.Data.Entity.DistributeJob.AttachmentType", "attachmentType")
                        .WithMany()
                        .HasForeignKey("attachmentTypeId");

                    b.HasOne("OPUSERP.CRO.Data.Entity.DistributeJob.OperationMaster", "operationMaster")
                        .WithMany()
                        .HasForeignKey("operationMasterId");
                });

            modelBuilder.Entity("OPUSERP.CRO.Data.Entity.DistributeJob.IRCMeetingAttendance", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");

                    b.HasOne("OPUSERP.CRO.Data.Entity.DistributeJob.OperationMaster", "operationMaster")
                        .WithMany()
                        .HasForeignKey("operationMasterId");
                });

            modelBuilder.Entity("OPUSERP.CRO.Data.Entity.DistributeJob.IRCMemberComments", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");

                    b.HasOne("OPUSERP.CRO.Data.Entity.DistributeJob.OperationMaster", "operationMaster")
                        .WithMany()
                        .HasForeignKey("operationMasterId");
                });

            modelBuilder.Entity("OPUSERP.CRO.Data.Entity.DistributeJob.IRCRating", b =>
                {
                    b.HasOne("OPUSERP.CRO.Data.Entity.DistributeJob.OperationMaster", "operationMaster")
                        .WithMany()
                        .HasForeignKey("operationMasterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.CRO.Data.Entity.DistributeJob.IRCSignatory", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");
                });

            modelBuilder.Entity("OPUSERP.CRO.Data.Entity.DistributeJob.OperationMaster", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Agreement", "agreement")
                        .WithMany()
                        .HasForeignKey("agreementId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.ApprovedforCro", "approvedforCro")
                        .WithMany()
                        .HasForeignKey("approvedforCroId");

                    b.HasOne("OPUSERP.CRO.Data.Entity.DistributeJob.JobStatus", "jobStatus")
                        .WithMany()
                        .HasForeignKey("jobStatusId");
                });

            modelBuilder.Entity("OPUSERP.CRO.Data.Entity.DistributeJob.ProposedRating", b =>
                {
                    b.HasOne("OPUSERP.CRO.Data.Entity.DistributeJob.OperationMaster", "operationMaster")
                        .WithMany()
                        .HasForeignKey("operationMasterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.CRO.Data.Entity.DistributeJob.RatingValue", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.RatingCategory", "ratingCategory")
                        .WithMany()
                        .HasForeignKey("ratingCategoryId");

                    b.HasOne("OPUSERP.CRO.Data.Entity.DistributeJob.RatingType", "ratingType")
                        .WithMany()
                        .HasForeignKey("ratingTypeId");
                });

            modelBuilder.Entity("OPUSERP.CRO.Data.Entity.DistributeJob.ReceiveDocument", b =>
                {
                    b.HasOne("OPUSERP.CRO.Data.Entity.DistributeJob.DocumentChart", "documentChart")
                        .WithMany()
                        .HasForeignKey("documentChartId");

                    b.HasOne("OPUSERP.CRO.Data.Entity.DistributeJob.OperationMaster", "operationMaster")
                        .WithMany()
                        .HasForeignKey("operationMasterId");
                });

            modelBuilder.Entity("OPUSERP.CRO.Data.Entity.DistributeJob.StatusLog", b =>
                {
                    b.HasOne("OPUSERP.CRO.Data.Entity.DistributeJob.JobStatus", "jobStatus")
                        .WithMany()
                        .HasForeignKey("jobStatusId");

                    b.HasOne("OPUSERP.CRO.Data.Entity.DistributeJob.OperationMaster", "operationMaster")
                        .WithMany()
                        .HasForeignKey("operationMasterId");
                });

            modelBuilder.Entity("OPUSERP.DMS.Data.Entity.AssignDocument", b =>
                {
                    b.HasOne("OPUSERP.DMS.Data.Entity.DocumentMaster", "documentMaster")
                        .WithMany()
                        .HasForeignKey("documentMasterId");

                    b.HasOne("OPUSERP.Data.Entity.AttachmentComment.DocumentPhotoAttachment", "documentPhotoAttachment")
                        .WithMany()
                        .HasForeignKey("documentPhotoAttachmentId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");
                });

            modelBuilder.Entity("OPUSERP.DMS.Data.Entity.AssignDocumentMaster", b =>
                {
                    b.HasOne("OPUSERP.DMS.Data.Entity.DocumentMaster", "documentMaster")
                        .WithMany()
                        .HasForeignKey("documentMasterId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");
                });

            modelBuilder.Entity("OPUSERP.DMS.Data.Entity.DocumentDetail", b =>
                {
                    b.HasOne("OPUSERP.DMS.Data.Entity.DocumentMaster", "documentMaster")
                        .WithMany()
                        .HasForeignKey("documentMasterId");

                    b.HasOne("OPUSERP.DMS.Data.Entity.FieldSettings", "fieldSetting")
                        .WithMany()
                        .HasForeignKey("fieldSettingId");
                });

            modelBuilder.Entity("OPUSERP.DMS.Data.Entity.DocumentMaster", b =>
                {
                    b.HasOne("OPUSERP.DMS.Data.Entity.DocumentCategory", "documentCategory")
                        .WithMany()
                        .HasForeignKey("documentCategoryId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Leads", "leads")
                        .WithMany()
                        .HasForeignKey("leadsId");
                });

            modelBuilder.Entity("OPUSERP.DMS.Data.Entity.DocumentStatusLog", b =>
                {
                    b.HasOne("OPUSERP.DMS.Data.Entity.DocumentMaster", "documentMaster")
                        .WithMany()
                        .HasForeignKey("documentMasterId");
                });

            modelBuilder.Entity("OPUSERP.DMS.Data.Entity.FieldSettings", b =>
                {
                    b.HasOne("OPUSERP.DMS.Data.Entity.DocumentCategory", "documentCategory")
                        .WithMany()
                        .HasForeignKey("documentCategoryId");

                    b.HasOne("OPUSERP.DMS.Data.Entity.FieldType", "fieldType")
                        .WithMany()
                        .HasForeignKey("fieldTypeId");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.ApplicationUser", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.SpecialBranchUnit", "specialBranchUnit")
                        .WithMany()
                        .HasForeignKey("specialBranchUnitId");

                    b.HasOne("OPUSERP.Data.Entity.Auth.UserType", "userType")
                        .WithMany()
                        .HasForeignKey("userTypeId");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.AttachmentComment.Comment", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Auth.ERPModule", "module")
                        .WithMany()
                        .HasForeignKey("moduleId");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.AttachmentComment.DocumentPhotoAttachment", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Auth.ERPModule", "module")
                        .WithMany()
                        .HasForeignKey("moduleId");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Auth.ModuleAccessPage", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.ApplicationRole", "applicationRole")
                        .WithMany()
                        .HasForeignKey("applicationRoleId");

                    b.HasOne("OPUSERP.Data.Entity.Auth.ERPModule", "eRPModule")
                        .WithMany()
                        .HasForeignKey("eRPModuleId");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Auth.Navbar", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Auth.ERPModule", "module")
                        .WithMany()
                        .HasForeignKey("moduleId");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Auth.UserAccessPage", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.ApplicationRole", "applicationRole")
                        .WithMany()
                        .HasForeignKey("applicationRoleId");

                    b.HasOne("OPUSERP.Data.Entity.Auth.Navbar", "navbar")
                        .WithMany()
                        .HasForeignKey("navbarId");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Auth.UserType", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Auth.UserTypeGroup", "group")
                        .WithMany()
                        .HasForeignKey("groupId");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Master.Company", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.BankBranchDetails", "bankBranchDetails")
                        .WithMany()
                        .HasForeignKey("bankBranchDetailsId");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Master.CompanyGroup", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Master.District", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.Division", "division")
                        .WithMany()
                        .HasForeignKey("divisionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Master.Division", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Master.PostOffice", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.District", "district")
                        .WithMany()
                        .HasForeignKey("districtId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Master.Thana", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.District", "district")
                        .WithMany()
                        .HasForeignKey("districtId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.MasterData.CompanyAddress", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.AddressType", "addressType")
                        .WithMany()
                        .HasForeignKey("addressTypeId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryId");

                    b.HasOne("OPUSERP.Data.Entity.Master.District", "district")
                        .WithMany()
                        .HasForeignKey("districtId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Division", "division")
                        .WithMany()
                        .HasForeignKey("divisionId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Thana", "thana")
                        .WithMany()
                        .HasForeignKey("thanaId");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.MasterData.ERPModuleAssign", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.MasterData.SendEmailLogStatus", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.MasterData.StoreAddress", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.AddressType", "addressCategory")
                        .WithMany()
                        .HasForeignKey("addressCategoryId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryId");

                    b.HasOne("OPUSERP.Data.Entity.Master.District", "district")
                        .WithMany()
                        .HasForeignKey("districtId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Division", "division")
                        .WithMany()
                        .HasForeignKey("divisionId");

                    b.HasOne("OPUSERP.POS.Data.Entity.Store", "store")
                        .WithMany()
                        .HasForeignKey("storeId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Thana", "thana")
                        .WithMany()
                        .HasForeignKey("thanaId");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.MasterData.StoreAssign", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.ApplicationUser", "aspnetuser")
                        .WithMany()
                        .HasForeignKey("aspnetuserId");

                    b.HasOne("OPUSERP.POS.Data.Entity.Store", "store")
                        .WithMany()
                        .HasForeignKey("storeId");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.MasterData.StoreContact", b =>
                {
                    b.HasOne("OPUSERP.POS.Data.Entity.Store", "store")
                        .WithMany()
                        .HasForeignKey("storeId");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.MasterData.Team", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.Area", "area")
                        .WithMany()
                        .HasForeignKey("areaId");

                    b.HasOne("OPUSERP.Data.Entity.ApplicationUser", "aspnetuser")
                        .WithMany()
                        .HasForeignKey("aspnetuserId");

                    b.HasOne("OPUSERP.Data.Entity.Auth.ERPModule", "module")
                        .WithMany()
                        .HasForeignKey("moduleId");

                    b.HasOne("OPUSERP.Data.Entity.MasterData.Team", "team")
                        .WithMany()
                        .HasForeignKey("teamId");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Matrix.ApprovalLog", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Matrix.MatrixType", "matrixType")
                        .WithMany()
                        .HasForeignKey("matrixTypeId");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Matrix.ApprovalMatrix", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Matrix.ApproverType", "approverType")
                        .WithMany()
                        .HasForeignKey("approverTypeId");

                    b.HasOne("OPUSERP.Data.Entity.Matrix.MatrixType", "matrixType")
                        .WithMany()
                        .HasForeignKey("matrixTypeId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.Project", "project")
                        .WithMany()
                        .HasForeignKey("projectId");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Matrix.ApprovalMatrixlog", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Matrix.ApprovalMatrix", "approvalMatrix")
                        .WithMany()
                        .HasForeignKey("approvalMatrixId");

                    b.HasOne("OPUSERP.Data.Entity.Matrix.ApproverType", "approverType")
                        .WithMany()
                        .HasForeignKey("approverTypeId");

                    b.HasOne("OPUSERP.Data.Entity.Matrix.MatrixType", "matrixType")
                        .WithMany()
                        .HasForeignKey("matrixTypeId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.Project", "project")
                        .WithMany()
                        .HasForeignKey("projectId");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Matrix.ApprovalReview", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Matrix.ApprovalLog", "approvalLog")
                        .WithMany()
                        .HasForeignKey("approvalLogID");
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Matrix.MatrixChangeHistory", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Matrix.MatrixType", "matrixType")
                        .WithMany()
                        .HasForeignKey("matrixTypeId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Requisition.RequisitionMaster", "requisitionMaster")
                        .WithMany()
                        .HasForeignKey("requisitionMasterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Data.Entity.Matrix.StatusLog", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseProcess.CSMaster", "cSMaster")
                        .WithMany()
                        .HasForeignKey("cSMasterId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.IOU.IOUMaster", "iOU")
                        .WithMany()
                        .HasForeignKey("iOUId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.IOU.IOUPaymentMaster", "iOUPaymentMaster")
                        .WithMany()
                        .HasForeignKey("iOUPaymentMasterId");

                    b.HasOne("OPUSERP.Data.Entity.Matrix.MatrixType", "matrixType")
                        .WithMany()
                        .HasForeignKey("matrixTypeId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.PurchaseOrderMaster", "purchase")
                        .WithMany()
                        .HasForeignKey("purchaseId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Requisition.RequisitionMaster", "requisition")
                        .WithMany()
                        .HasForeignKey("requisitionId");

                    b.HasOne("OPUSERP.Data.Entity.Matrix.StatusInfo", "statusInfo")
                        .WithMany()
                        .HasForeignKey("statusInfoId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Stock.StockMaster", "stock")
                        .WithMany()
                        .HasForeignKey("stockId");
                });

            modelBuilder.Entity("OPUSERP.Distribution.Data.Entity.MasterData.DisItemPriceFixing", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", "itemSpecification")
                        .WithMany()
                        .HasForeignKey("itemSpecificationId");
                });

            modelBuilder.Entity("OPUSERP.Distribution.Data.Entity.MasterData.DisItemPriceFixingDetails", b =>
                {
                    b.HasOne("OPUSERP.Distribution.Data.Entity.MasterData.DisItemPriceFixing", "disItemPriceFixing")
                        .WithMany()
                        .HasForeignKey("disItemPriceFixingId");

                    b.HasOne("OPUSERP.Distribution.Data.Entity.MasterData.DistributorType", "distributorType")
                        .WithMany()
                        .HasForeignKey("distributorTypeId");
                });

            modelBuilder.Entity("OPUSERP.Distribution.Data.Entity.MasterData.PackageDetail", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", "itemSpecification")
                        .WithMany()
                        .HasForeignKey("itemSpecificationId");

                    b.HasOne("OPUSERP.Distribution.Data.Entity.MasterData.PackageMaster", "packageMaster")
                        .WithMany()
                        .HasForeignKey("packageMasterId");
                });

            modelBuilder.Entity("OPUSERP.Distribution.Data.Entity.MasterData.PackageMaster", b =>
                {
                    b.HasOne("OPUSERP.Distribution.Data.Entity.MasterData.DistributorType", "distributorType")
                        .WithMany()
                        .HasForeignKey("distributorTypeId");
                });

            modelBuilder.Entity("OPUSERP.Distribution.Data.Entity.MasterData.RelCustomerSalesTeamDeployment", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.Area", "area")
                        .WithMany()
                        .HasForeignKey("areaId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");

                    b.HasOne("OPUSERP.Distribution.Data.Entity.MasterData.SalesTeamDeployment", "nsmsalesTeamDeployment")
                        .WithMany()
                        .HasForeignKey("nsmsalesTeamDeploymentId");

                    b.HasOne("OPUSERP.OtherSales.Data.Entity.Sales.RelSupplierCustomerResourse", "relSupplierCustomerResourse")
                        .WithMany()
                        .HasForeignKey("relSupplierCustomerResourseId");

                    b.HasOne("OPUSERP.Distribution.Data.Entity.MasterData.SalesTeamDeployment", "rsmsalesTeamDeployment")
                        .WithMany()
                        .HasForeignKey("rsmsalesTeamDeploymentId");

                    b.HasOne("OPUSERP.Distribution.Data.Entity.MasterData.SalesLevel", "salesLevel")
                        .WithMany()
                        .HasForeignKey("salesLevelId");

                    b.HasOne("OPUSERP.Distribution.Data.Entity.MasterData.SalesTeamDeployment", "tsmsalesTeamDeployment")
                        .WithMany()
                        .HasForeignKey("tsmsalesTeamDeploymentId");
                });

            modelBuilder.Entity("OPUSERP.Distribution.Data.Entity.MasterData.SalesLevel", b =>
                {
                    b.HasOne("OPUSERP.Distribution.Data.Entity.MasterData.SalesLevel", "salesLevel")
                        .WithMany()
                        .HasForeignKey("salesLevelId");
                });

            modelBuilder.Entity("OPUSERP.Distribution.Data.Entity.MasterData.SalesTeamDeployment", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.Area", "area")
                        .WithMany()
                        .HasForeignKey("areaId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");

                    b.HasOne("OPUSERP.Distribution.Data.Entity.MasterData.SalesLevel", "salesLevel")
                        .WithMany()
                        .HasForeignKey("salesLevelId");

                    b.HasOne("OPUSERP.Distribution.Data.Entity.MasterData.SalesTeamDeployment", "salesTeamDeployment")
                        .WithMany()
                        .HasForeignKey("salesTeamDeploymentId");
                });

            modelBuilder.Entity("OPUSERP.Distribution.Data.Entity.Requisition.RequisitionDetail", b =>
                {
                    b.HasOne("OPUSERP.Distribution.Data.Entity.MasterData.DisItemPriceFixing", "disItemPriceFixing")
                        .WithMany()
                        .HasForeignKey("disItemPriceFixingId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", "itemSpecification")
                        .WithMany()
                        .HasForeignKey("itemSpecificationId");

                    b.HasOne("OPUSERP.Distribution.Data.Entity.MasterData.PackageDetail", "packageDetail")
                        .WithMany()
                        .HasForeignKey("packageDetailId");

                    b.HasOne("OPUSERP.Distribution.Data.Entity.Requisition.RequisitionMaster", "requisitionMaster")
                        .WithMany()
                        .HasForeignKey("requisitionMasterId");
                });

            modelBuilder.Entity("OPUSERP.Distribution.Data.Entity.Requisition.RequisitionMaster", b =>
                {
                    b.HasOne("OPUSERP.OtherSales.Data.Entity.Sales.RelSupplierCustomerResourse", "relSupplierCustomerResourse")
                        .WithMany()
                        .HasForeignKey("relSupplierCustomerResourseId");
                });

            modelBuilder.Entity("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetAssign", b =>
                {
                    b.HasOne("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetRegistration", "assetRegistration")
                        .WithMany()
                        .HasForeignKey("assetRegistrationId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.DeliveryLocation", "deliveryLocation")
                        .WithMany()
                        .HasForeignKey("deliveryLocationId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Department", "department")
                        .WithMany()
                        .HasForeignKey("departmentId");
                });

            modelBuilder.Entity("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetDepreciation", b =>
                {
                    b.HasOne("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetRegistration", "assetRegistration")
                        .WithMany()
                        .HasForeignKey("assetRegistrationId");

                    b.HasOne("OPUSERP.FixedAsset.Data.Entity.MasterData.DepriciationPeriod", "depriciationPeriod")
                        .WithMany()
                        .HasForeignKey("depriciationPeriodId");
                });

            modelBuilder.Entity("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetOverhauling", b =>
                {
                    b.HasOne("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetRegistration", "assetRegistration")
                        .WithMany()
                        .HasForeignKey("assetRegistrationId");
                });

            modelBuilder.Entity("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetReceive", b =>
                {
                    b.HasOne("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetRegistration", "assetRegistration")
                        .WithMany()
                        .HasForeignKey("assetRegistrationId");
                });

            modelBuilder.Entity("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetRegistration", b =>
                {
                    b.HasOne("OPUSERP.FixedAsset.Data.Entity.MasterData.DepriciationRate", "depriciationRate")
                        .WithMany()
                        .HasForeignKey("depriciationRateId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", "itemSpecification")
                        .WithMany()
                        .HasForeignKey("itemSpecificationId");

                    b.HasOne("OPUSERP.FixedAsset.Data.Entity.AssetRegister.PurchaseInfo", "purchaseInfo")
                        .WithMany()
                        .HasForeignKey("purchaseInfoId");
                });

            modelBuilder.Entity("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetReject", b =>
                {
                    b.HasOne("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetRegistration", "assetRegistration")
                        .WithMany()
                        .HasForeignKey("assetRegistrationId");
                });

            modelBuilder.Entity("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetRetirement", b =>
                {
                    b.HasOne("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetRegistration", "assetRegistration")
                        .WithMany()
                        .HasForeignKey("assetRegistrationId");

                    b.HasOne("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetRetirementType", "assetRetirementType")
                        .WithMany()
                        .HasForeignKey("assetRetirementTypeId");
                });

            modelBuilder.Entity("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetTransfer", b =>
                {
                    b.HasOne("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetRegistration", "assetRegistration")
                        .WithMany()
                        .HasForeignKey("assetRegistrationId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.DeliveryLocation", "deliveryLocation")
                        .WithMany()
                        .HasForeignKey("deliveryLocationId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Department", "department")
                        .WithMany()
                        .HasForeignKey("departmentId");
                });

            modelBuilder.Entity("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetWarrenty", b =>
                {
                    b.HasOne("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetRegistration", "assetRegistration")
                        .WithMany()
                        .HasForeignKey("assetRegistrationId");
                });

            modelBuilder.Entity("OPUSERP.FixedAsset.Data.Entity.AssetRegister.DepriciationInfo", b =>
                {
                    b.HasOne("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetRegistration", "assetRegistration")
                        .WithMany()
                        .HasForeignKey("assetRegistrationId");

                    b.HasOne("OPUSERP.FixedAsset.Data.Entity.MasterData.DepriciationPeriod", "depriciationPeriod")
                        .WithMany()
                        .HasForeignKey("depriciationPeriodId");
                });

            modelBuilder.Entity("OPUSERP.FixedAsset.Data.Entity.AssetRegister.PurchaseInfo", b =>
                {
                    b.HasOne("OPUSERP.FixedAsset.Data.Entity.MasterData.ProcurementSource", "procurementSource")
                        .WithMany()
                        .HasForeignKey("procurementSourceId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.PurchaseOrderMaster", "purchaseOrderMaster")
                        .WithMany()
                        .HasForeignKey("purchaseOrderMasterId");

                    b.HasOne("OPUSERP.FixedAsset.Data.Entity.MasterData.RegistrationType", "registrationType")
                        .WithMany()
                        .HasForeignKey("registrationTypeId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Supplier.Organization", "supplier")
                        .WithMany()
                        .HasForeignKey("supplierId");
                });

            modelBuilder.Entity("OPUSERP.FixedAsset.Data.Entity.MasterData.DepriciationPeriod", b =>
                {
                    b.HasOne("OPUSERP.FixedAsset.Data.Entity.MasterData.AssetYear", "Year")
                        .WithMany()
                        .HasForeignKey("YearID");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.ACR.ACRProcess", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.ACR.ACRSchedule", "aCRSchedule")
                        .WithMany()
                        .HasForeignKey("aCRScheduleId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.ACR.ACRSchedule", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.ACR.AcrEvaluationDetail", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.ACR.AcrEvaluationMaster", "acrEvaluationMaster")
                        .WithMany()
                        .HasForeignKey("acrEvaluationMasterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.ACR.AcrEvaluationValue", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.ACR.AcrEvaluationDetail", "acrEvaluationDetail")
                        .WithMany()
                        .HasForeignKey("acrEvaluationDetailId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.ACR.AcrInitiate", "acrInitiate")
                        .WithMany()
                        .HasForeignKey("acrInitiateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.ACR.AcrHealthInfo", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.ACR.AcrInitiate", "acrInitiate")
                        .WithMany()
                        .HasForeignKey("acrInitiateId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.ACR.AcrInitiate", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.ACR.AcrPersonalWorkDescription", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.ACR.AcrInitiate", "acrInitiate")
                        .WithMany()
                        .HasForeignKey("acrInitiateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.ACR.AcrRoute", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.ACR.AcrInitiate", "acrInitiate")
                        .WithMany()
                        .HasForeignKey("acrInitiateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "supervisor")
                        .WithMany()
                        .HasForeignKey("supervisorId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.ACR.AcrRouteEvaluation", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.ACR.AcrEvaluationMaster", "acrEvaluationMaster")
                        .WithMany()
                        .HasForeignKey("acrEvaluationMasterId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.ACR.AcrRoute", "acrRoute")
                        .WithMany()
                        .HasForeignKey("acrRouteId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.ACR.Position", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.ACR.WorkHistory", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "emplyeeInfo")
                        .WithMany()
                        .HasForeignKey("emplyeeInfoId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Assignment.Assignment", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Department", "department")
                        .WithMany()
                        .HasForeignKey("departmentId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Designation", "designation")
                        .WithMany()
                        .HasForeignKey("designationId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Attendance.AttendanceRoute", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Attendance.AttendanceUpdateApply", "attendanceUpdateApply")
                        .WithMany()
                        .HasForeignKey("attendanceUpdateApplyId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Attendance.AttendanceUpdateApply", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Attendance.EmployeePunchCardInfo", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.ShiftGroupMaster", "shiftGroupMaster")
                        .WithMany()
                        .HasForeignKey("shiftGroupMasterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.AwardPublication.AwardAttachment", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.AwardPublication.AwardEntry", "award")
                        .WithMany()
                        .HasForeignKey("awardId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.AwardPublication.AwardEntry", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.AwardPublication.PublicationAttachment", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.AwardPublication.PublicationEntry", "publication")
                        .WithMany()
                        .HasForeignKey("publicationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.AwardPublication.PublicationEntry", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.DisciplineInvestigation.DisciplinaryAction", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.DisciplineInvestigation.Offense", "Offense")
                        .WithMany()
                        .HasForeignKey("OffenseId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.DisciplineInvestigation.NaturalPunishment", "naturalPunishment")
                        .WithMany()
                        .HasForeignKey("naturalPunishmentId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.DisciplineInvestigation.DisiciplinaryAttachment", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.DisciplineInvestigation.DisciplinaryAction", "disciplinary")
                        .WithMany()
                        .HasForeignKey("disciplinaryId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.AcrInfo", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.Address", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryId");

                    b.HasOne("OPUSERP.Data.Entity.Master.District", "district")
                        .WithMany()
                        .HasForeignKey("districtId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Division", "division")
                        .WithMany()
                        .HasForeignKey("divisionId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Data.Entity.Master.Thana", "thana")
                        .WithMany()
                        .HasForeignKey("thanaId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.BankInfo", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.Bank", "bank")
                        .WithMany()
                        .HasForeignKey("bankId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.WalletType", "walletType")
                        .WithMany()
                        .HasForeignKey("walletTypeId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.Belongings", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.BelongingItem", "belongingItem")
                        .WithMany()
                        .HasForeignKey("belongingItemId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", "itemSpecification")
                        .WithMany()
                        .HasForeignKey("itemSpecificationId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.Children", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.DisciplinaryLog", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.DisciplineInvestigation.Offense", "offense")
                        .WithMany()
                        .HasForeignKey("OffenseId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.DisciplineInvestigation.NaturalPunishment", "naturalPunishment")
                        .WithMany()
                        .HasForeignKey("naturalPunishmentId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.DrivingLicense", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.EducationalQualification", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Degree", "degree")
                        .WithMany()
                        .HasForeignKey("degreeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Organization", "organization")
                        .WithMany()
                        .HasForeignKey("organizationId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.RelDegreeSubject", "reldegreesubject")
                        .WithMany()
                        .HasForeignKey("reldegreesubjectId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Result", "result")
                        .WithMany()
                        .HasForeignKey("resultId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.EmergencyContact", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeAward", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeContractInfo", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeCostCentre", b =>
                {
                    b.HasOne("OPUSERP.Accounting.Data.Entity.MasterData.CostCentre", "costCentre")
                        .WithMany()
                        .HasForeignKey("costCentreId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeGrade", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryGrade", "salaryGrade")
                        .WithMany()
                        .HasForeignKey("salaryGradeId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.SpecialBranchUnit", "branch")
                        .WithMany()
                        .HasForeignKey("branchId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Department", "department")
                        .WithMany()
                        .HasForeignKey("departmentId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.ServiceStatus", "employeeStatus")
                        .WithMany()
                        .HasForeignKey("employeeStatusId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.EmployeeType", "employeeType")
                        .WithMany()
                        .HasForeignKey("employeeTypeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.FunctionInfo", "functionInfo")
                        .WithMany()
                        .HasForeignKey("functionInfoId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.HrProgram", "hrProgram")
                        .WithMany()
                        .HasForeignKey("hrProgramId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.HrUnit", "hrUnit")
                        .WithMany()
                        .HasForeignKey("hrUnitId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Location", "location")
                        .WithMany()
                        .HasForeignKey("locationId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.PNS", "pNS")
                        .WithMany()
                        .HasForeignKey("pNSId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Religion", "religion")
                        .WithMany()
                        .HasForeignKey("religionId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.ShiftGroupMaster", "shiftGroup")
                        .WithMany()
                        .HasForeignKey("shiftGroupId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInsurance", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeLanguage", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Language", "language")
                        .WithMany()
                        .HasForeignKey("languageId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeMembership", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Membership", "membership")
                        .WithMany()
                        .HasForeignKey("membershipId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeOtherInfo", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.HRFacility", "hRFacility")
                        .WithMany()
                        .HasForeignKey("hRFacilityId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeProjectActivity", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.HRActivity", "hRActivity")
                        .WithMany()
                        .HasForeignKey("hRActivityId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.HRDoner", "hRDoner")
                        .WithMany()
                        .HasForeignKey("hRDonerId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.HRProject", "hRProject")
                        .WithMany()
                        .HasForeignKey("hRProjectId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeProjectAssign", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.Project", "project")
                        .WithMany()
                        .HasForeignKey("projectId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeSignature", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.FinanceCode", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.FreedomFighter", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.HRPMSAttachment", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.AtttachmentCategory", "atttachmentCategory")
                        .WithMany()
                        .HasForeignKey("atttachmentCategoryId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.LeaveLog", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Leave.LeaveType", "leaveType")
                        .WithMany()
                        .HasForeignKey("leaveTypeId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.Nominee", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.NomineeDetail", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.NomineeFund", "nomineeFund")
                        .WithMany()
                        .HasForeignKey("nomineeFundId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.Nominee", "nominee")
                        .WithMany()
                        .HasForeignKey("nomineeId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.OfficeAssign", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.OtherActivity", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.ActivityName", "activityName")
                        .WithMany()
                        .HasForeignKey("activityNameId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.OtherQualification", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.OtherQualificationHead", "otherQualificationHead")
                        .WithMany()
                        .HasForeignKey("otherQualificationHeadId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Result", "result")
                        .WithMany()
                        .HasForeignKey("resultId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.PassportDetails", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.Photograph", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.PriviousEmployment", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.HRPMSOrganizationType", "organizationType")
                        .WithMany()
                        .HasForeignKey("organizationTypeId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.ProfessionalQualifications", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.QualificationHead", "qualificationHead")
                        .WithMany()
                        .HasForeignKey("qualificationHeadId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Result", "result")
                        .WithMany()
                        .HasForeignKey("resultId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.Promotion", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Designation", "designation")
                        .WithMany()
                        .HasForeignKey("designationId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Designation", "designationOld")
                        .WithMany()
                        .HasForeignKey("designationOldId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryGrade", "salaryGrade")
                        .WithMany()
                        .HasForeignKey("salaryGradeId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.PromotionLog", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Designation", "designationNew")
                        .WithMany()
                        .HasForeignKey("designationNewId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Designation", "designationOld")
                        .WithMany()
                        .HasForeignKey("designationOldId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryGrade", "payScale")
                        .WithMany()
                        .HasForeignKey("payScaleId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.Publication", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.QualificationAndValidation", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.QualificationHead", "qualificationHead")
                        .WithMany()
                        .HasForeignKey("qualificationHeadId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.Reference", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.Spouse", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.Supervisor", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "supervisor")
                        .WithMany()
                        .HasForeignKey("supervisorId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.TraningLog", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.TrainingCategory", "trainingCategory")
                        .WithMany()
                        .HasForeignKey("trainingCategoryId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.TrainingInstitute", "trainingInstitute")
                        .WithMany()
                        .HasForeignKey("trainingInstituteId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.TransferLog", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Department", "department")
                        .WithMany()
                        .HasForeignKey("departmentId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Designation", "designatio")
                        .WithMany()
                        .HasForeignKey("designatioId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryGrade", "salaryGrade")
                        .WithMany()
                        .HasForeignKey("salaryGradeId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.TraveInfo", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.HrProgram", "hrProgram")
                        .WithMany()
                        .HasForeignKey("hrProgramId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.Project", "project")
                        .WithMany()
                        .HasForeignKey("projectId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.TravelPurpose", "travelPurpose")
                        .WithMany()
                        .HasForeignKey("travelPurposeId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.WagesAddress", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryId");

                    b.HasOne("OPUSERP.Data.Entity.Master.District", "district")
                        .WithMany()
                        .HasForeignKey("districtId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Division", "division")
                        .WithMany()
                        .HasForeignKey("divisionId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.WagesEmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Data.Entity.Master.Thana", "thana")
                        .WithMany()
                        .HasForeignKey("thanaId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.WagesBankInfo", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.WagesEmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.WagesEmergencyContact", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.WagesEmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.WagesEmployeeInfo", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.SpecialBranchUnit", "branch")
                        .WithMany()
                        .HasForeignKey("branchId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Department", "department")
                        .WithMany()
                        .HasForeignKey("departmentId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.EmployeeType", "employeeType")
                        .WithMany()
                        .HasForeignKey("employeeTypeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.PNS", "pNS")
                        .WithMany()
                        .HasForeignKey("pNSId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Religion", "religion")
                        .WithMany()
                        .HasForeignKey("religionId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.ShiftGroupMaster", "shiftGroup")
                        .WithMany()
                        .HasForeignKey("shiftGroupId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.WagesLeftDetails", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.WagesEmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.WagesPhotograph", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.WagesEmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.WagesPriviousEmployment", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.WagesEmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.HRPMSOrganizationType", "organizationType")
                        .WithMany()
                        .HasForeignKey("organizationTypeId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Employee.WagesReference", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.WagesEmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Gratuity.GratuityPolicyDetail", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Gratuity.GratuityPolicyMaster", "gratuityPolicy")
                        .WithMany()
                        .HasForeignKey("gratuityPolicyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Gratuity.GratuityPolicyMaster", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.SpecialBranchUnit", "sbu")
                        .WithMany()
                        .HasForeignKey("sbuId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Leave.LeaveOpeningBalance", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Leave.LeaveType", "leaveType")
                        .WithMany()
                        .HasForeignKey("leaveTypeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Year", "year")
                        .WithMany()
                        .HasForeignKey("yearId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Leave.LeavePolicy", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Leave.LeaveType", "leaveType")
                        .WithMany()
                        .HasForeignKey("leaveTypeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Year", "year")
                        .WithMany()
                        .HasForeignKey("yearId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Leave.LeaveRegister", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Leave.LeaveDay", "leaveDay")
                        .WithMany()
                        .HasForeignKey("leaveDayId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Leave.LeaveType", "leaveType")
                        .WithMany()
                        .HasForeignKey("leaveTypeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "substitutionUser")
                        .WithMany()
                        .HasForeignKey("substitutionUserId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Leave.LeaveRoute", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Leave.LeaveRegister", "leaveRegister")
                        .WithMany()
                        .HasForeignKey("leaveRegisterId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Leave.LeaveStatusLog", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Leave.LeaveRegister", "leaveRegister")
                        .WithMany()
                        .HasForeignKey("leaveRegisterId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Leave.WagesLeaveRegister", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.WagesEmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Leave.LeaveType", "leaveType")
                        .WithMany()
                        .HasForeignKey("leaveTypeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.WagesEmployeeInfo", "substitutionUser")
                        .WithMany()
                        .HasForeignKey("substitutionUserId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Library.BookEntry", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.BookCategory", "bookCategory")
                        .WithMany()
                        .HasForeignKey("bookCategoryId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Library.BorrowerInfo", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Library.BookEntry", "bookEntry")
                        .WithMany()
                        .HasForeignKey("bookEntryId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "borrower")
                        .WithMany()
                        .HasForeignKey("borrowerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.ActivityName", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.HRPMSActivityType", "activityType")
                        .WithMany()
                        .HasForeignKey("activityTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.ApprovalDetail", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.ApprovalMaster", "approvalMaster")
                        .WithMany()
                        .HasForeignKey("approvalMasterId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "approver")
                        .WithMany()
                        .HasForeignKey("approverId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.ApprovalMaster", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.ApprovalType", "approvalType")
                        .WithMany()
                        .HasForeignKey("approvalTypeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.AtttachmentCategory", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.AtttachmentGroup", "atttachmentGroup")
                        .WithMany()
                        .HasForeignKey("atttachmentGroupId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.BelongingItem", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.Item", "item")
                        .WithMany()
                        .HasForeignKey("itemId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.Degree", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.LevelofEducation", "levelofeducation")
                        .WithMany()
                        .HasForeignKey("levelofeducationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.FunctionInfo", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.Location", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.RelDegreeSubject", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Degree", "degree")
                        .WithMany()
                        .HasForeignKey("degreeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Subject", "subject")
                        .WithMany()
                        .HasForeignKey("subjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.RlnSBUPNS", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.PNS", "pNS")
                        .WithMany()
                        .HasForeignKey("pNSId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.SpecialBranchUnit", "specialBranchUnit")
                        .WithMany()
                        .HasForeignKey("specialBranchUnitId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.ShiftGroupDetail", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.ShiftGroupMaster", "shiftGroupMaster")
                        .WithMany()
                        .HasForeignKey("shiftGroupMasterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Master.SpecialBranchUnit", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Organogram.OrganoOrganization", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Organogram.OrganizationType", "organizationType")
                        .WithMany()
                        .HasForeignKey("organizationTypeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Organogram.OrganoOrganization", "organoOrganization")
                        .WithMany()
                        .HasForeignKey("organoOrganizationId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Organogram.Post", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Designation", "altDesignation")
                        .WithMany()
                        .HasForeignKey("altDesignationId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Designation", "designation")
                        .WithMany()
                        .HasForeignKey("designationId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Organogram.OrganoOrganization", "organoOrganization")
                        .WithMany()
                        .HasForeignKey("organoOrganizationId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Organogram.PostDetails", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Organogram.EmploymentType", "employmentType")
                        .WithMany()
                        .HasForeignKey("employmentTypeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Organogram.Post", "post")
                        .WithMany()
                        .HasForeignKey("postId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Organogram.PostingType", "postingType")
                        .WithMany()
                        .HasForeignKey("postingTypeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Organogram.PostDetails", "reportingBoss")
                        .WithMany()
                        .HasForeignKey("reportingBossId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.PromotionAndTransfer.PromotionAttachment", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.PromotionAndTransfer.PromotionEntry", "promotion")
                        .WithMany()
                        .HasForeignKey("promotionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.PromotionAndTransfer.PromotionEntry", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.PromotionAndTransfer.TransferAttachment", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.PromotionAndTransfer.TransferEntry", "transfer")
                        .WithMany()
                        .HasForeignKey("transferId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.PromotionAndTransfer.TransferEntry", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.PunishmentCharge.Charge", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.PunishmentCharge.Punishment", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Recruitment.ApplicationEdu", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Recruitment.ApplicationForm", "applicationForm")
                        .WithMany()
                        .HasForeignKey("applicationFormId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Recruitment.ApplicationExp", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Recruitment.ApplicationForm", "applicationForm")
                        .WithMany()
                        .HasForeignKey("applicationFormId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Recruitment.ApplicationQuota", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Recruitment.ApplicationForm", "applicationForm")
                        .WithMany()
                        .HasForeignKey("applicationFormId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Recruitment.CallForExam", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Recruitment.ApplicationExam", "applicationExam")
                        .WithMany()
                        .HasForeignKey("applicationExamId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Recruitment.ApplicationForm", "applicationForm")
                        .WithMany()
                        .HasForeignKey("applicationFormId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Recruitment.ExitInterview.ExitInterviewComment", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Recruitment.ExitInterview.ExitInterviewMaster", "exitInterviewMaster")
                        .WithMany()
                        .HasForeignKey("exitInterviewMasterId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.InterviewComment", "interviewComment")
                        .WithMany()
                        .HasForeignKey("interviewCommentId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Recruitment.ExitInterview.ExitInterviewFeelAndFollowings", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Recruitment.ExitInterview.ExitInterviewMaster", "exitInterviewMaster")
                        .WithMany()
                        .HasForeignKey("exitInterviewMasterId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.FeelAboutTheFollowing", "feelAboutTheFollowing")
                        .WithMany()
                        .HasForeignKey("feelAboutTheFollowingId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Recruitment.ExitInterview.ExitInterviewMaster", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Recruitment.ExitInterview.ExitInterviewPayNBenefits", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Recruitment.ExitInterview.ExitInterviewMaster", "exitInterviewMaster")
                        .WithMany()
                        .HasForeignKey("exitInterviewMasterId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.PayAndBenefits", "payAndBenefits")
                        .WithMany()
                        .HasForeignKey("payAndBenefitsId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Recruitment.ExitInterview.ExitInterviewReasonOfLeaving", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Recruitment.ExitInterview.ExitInterviewMaster", "exitInterviewMaster")
                        .WithMany()
                        .HasForeignKey("exitInterviewMasterId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.ReasonForLeaving", "reasonForLeaving")
                        .WithMany()
                        .HasForeignKey("reasonForLeavingId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Recruitment.ExitInterview.ExitInterviewSuggestion", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.CommentORSuggestion", "commentORSuggestion")
                        .WithMany()
                        .HasForeignKey("commentORSuggestionId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Recruitment.ExitInterview.ExitInterviewMaster", "exitInterviewMaster")
                        .WithMany()
                        .HasForeignKey("exitInterviewMasterId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.RetirementAndTermination.PRLApplication", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.RetirementAndTermination.PRLAttachment", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.RetirementAndTermination.PRLApplication", "pRLApplication")
                        .WithMany()
                        .HasForeignKey("prlApplicationid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.RetirementAndTermination.ResignInformation", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.RewardInfo.Reward", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Training.Evaluation", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Training.EvaluationFectors", "evaluationFectors")
                        .WithMany()
                        .HasForeignKey("evaluationFectorsId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Training.Trainer", "trainer")
                        .WithMany()
                        .HasForeignKey("trainerId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Training.TrainingInfo", "trainingInfo")
                        .WithMany()
                        .HasForeignKey("trainingInfoId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Training.ExamResult", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Training.TrainingExam", "trainingExam")
                        .WithMany()
                        .HasForeignKey("trainingExamId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Training.PlanDetails", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Training.Plan", "plan")
                        .WithMany()
                        .HasForeignKey("planId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Training.TrainingOffer", "trainingOffer")
                        .WithMany()
                        .HasForeignKey("trainingOfferId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Training.RlnTrainingTrainer", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Training.Trainer", "trainer")
                        .WithMany()
                        .HasForeignKey("trainerId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Training.TrainingOffer", "trainingOffer")
                        .WithMany()
                        .HasForeignKey("trainingOfferId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Training.SessionAttendance", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Training.TrainingInfoDetails", "trainingInfoDetails")
                        .WithMany()
                        .HasForeignKey("trainingInfoDetailsId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Training.Trainer", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Training.TrainingAllocation", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Organogram.PostDetails", "postDetails")
                        .WithMany()
                        .HasForeignKey("postDetailsId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Training.TrainingInfo", "trainingInfo")
                        .WithMany()
                        .HasForeignKey("trainingInfoId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Training.TrainingDeliverables", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Training.TrainingInfo", "trainingInfo")
                        .WithMany()
                        .HasForeignKey("trainingInfoId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Training.TrainingExam", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Training.Trainer", "trainer")
                        .WithMany()
                        .HasForeignKey("trainerId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Training.TrainingInfo", "trainingInfo")
                        .WithMany()
                        .HasForeignKey("trainingInfoId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Training.TrainingInfo", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Organization", "organization")
                        .WithMany()
                        .HasForeignKey("organizationId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Training.PlanDetails", "planDetails")
                        .WithMany()
                        .HasForeignKey("planDetailsId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Training.TrainingInfoDetails", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Training.Trainer", "trainer")
                        .WithMany()
                        .HasForeignKey("trainerId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Training.TrainingInfo", "trainingInfo")
                        .WithMany()
                        .HasForeignKey("trainingInfoId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Training.TrainingMiscallenous", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Training.TrainingInfo", "trainingInfo")
                        .WithMany()
                        .HasForeignKey("trainingInfoId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Training.TrainingOffer", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.TrainingCategory", "moduleTrainingCategory")
                        .WithMany()
                        .HasForeignKey("moduleTrainingCategoryId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.TrainingNew.EnrolledTrainee", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.TrainingNew.TrainingInfoNew", "trainingInfoNew")
                        .WithMany()
                        .HasForeignKey("trainingInfoNewId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.TrainingNew.TrainingInfoNew", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.EmployeeType", "employeeType")
                        .WithMany()
                        .HasForeignKey("employeeTypeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.TrainingCategory", "trainingCategory")
                        .WithMany()
                        .HasForeignKey("trainingCategoryId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.TrainingInstitute", "trainingInstitute")
                        .WithMany()
                        .HasForeignKey("trainingInstituteId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.TrainingNew.TrainingResourcePerson", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.TrainingNew.ResourcePerson", "resourcePerson")
                        .WithMany()
                        .HasForeignKey("resourcePersonId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.TrainingNew.TrainingInfoNew", "trainingInfoNew")
                        .WithMany()
                        .HasForeignKey("trainingInfoNewId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Travel.TravelMaster", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.HRActivity", "hRActivity")
                        .WithMany()
                        .HasForeignKey("hRActivityId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.HRDoner", "hRDoner")
                        .WithMany()
                        .HasForeignKey("hRDonerId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.HRProject", "travelProject")
                        .WithMany()
                        .HasForeignKey("travelProjectId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Travel.TravelRoute", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Travel.TravelMaster", "travelMaster")
                        .WithMany()
                        .HasForeignKey("travelMasterId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Travel.TravelStatusLog", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Travel.TravelMaster", "travelMaster")
                        .WithMany()
                        .HasForeignKey("travelMasterId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Travel.TravellerInfo", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Travel.TravelMaster", "travelMaster")
                        .WithMany()
                        .HasForeignKey("travelMasterId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Travel.TravellingInfo", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Travel.TravelMaster", "travelMaster")
                        .WithMany()
                        .HasForeignKey("travelMasterId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.TravelVehicleType", "travelVehicleType")
                        .WithMany()
                        .HasForeignKey("travelVehicleTypeId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.VehicleInfo.DriverAssignment", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.VehicleInfo.VehicleEntry", "vehicleEntry")
                        .WithMany()
                        .HasForeignKey("vehicleEntryId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.VehicleInfo.MajorOverholding", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.VehicleInfo.VehicleEntry", "vehicleEntry")
                        .WithMany()
                        .HasForeignKey("vehicleEntryId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.VehicleInfo.VehicleEntry", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Vehicle", "vehicle")
                        .WithMany()
                        .HasForeignKey("vehicleId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Wages.OTProcessData", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.WagesEmployeeInfo", "wageEmployeeInfo")
                        .WithMany()
                        .HasForeignKey("wageEmployeeInfoId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Wages.OTSetupDetail", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Wages.OTSetupMaster", "oTSetupMaster")
                        .WithMany()
                        .HasForeignKey("oTSetupMasterId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Wages.OTSlotType", "oTSlotType")
                        .WithMany()
                        .HasForeignKey("oTSlotTypeId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Wages.OTSetupMaster", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.ShiftGroupMaster", "shiftGroupMaster")
                        .WithMany()
                        .HasForeignKey("shiftGroupMasterId");
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Wages.WagesPunchCardInfo", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.WagesEmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.HRPMS.Data.Entity.Wages.WagesSalaryStructure", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.WagesEmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryHead", "salaryHead")
                        .WithMany()
                        .HasForeignKey("salaryHeadId");
                });

            modelBuilder.Entity("OPUSERP.Meeting.Data.Entity.MeetingAttendance", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.Meeting.Data.Entity.MeetingInfo", "meetingInfo")
                        .WithMany()
                        .HasForeignKey("meetingInfoId");
                });

            modelBuilder.Entity("OPUSERP.Meeting.Data.Entity.MeetingDetail", b =>
                {
                    b.HasOne("OPUSERP.Meeting.Data.Entity.MeetingActionInfo", "action")
                        .WithMany()
                        .HasForeignKey("actionId");

                    b.HasOne("OPUSERP.Meeting.Data.Entity.MeetingDocument", "doc")
                        .WithMany()
                        .HasForeignKey("docId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.Meeting.Data.Entity.MeetingInfo", "meetingInfo")
                        .WithMany()
                        .HasForeignKey("meetingInfoId");
                });

            modelBuilder.Entity("OPUSERP.Meeting.Data.Entity.MeetingDocAttachment", b =>
                {
                    b.HasOne("OPUSERP.Meeting.Data.Entity.MeetingDocument", "doc")
                        .WithMany()
                        .HasForeignKey("docId");
                });

            modelBuilder.Entity("OPUSERP.Meeting.Data.Entity.MeetingDocRoute", b =>
                {
                    b.HasOne("OPUSERP.Meeting.Data.Entity.MeetingActionInfo", "action")
                        .WithMany()
                        .HasForeignKey("actionId");

                    b.HasOne("OPUSERP.Meeting.Data.Entity.MeetingDocument", "doc")
                        .WithMany()
                        .HasForeignKey("docId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeReplace")
                        .WithMany()
                        .HasForeignKey("employeeReplaceId");
                });

            modelBuilder.Entity("OPUSERP.Meeting.Data.Entity.MeetingDocs", b =>
                {
                    b.HasOne("OPUSERP.Meeting.Data.Entity.MeetingDocument", "doc")
                        .WithMany()
                        .HasForeignKey("docId");

                    b.HasOne("OPUSERP.Meeting.Data.Entity.MeetingInfo", "meetingInfo")
                        .WithMany()
                        .HasForeignKey("meetingInfoId");
                });

            modelBuilder.Entity("OPUSERP.Meeting.Data.Entity.MeetingDocument", b =>
                {
                    b.HasOne("OPUSERP.Meeting.Data.Entity.MeetingDocument", "doc")
                        .WithMany()
                        .HasForeignKey("docId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");
                });

            modelBuilder.Entity("OPUSERP.Meeting.Data.Entity.MeetingInfo", b =>
                {
                    b.HasOne("OPUSERP.Meeting.Data.Entity.MeetingActionInfo", "action")
                        .WithMany()
                        .HasForeignKey("actionId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");
                });

            modelBuilder.Entity("OPUSERP.Meeting.Data.Entity.MeetingUser", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");
                });

            modelBuilder.Entity("OPUSERP.MessageBox.Data.MessageBoxFile", b =>
                {
                    b.HasOne("OPUSERP.MessageBox.Data.MessageBoxInfo", "messageBox")
                        .WithMany()
                        .HasForeignKey("messageBoxId");
                });

            modelBuilder.Entity("OPUSERP.MessageBox.Data.MessageBoxInfo", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.MessageBox.Data.MessageBoxInfo", "messageBox")
                        .WithMany()
                        .HasForeignKey("messageBoxId");

                    b.HasOne("OPUSERP.MessageBox.Data.MessageGroup", "messageGroup")
                        .WithMany()
                        .HasForeignKey("messageGroupId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "receiver")
                        .WithMany()
                        .HasForeignKey("receiverId");
                });

            modelBuilder.Entity("OPUSERP.MessageBox.Data.MessageGroup", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");
                });

            modelBuilder.Entity("OPUSERP.MessageBox.Data.MessageGroupMember", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.MessageBox.Data.MessageGroup", "messageGroup")
                        .WithMany()
                        .HasForeignKey("messageGroupId");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.BarCodeInformation", b =>
                {
                    b.HasOne("OPUSERP.OtherSales.Data.Entity.Sales.ItemPriceFixing", "itemPrice")
                        .WithMany()
                        .HasForeignKey("itemPriceId");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.BillReturnPaymentDetail", b =>
                {
                    b.HasOne("OPUSERP.OtherSales.Data.Entity.Sales.BillReturnPaymentMaster", "billReturnPaymentMaster")
                        .WithMany()
                        .HasForeignKey("billReturnPaymentMasterId");

                    b.HasOne("OPUSERP.OtherSales.Data.Entity.Sales.SalesReturnInvoiceMaster", "salesReturnInvoiceMaster")
                        .WithMany()
                        .HasForeignKey("salesReturnInvoiceMasterId");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.BillReturnPaymentMaster", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.PaymentMode", "paymentMode")
                        .WithMany()
                        .HasForeignKey("paymentModeId");

                    b.HasOne("OPUSERP.OtherSales.Data.Entity.Sales.RelSupplierCustomerResourse", "relSupplierCustomerResourse")
                        .WithMany()
                        .HasForeignKey("relSupplierCustomerResourseId");

                    b.HasOne("OPUSERP.POS.Data.Entity.Store", "store")
                        .WithMany()
                        .HasForeignKey("storeId");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.ItemPriceFixing", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", "itemSpecification")
                        .WithMany()
                        .HasForeignKey("itemSpecificationId");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.MenuMealTypeMapping", b =>
                {
                    b.HasOne("OPUSERP.OtherSales.Data.Entity.Sales.MealType", "mealType")
                        .WithMany()
                        .HasForeignKey("mealTypeId");

                    b.HasOne("OPUSERP.OtherSales.Data.Entity.Sales.SalesMenu", "salesMenu")
                        .WithMany()
                        .HasForeignKey("salesMenuId");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.RelCustomerArea", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.Area", "area")
                        .WithMany()
                        .HasForeignKey("areaId");

                    b.HasOne("OPUSERP.OtherSales.Data.Entity.Sales.RelSupplierCustomerResourse", "relSupplierCustomerResourse")
                        .WithMany()
                        .HasForeignKey("relSupplierCustomerResourseId");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.RelSupplierCustomerResourse", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Leads", "Leads")
                        .WithMany()
                        .HasForeignKey("LeadsId");

                    b.HasOne("OPUSERP.Distribution.Data.Entity.MasterData.DistributorType", "distributorType")
                        .WithMany()
                        .HasForeignKey("distributorTypeId");

                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.Ledger", "ledger")
                        .WithMany()
                        .HasForeignKey("ledgerId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Organization", "organization")
                        .WithMany()
                        .HasForeignKey("organizationId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Resource", "resource")
                        .WithMany()
                        .HasForeignKey("resourceId");

                    b.HasOne("OPUSERP.OtherSales.Data.Entity.Sales.RoleType", "roleType")
                        .WithMany()
                        .HasForeignKey("roleTypeId");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.SalesCollection", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.Bank", "bankInfo")
                        .WithMany()
                        .HasForeignKey("bankInfoId");

                    b.HasOne("OPUSERP.POS.Data.Entity.CardType", "cardType")
                        .WithMany()
                        .HasForeignKey("cardTypeId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.PaymentMode", "paymentMode")
                        .WithMany()
                        .HasForeignKey("paymentModeId");

                    b.HasOne("OPUSERP.OtherSales.Data.Entity.Sales.RelSupplierCustomerResourse", "relSupplierCustomerResourse")
                        .WithMany()
                        .HasForeignKey("relSupplierCustomerResourseId");

                    b.HasOne("OPUSERP.OtherSales.Data.Entity.Sales.SalesInvoiceMaster", "salesInvoiceMaster")
                        .WithMany()
                        .HasForeignKey("salesInvoiceMasterId");

                    b.HasOne("OPUSERP.POS.Data.Entity.Store", "store")
                        .WithMany()
                        .HasForeignKey("storeId");

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.WalletType", "walletType")
                        .WithMany()
                        .HasForeignKey("walletTypeId");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.SalesCollectionBillInfo", b =>
                {
                    b.HasOne("OPUSERP.OtherSales.Data.Entity.Sales.RelSupplierCustomerResourse", "relSupplierCustomerResourse")
                        .WithMany()
                        .HasForeignKey("relSupplierCustomerResourseId");

                    b.HasOne("OPUSERP.OtherSales.Data.Entity.Sales.SalesInvoiceMaster", "salesInvoiceMaster")
                        .WithMany()
                        .HasForeignKey("salesInvoiceMasterId");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.SalesCollectionDetail", b =>
                {
                    b.HasOne("OPUSERP.OtherSales.Data.Entity.Sales.SalesCollectionBillInfo", "salesCollectionBillInfo")
                        .WithMany()
                        .HasForeignKey("salesCollectionBillInfoId");

                    b.HasOne("OPUSERP.OtherSales.Data.Entity.Sales.SalesCollection", "salesCollection")
                        .WithMany()
                        .HasForeignKey("salesCollectionId");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.SalesInvoiceDetail", b =>
                {
                    b.HasOne("OPUSERP.OtherSales.Data.Entity.Sales.ItemPriceFixing", "itemPriceFixing")
                        .WithMany()
                        .HasForeignKey("itemPriceFixingId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", "itemSpecication")
                        .WithMany()
                        .HasForeignKey("itemSpecicationId");

                    b.HasOne("OPUSERP.Patient.Data.Entity.PatientServiceDetail", "patientServiceDetails")
                        .WithMany()
                        .HasForeignKey("patientServiceDetailsId");

                    b.HasOne("OPUSERP.Rental.Data.Entity.Sales.RentInvoiceDetail", "rentInvoiceDetail")
                        .WithMany()
                        .HasForeignKey("rentInvoiceDetailId");

                    b.HasOne("OPUSERP.OtherSales.Data.Entity.Sales.SalesInvoiceMaster", "salesInvoiceMaster")
                        .WithMany()
                        .HasForeignKey("salesInvoiceMasterId");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.SalesInvoiceMaster", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Leads", "leads")
                        .WithMany()
                        .HasForeignKey("leadsId");

                    b.HasOne("OPUSERP.OtherSales.Data.Entity.Sales.RelSupplierCustomerResourse", "relSupplierCustomerResourse")
                        .WithMany()
                        .HasForeignKey("relSupplierCustomerResourseId");

                    b.HasOne("OPUSERP.POS.Data.Entity.Store", "store")
                        .WithMany()
                        .HasForeignKey("storeId");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.SalesMenu", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", "itemSpecification")
                        .WithMany()
                        .HasForeignKey("itemSpecificationId");

                    b.HasOne("OPUSERP.OtherSales.Data.Entity.Sales.SalesMenuCategory", "salesMenuCategory")
                        .WithMany()
                        .HasForeignKey("salesMenuCategoryId");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.SalesMenuOpeningBalance", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", "itemSpecification")
                        .WithMany()
                        .HasForeignKey("itemSpecificationId");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.SalesReturnInvoiceDetail", b =>
                {
                    b.HasOne("OPUSERP.OtherSales.Data.Entity.Sales.ItemPriceFixing", "itemPriceFixing")
                        .WithMany()
                        .HasForeignKey("itemPriceFixingId");

                    b.HasOne("OPUSERP.OtherSales.Data.Entity.Sales.SalesInvoiceDetail", "salesInvoiceDetail")
                        .WithMany()
                        .HasForeignKey("salesInvoiceDetailId");

                    b.HasOne("OPUSERP.OtherSales.Data.Entity.Sales.SalesReturnInvoiceMaster", "salesReturnInvoiceMaster")
                        .WithMany()
                        .HasForeignKey("salesReturnInvoiceMasterId");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.SalesReturnInvoiceMaster", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");

                    b.HasOne("OPUSERP.OtherSales.Data.Entity.Sales.RelSupplierCustomerResourse", "relSupplierCustomerResourse")
                        .WithMany()
                        .HasForeignKey("relSupplierCustomerResourseId");

                    b.HasOne("OPUSERP.POS.Data.Entity.Store", "store")
                        .WithMany()
                        .HasForeignKey("storeId");
                });

            modelBuilder.Entity("OPUSERP.OtherSales.Data.Entity.Sales.SalesTermsConditions", b =>
                {
                    b.HasOne("OPUSERP.OtherSales.Data.Entity.Sales.SalesInvoiceMaster", "salesInvoiceMaster")
                        .WithMany()
                        .HasForeignKey("salesInvoiceMasterId");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.ItemPriceFixing", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", "itemSpecification")
                        .WithMany()
                        .HasForeignKey("itemSpecificationId");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.OfferDetails", b =>
                {
                    b.HasOne("OPUSERP.POS.Data.Entity.ItemPriceFixing", "itemPriceFixing")
                        .WithMany()
                        .HasForeignKey("itemPriceFixingId");

                    b.HasOne("OPUSERP.POS.Data.Entity.OfferMaster", "offerMaster")
                        .WithMany()
                        .HasForeignKey("offerMasterId");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.PosBillReturnPaymentDetail", b =>
                {
                    b.HasOne("OPUSERP.POS.Data.Entity.PosBillReturnPaymentMaster", "billReturnPaymentMaster")
                        .WithMany()
                        .HasForeignKey("billReturnPaymentMasterId");

                    b.HasOne("OPUSERP.POS.Data.Entity.PosSalesReturnInvoiceMaster", "salesReturnInvoiceMaster")
                        .WithMany()
                        .HasForeignKey("salesReturnInvoiceMasterId");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.PosBillReturnPaymentMaster", b =>
                {
                    b.HasOne("OPUSERP.POS.Data.Entity.PosCustomer", "PosCustomer")
                        .WithMany()
                        .HasForeignKey("PosCustomerId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.PaymentMode", "paymentMode")
                        .WithMany()
                        .HasForeignKey("paymentModeId");

                    b.HasOne("OPUSERP.POS.Data.Entity.Store", "store")
                        .WithMany()
                        .HasForeignKey("storeId");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.PosCollectionDetail", b =>
                {
                    b.HasOne("OPUSERP.POS.Data.Entity.PosCollectionMaster", "posCollectionMaster")
                        .WithMany()
                        .HasForeignKey("posCollectionMasterId");

                    b.HasOne("OPUSERP.POS.Data.Entity.PosInvoiceMaster", "posInvoiceMaster")
                        .WithMany()
                        .HasForeignKey("posInvoiceMasterId");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.PosCollectionMaster", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.BankInfo", "bankInfo")
                        .WithMany()
                        .HasForeignKey("bankInfoId");

                    b.HasOne("OPUSERP.POS.Data.Entity.CardType", "cardType")
                        .WithMany()
                        .HasForeignKey("cardTypeId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");

                    b.HasOne("OPUSERP.POS.Data.Entity.MobileBankingType", "mobileBankingType")
                        .WithMany()
                        .HasForeignKey("mobileBankingTypeId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.PaymentMode", "paymentMode")
                        .WithMany()
                        .HasForeignKey("paymentModeId");

                    b.HasOne("OPUSERP.POS.Data.Entity.PosCustomer", "posCustomer")
                        .WithMany()
                        .HasForeignKey("posCustomerId");

                    b.HasOne("OPUSERP.POS.Data.Entity.Store", "store")
                        .WithMany()
                        .HasForeignKey("storeId");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.PosInvoiceDetail", b =>
                {
                    b.HasOne("OPUSERP.POS.Data.Entity.ItemPriceFixing", "itemPriceFixing")
                        .WithMany()
                        .HasForeignKey("itemPriceFixingId");

                    b.HasOne("OPUSERP.POS.Data.Entity.PosInvoiceMaster", "posInvoiceMaster")
                        .WithMany()
                        .HasForeignKey("posInvoiceMasterId");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.PosInvoiceMaster", b =>
                {
                    b.HasOne("OPUSERP.POS.Data.Entity.PosCustomer", "posCustomer")
                        .WithMany()
                        .HasForeignKey("posCustomerId");

                    b.HasOne("OPUSERP.POS.Data.Entity.Store", "store")
                        .WithMany()
                        .HasForeignKey("storeId");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.PosRepInvoiceDetail", b =>
                {
                    b.HasOne("OPUSERP.POS.Data.Entity.ItemPriceFixing", "itemPriceFixing")
                        .WithMany()
                        .HasForeignKey("itemPriceFixingId");

                    b.HasOne("OPUSERP.POS.Data.Entity.PosRepInvoiceMaster", "posRepInvoiceMaster")
                        .WithMany()
                        .HasForeignKey("posRepInvoiceMasterId");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.PosRepInvoiceMaster", b =>
                {
                    b.HasOne("OPUSERP.POS.Data.Entity.PosCustomer", "posCustomer")
                        .WithMany()
                        .HasForeignKey("posCustomerId");

                    b.HasOne("OPUSERP.POS.Data.Entity.Store", "store")
                        .WithMany()
                        .HasForeignKey("storeId");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.PosSalesReturnInvoiceDetail", b =>
                {
                    b.HasOne("OPUSERP.POS.Data.Entity.ItemPriceFixing", "itemPriceFixing")
                        .WithMany()
                        .HasForeignKey("itemPriceFixingId");

                    b.HasOne("OPUSERP.POS.Data.Entity.PosInvoiceDetail", "salesInvoiceDetail")
                        .WithMany()
                        .HasForeignKey("salesInvoiceDetailId");

                    b.HasOne("OPUSERP.POS.Data.Entity.PosSalesReturnInvoiceMaster", "salesReturnInvoiceMaster")
                        .WithMany()
                        .HasForeignKey("salesReturnInvoiceMasterId");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.PosSalesReturnInvoiceMaster", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");

                    b.HasOne("OPUSERP.POS.Data.Entity.PosCustomer", "posCustomer")
                        .WithMany()
                        .HasForeignKey("posCustomerId");

                    b.HasOne("OPUSERP.POS.Data.Entity.Store", "store")
                        .WithMany()
                        .HasForeignKey("storeId");
                });

            modelBuilder.Entity("OPUSERP.POS.Data.Entity.Store", b =>
                {
                    b.HasOne("OPUSERP.POS.Data.Entity.StoreType", "storeType")
                        .WithMany()
                        .HasForeignKey("storeTypeId");
                });

            modelBuilder.Entity("OPUSERP.Patient.Data.Entity.PatientHistory", b =>
                {
                    b.HasOne("OPUSERP.Patient.Data.Entity.DiseaseInfo", "diseaseInfo")
                        .WithMany()
                        .HasForeignKey("diseaseInfoId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Leads", "leads")
                        .WithMany()
                        .HasForeignKey("leadsId");
                });

            modelBuilder.Entity("OPUSERP.Patient.Data.Entity.PatientRepresentative", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Leads", "leads")
                        .WithMany()
                        .HasForeignKey("leadsId");
                });

            modelBuilder.Entity("OPUSERP.Patient.Data.Entity.PatientService", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemCategory", "itemCategory")
                        .WithMany()
                        .HasForeignKey("itemCategoryId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Leads", "leads")
                        .WithMany()
                        .HasForeignKey("leadsId");
                });

            modelBuilder.Entity("OPUSERP.Patient.Data.Entity.PatientServiceDetail", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", "itemSpecification")
                        .WithMany()
                        .HasForeignKey("itemSpecificationId");

                    b.HasOne("OPUSERP.Patient.Data.Entity.PatientService", "patientService")
                        .WithMany()
                        .HasForeignKey("patientServiceId");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.PF.GratiutyProcessData", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.AdditionalTaxInfo", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryHead", "salaryHead")
                        .WithMany()
                        .HasForeignKey("salaryHeadId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.TaxYear", "taxYear")
                        .WithMany()
                        .HasForeignKey("taxYearId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.AdvanceAdjustment", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryHead", "salaryHead")
                        .WithMany()
                        .HasForeignKey("salaryHeadId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryPeriod", "salaryPeriod")
                        .WithMany()
                        .HasForeignKey("salaryPeriodId");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.AdvanceAdjustmentDetail", b =>
                {
                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.AdvanceAdjustment", "advanceAdjustment")
                        .WithMany()
                        .HasForeignKey("advanceAdjustmentId");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.AdvancePayment", b =>
                {
                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.AdvanceAdjustment", "advanceAdjustment")
                        .WithMany()
                        .HasForeignKey("advanceAdjustmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.BonousStructure", b =>
                {
                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.BonousSubCategory", "bonousSubCategory")
                        .WithMany()
                        .HasForeignKey("BonousSubCategoryId");

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryCalulationType", "salaryCalulationType")
                        .WithMany()
                        .HasForeignKey("salaryCalulationTypeId");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.BonousSubCategory", b =>
                {
                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.BonousCategory", "bonousCategory")
                        .WithMany()
                        .HasForeignKey("bonousCategoryId");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.CodeManagement", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryHead", "salaryHead")
                        .WithMany()
                        .HasForeignKey("salaryHeadId");

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryPeriod", "salaryPeriod")
                        .WithMany()
                        .HasForeignKey("salaryPeriodId");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.EmpAttendanceSummary", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryPeriod", "salaryPeriod")
                        .WithMany()
                        .HasForeignKey("salaryPeriodId");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.EmployeeArrear", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryHead", "salaryHead")
                        .WithMany()
                        .HasForeignKey("salaryHeadId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryPeriod", "salaryPeriod")
                        .WithMany()
                        .HasForeignKey("salaryPeriodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.EmployeesBonusStructure", b =>
                {
                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.BonousStructure", "bonousStructure")
                        .WithMany()
                        .HasForeignKey("bonousStructureId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.EmployeesCashSetup", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.EmployeesSalaryStructure", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryHead", "salaryHead")
                        .WithMany()
                        .HasForeignKey("salaryHeadId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalarySlab", "salarySlab")
                        .WithMany()
                        .HasForeignKey("salarySlabId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.EmployeesTax", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.TaxYear", "taxYear")
                        .WithMany()
                        .HasForeignKey("taxYearId");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.FinalSettlement", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryPeriod", "salaryPeriod")
                        .WithMany()
                        .HasForeignKey("salaryPeriodId");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.FixedTaxEmployees", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.TaxYear", "taxYear")
                        .WithMany()
                        .HasForeignKey("taxYearId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.IncomeTaxSetup", b =>
                {
                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryHead", "salaryHead")
                        .WithMany()
                        .HasForeignKey("salaryHeadId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.TaxYear", "taxYear")
                        .WithMany()
                        .HasForeignKey("taxYearId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.InvestmentRebateSettings", b =>
                {
                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.TaxYear", "taxYear")
                        .WithMany()
                        .HasForeignKey("taxYearId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.LeaveWithoutPay", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryPeriod", "salaryPeriod")
                        .WithMany()
                        .HasForeignKey("salaryPeriodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.LfaInfo", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryPeriod", "salaryPeriod")
                        .WithMany()
                        .HasForeignKey("salaryPeriodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.LoanPolicy", b =>
                {
                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryGrade", "salaryGrade")
                        .WithMany()
                        .HasForeignKey("salaryGradeId");

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryHead", "salaryHead")
                        .WithMany()
                        .HasForeignKey("salaryHeadId");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.LoanRoute", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.LoanScheduleMaster", "loanScheduleMaster")
                        .WithMany()
                        .HasForeignKey("loanScheduleMasterId");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.LoanScheduleDetail", b =>
                {
                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.LoanScheduleMaster", "loanScheduleMaster")
                        .WithMany()
                        .HasForeignKey("loanScheduleMasterId");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.LoanScheduleMaster", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.LoanPolicy", "loanPolicy")
                        .WithMany()
                        .HasForeignKey("loanPolicyId");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.MonthlyAllowance", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryHead", "salaryHead")
                        .WithMany()
                        .HasForeignKey("salaryHeadId");

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryPeriod", "salaryPeriod")
                        .WithMany()
                        .HasForeignKey("salaryPeriodId");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.PFLoan", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryHead", "salaryHead")
                        .WithMany()
                        .HasForeignKey("salaryHeadId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryPeriod", "salaryPeriod")
                        .WithMany()
                        .HasForeignKey("salaryPeriodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.PFLoanPayment", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.PFLoan", "pFLoan")
                        .WithMany()
                        .HasForeignKey("pFLoanId");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.PFLoanSchedule", b =>
                {
                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.PFLoanPayment", "PFLoanPayment")
                        .WithMany()
                        .HasForeignKey("PFLoanPaymentId");

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.PFLoan", "pFLoan")
                        .WithMany()
                        .HasForeignKey("pFLoanId");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.ProcessEmpSalaryMaster", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryPeriod", "salaryPeriod")
                        .WithMany()
                        .HasForeignKey("salaryPeriodId");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.ProcessEmpSalaryStructure", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryHead", "salaryHead")
                        .WithMany()
                        .HasForeignKey("salaryHeadId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryPeriod", "salaryPeriod")
                        .WithMany()
                        .HasForeignKey("salaryPeriodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.ProcessSalaryRemarks", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryPeriod", "salaryPeriod")
                        .WithMany()
                        .HasForeignKey("salaryPeriodId");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.SalaryActivityPercent", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeProjectActivity", "employeeProjectActivity")
                        .WithMany()
                        .HasForeignKey("employeeProjectActivityId");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.SalaryGradePercent", b =>
                {
                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryCalulationType", "salaryCalulationType")
                        .WithMany()
                        .HasForeignKey("salaryCalulationTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryGrade", "salaryGrade")
                        .WithMany()
                        .HasForeignKey("salaryGradeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryHead", "salaryHead")
                        .WithMany()
                        .HasForeignKey("salaryHeadId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.SalaryPeriod", b =>
                {
                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.BonusType", "bonusType")
                        .WithMany()
                        .HasForeignKey("bonusTypeId");

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryType", "salaryType")
                        .WithMany()
                        .HasForeignKey("salaryTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryYear", "salaryYear")
                        .WithMany()
                        .HasForeignKey("salaryYearId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.TaxYear", "taxYear")
                        .WithMany()
                        .HasForeignKey("taxYearId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.SalaryProcessLog", b =>
                {
                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryPeriod", "salaryPeriod")
                        .WithMany()
                        .HasForeignKey("salaryPeriodId");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.SalarySlab", b =>
                {
                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryGrade", "salaryGrade")
                        .WithMany()
                        .HasForeignKey("salaryGradeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.SalaryStatusLog", b =>
                {
                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryPeriod", "salaryPeriod")
                        .WithMany()
                        .HasForeignKey("salaryPeriodId");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.SalaryStructureHistory", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryHead", "salaryHead")
                        .WithMany()
                        .HasForeignKey("salaryHeadId");

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalarySlab", "salarySlab")
                        .WithMany()
                        .HasForeignKey("salarySlabId");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.SlabIncomeTax", b =>
                {
                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SlabType", "slabType")
                        .WithMany()
                        .HasForeignKey("slabTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.TaxYear", "taxYear")
                        .WithMany()
                        .HasForeignKey("taxYearId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.SlabIncomeTaxAssign", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SlabType", "slabType")
                        .WithMany()
                        .HasForeignKey("slabTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.SlabRebate", b =>
                {
                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.RebateSlabType", "slabType")
                        .WithMany()
                        .HasForeignKey("slabTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.TaxYear", "taxYear")
                        .WithMany()
                        .HasForeignKey("taxYearId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.TaxChallan", b =>
                {
                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryPeriod", "salaryPeriod")
                        .WithMany()
                        .HasForeignKey("salaryPeriodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.WagesProcessEmpSalaryMaster", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.WagesEmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryPeriod", "salaryPeriod")
                        .WithMany()
                        .HasForeignKey("salaryPeriodId");
                });

            modelBuilder.Entity("OPUSERP.Payroll.Data.Entity.Salary.WagesProcessEmpSalaryStructure", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.WagesEmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryHead", "salaryHead")
                        .WithMany()
                        .HasForeignKey("salaryHeadId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Payroll.Data.Entity.Salary.SalaryPeriod", "salaryPeriod")
                        .WithMany()
                        .HasForeignKey("salaryPeriodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Production.Data.Entity.BOMDetail", b =>
                {
                    b.HasOne("OPUSERP.Production.Data.Entity.BOMMaster", "bOMMaster")
                        .WithMany()
                        .HasForeignKey("bOMMasterId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", "itemSpecification")
                        .WithMany()
                        .HasForeignKey("itemSpecificationId");
                });

            modelBuilder.Entity("OPUSERP.Production.Data.Entity.BOMMaster", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", "itemSpecification")
                        .WithMany()
                        .HasForeignKey("itemSpecificationId");
                });

            modelBuilder.Entity("OPUSERP.Production.Data.Entity.BOMOverheadDetail", b =>
                {
                    b.HasOne("OPUSERP.Production.Data.Entity.BOMMaster", "bOMMaster")
                        .WithMany()
                        .HasForeignKey("bOMMasterId");

                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.Ledger", "ledger")
                        .WithMany()
                        .HasForeignKey("ledgerId");

                    b.HasOne("OPUSERP.Production.Data.Entity.OverheadCost", "overheadCost")
                        .WithMany()
                        .HasForeignKey("overheadCostId");
                });

            modelBuilder.Entity("OPUSERP.Production.Data.Entity.ProductionBatch", b =>
                {
                    b.HasOne("OPUSERP.Production.Data.Entity.ProductionPlan", "productionPlan")
                        .WithMany()
                        .HasForeignKey("productionPlanId");
                });

            modelBuilder.Entity("OPUSERP.Production.Data.Entity.ProductionDetails", b =>
                {
                    b.HasOne("OPUSERP.Production.Data.Entity.BOMDetail", "bOMDetail")
                        .WithMany()
                        .HasForeignKey("bOMDetailId");

                    b.HasOne("OPUSERP.Production.Data.Entity.ProductionMaster", "production")
                        .WithMany()
                        .HasForeignKey("productionId");
                });

            modelBuilder.Entity("OPUSERP.Production.Data.Entity.ProductionMaster", b =>
                {
                    b.HasOne("OPUSERP.Production.Data.Entity.BOMMaster", "bOM")
                        .WithMany()
                        .HasForeignKey("bOMId");

                    b.HasOne("OPUSERP.Production.Data.Entity.ProductionBatch", "batch")
                        .WithMany()
                        .HasForeignKey("batchId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Organization", "supplier")
                        .WithMany()
                        .HasForeignKey("supplierId");
                });

            modelBuilder.Entity("OPUSERP.Production.Data.Entity.ProductionPlan", b =>
                {
                    b.HasOne("OPUSERP.Production.Data.Entity.BOMMaster", "bOMMaster")
                        .WithMany()
                        .HasForeignKey("bOMMasterId");
                });

            modelBuilder.Entity("OPUSERP.Production.Data.Entity.ProductionRequsitionDetails", b =>
                {
                    b.HasOne("OPUSERP.Production.Data.Entity.BOMDetail", "BOMDetail")
                        .WithMany()
                        .HasForeignKey("BOMDetailId");

                    b.HasOne("OPUSERP.Production.Data.Entity.ProductionRequsitionMaster", "productionRequsitionMaster")
                        .WithMany()
                        .HasForeignKey("productionRequsitionMasterId");
                });

            modelBuilder.Entity("OPUSERP.Production.Data.Entity.ProductionRequsitionMaster", b =>
                {
                    b.HasOne("OPUSERP.Production.Data.Entity.ProductionBatch", "productionBatch")
                        .WithMany()
                        .HasForeignKey("productionBatchId");

                    b.HasOne("OPUSERP.Production.Data.Entity.ProductionPlan", "productionPlan")
                        .WithMany()
                        .HasForeignKey("productionPlanId");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramActivity", b =>
                {
                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramOutPut", "ProgramOutPut")
                        .WithMany()
                        .HasForeignKey("ProgramOutPutId");

                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramMaster", "programMaster")
                        .WithMany()
                        .HasForeignKey("programMasterId");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramActivityProgres", b =>
                {
                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramActivity", "programActivity")
                        .WithMany()
                        .HasForeignKey("programActivityId");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramAddress", b =>
                {
                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramMaster", "programMaster")
                        .WithMany()
                        .HasForeignKey("programMasterId");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramAttachment", b =>
                {
                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramMaster", "programMaster")
                        .WithMany()
                        .HasForeignKey("programMasterId");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramCategory", b =>
                {
                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramMainCategory", "programMainCategory")
                        .WithMany()
                        .HasForeignKey("programMainCategoryId");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramHeadline", b =>
                {
                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramMaster", "programMaster")
                        .WithMany()
                        .HasForeignKey("programMasterId");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramImplementor", b =>
                {
                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramMaster", "programMaster")
                        .WithMany()
                        .HasForeignKey("programMasterId");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramIndicator", b =>
                {
                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramMaster", "programMaster")
                        .WithMany()
                        .HasForeignKey("programMasterId");

                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramOutPut", "programOutPut")
                        .WithMany()
                        .HasForeignKey("programOutPutId");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramLocation", b =>
                {
                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramMaster", "programMaster")
                        .WithMany()
                        .HasForeignKey("programMasterId");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramMaster", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.District", "district")
                        .WithMany()
                        .HasForeignKey("districtId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Division", "division")
                        .WithMany()
                        .HasForeignKey("divisionId");

                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramCategory", "programCategory")
                        .WithMany()
                        .HasForeignKey("programCategoryId");

                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramImpact", "programImpact")
                        .WithMany()
                        .HasForeignKey("programImpactId");

                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramYear", "programYear")
                        .WithMany()
                        .HasForeignKey("programYearId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Thana", "thana")
                        .WithMany()
                        .HasForeignKey("thanaId");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramOutCome", b =>
                {
                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramMaster", "programMaster")
                        .WithMany()
                        .HasForeignKey("programMasterId");

                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramStatus", "programStatus")
                        .WithMany()
                        .HasForeignKey("programStatusId");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramOutComeProgres", b =>
                {
                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramOutCome", "programOutCome")
                        .WithMany()
                        .HasForeignKey("programOutComeId");

                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramStatus", "programStatus")
                        .WithMany()
                        .HasForeignKey("programStatusId");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramOutPut", b =>
                {
                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramMaster", "programMaster")
                        .WithMany()
                        .HasForeignKey("programMasterId");

                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramOutCome", "programOutCome")
                        .WithMany()
                        .HasForeignKey("programOutComeId");

                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramStatus", "programStatus")
                        .WithMany()
                        .HasForeignKey("programStatusId");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramOutPutProgres", b =>
                {
                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramOutPut", "programOutPut")
                        .WithMany()
                        .HasForeignKey("programOutPutId");

                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramStatus", "programStatus")
                        .WithMany()
                        .HasForeignKey("programStatusId");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramPeopleAttendee", b =>
                {
                    b.HasOne("OPUSERP.Programs.Data.Entity.BenificiaryActiveType", "benificiaryActiveType")
                        .WithMany()
                        .HasForeignKey("benificiaryActiveTypeId");

                    b.HasOne("OPUSERP.Programs.Data.Entity.BenificiaryType", "benificiaryType")
                        .WithMany()
                        .HasForeignKey("benificiaryTypeId");

                    b.HasOne("OPUSERP.Programs.Data.Entity.DateRange", "dateRange")
                        .WithMany()
                        .HasForeignKey("dateRangeId");

                    b.HasOne("OPUSERP.Programs.Data.Entity.Gender", "gender")
                        .WithMany()
                        .HasForeignKey("genderId");

                    b.HasOne("OPUSERP.Programs.Data.Entity.IdType", "idType")
                        .WithMany()
                        .HasForeignKey("idTypeId");

                    b.HasOne("OPUSERP.Programs.Data.Entity.PeopleType", "peopleType")
                        .WithMany()
                        .HasForeignKey("peopleTypeId");

                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramActivity", "programActivity")
                        .WithMany()
                        .HasForeignKey("programActivityId");

                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramMaster", "programMaster")
                        .WithMany()
                        .HasForeignKey("programMasterId");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramPeopleInDiscussion", b =>
                {
                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramMaster", "programMaster")
                        .WithMany()
                        .HasForeignKey("programMasterId");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramPlanLocation", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.District", "district")
                        .WithMany()
                        .HasForeignKey("districtId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Division", "division")
                        .WithMany()
                        .HasForeignKey("divisionId");

                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramActivity", "programActivity")
                        .WithMany()
                        .HasForeignKey("programActivityId");

                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramYear", "programYear")
                        .WithMany()
                        .HasForeignKey("programYearId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Thana", "thana")
                        .WithMany()
                        .HasForeignKey("thanaId");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramSourceFund", b =>
                {
                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramMaster", "programMaster")
                        .WithMany()
                        .HasForeignKey("programMasterId");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramSourceFundApprove", b =>
                {
                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramMaster", "programMaster")
                        .WithMany()
                        .HasForeignKey("programMasterId");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramSubject", b =>
                {
                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramMaster", "programMaster")
                        .WithMany()
                        .HasForeignKey("programMasterId");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramViewer", b =>
                {
                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramMaster", "programMaster")
                        .WithMany()
                        .HasForeignKey("programMasterId");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.ProgramWorkPlan", b =>
                {
                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramActivity", "programActivity")
                        .WithMany()
                        .HasForeignKey("programActivityId");

                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramYear", "programYear")
                        .WithMany()
                        .HasForeignKey("programYearId");
                });

            modelBuilder.Entity("OPUSERP.Programs.Data.Entity.programPlan", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.District", "district")
                        .WithMany()
                        .HasForeignKey("districtId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Division", "division")
                        .WithMany()
                        .HasForeignKey("divisionId");

                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramCategory", "programCategory")
                        .WithMany()
                        .HasForeignKey("programCategoryId");

                    b.HasOne("OPUSERP.Programs.Data.Entity.ProgramYear", "programYear")
                        .WithMany()
                        .HasForeignKey("programYearId");
                });

            modelBuilder.Entity("OPUSERP.Purchase.Data.Entity.BillPaymentDetail", b =>
                {
                    b.HasOne("OPUSERP.Purchase.Data.Entity.BillPaymentMaster", "billPaymentMaster")
                        .WithMany()
                        .HasForeignKey("billPaymentMasterId");

                    b.HasOne("OPUSERP.Purchase.Data.Entity.BillReceiveInformation", "billReceiveInformation")
                        .WithMany()
                        .HasForeignKey("billReceiveInformationId");
                });

            modelBuilder.Entity("OPUSERP.Purchase.Data.Entity.BillPaymentMaster", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.PaymentMode", "paymentMode")
                        .WithMany()
                        .HasForeignKey("paymentModeId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Supplier.Organization", "relSupplierCustomerResourse")
                        .WithMany()
                        .HasForeignKey("relSupplierCustomerResourseId");
                });

            modelBuilder.Entity("OPUSERP.Purchase.Data.Entity.BillReceiveInformation", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.PaymentMode", "paymentMode")
                        .WithMany()
                        .HasForeignKey("paymentModeId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.PurchaseOrderMaster", "purchaseOrderMaster")
                        .WithMany()
                        .HasForeignKey("purchaseOrderMasterId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Supplier.Organization", "relSupplierCustomerResourse")
                        .WithMany()
                        .HasForeignKey("relSupplierCustomerResourseId");
                });

            modelBuilder.Entity("OPUSERP.Purchase.Data.Entity.PurchaseOrdersDetail", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.Currency", "currency")
                        .WithMany()
                        .HasForeignKey("currencyId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", "itemSpecification")
                        .WithMany()
                        .HasForeignKey("itemSpecificationId");

                    b.HasOne("OPUSERP.Purchase.Data.Entity.PurchaseOrdersMaster", "purchase")
                        .WithMany()
                        .HasForeignKey("purchaseId");
                });

            modelBuilder.Entity("OPUSERP.Purchase.Data.Entity.PurchaseOrdersMaster", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.Supplier.Organization", "relSupplierCustomerResourse")
                        .WithMany()
                        .HasForeignKey("relSupplierCustomerResourseId");
                });

            modelBuilder.Entity("OPUSERP.Purchase.Data.Entity.PurchaseReturnInfoDetail", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.PurchaseOrderDetails", "purchaseOrdersDetail")
                        .WithMany()
                        .HasForeignKey("purchaseOrdersDetailId");

                    b.HasOne("OPUSERP.Purchase.Data.Entity.PurchaseReturnInfoMaster", "purchaseReturnInfoMaster")
                        .WithMany()
                        .HasForeignKey("purchaseReturnInfoMasterId");
                });

            modelBuilder.Entity("OPUSERP.Purchase.Data.Entity.PurchaseReturnInfoMaster", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.PurchaseOrderMaster", "purchaseOrdersMaster")
                        .WithMany()
                        .HasForeignKey("purchaseOrdersMasterId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Supplier.Organization", "relSupplierCustomerResourse")
                        .WithMany()
                        .HasForeignKey("relSupplierCustomerResourseId");

                    b.HasOne("OPUSERP.POS.Data.Entity.Store", "store")
                        .WithMany()
                        .HasForeignKey("storeId");
                });

            modelBuilder.Entity("OPUSERP.Purchase.Data.Entity.TransferDetail", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", "itemSpecification")
                        .WithMany()
                        .HasForeignKey("itemSpecificationId");

                    b.HasOne("OPUSERP.Purchase.Data.Entity.TransferMaster", "transferMaster")
                        .WithMany()
                        .HasForeignKey("transferMasterId");
                });

            modelBuilder.Entity("OPUSERP.Purchase.Data.Entity.TransferMaster", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");

                    b.HasOne("OPUSERP.POS.Data.Entity.Store", "storeFrom")
                        .WithMany()
                        .HasForeignKey("storeFromId");

                    b.HasOne("OPUSERP.POS.Data.Entity.Store", "storeTo")
                        .WithMany()
                        .HasForeignKey("storeToId");
                });

            modelBuilder.Entity("OPUSERP.REMS.Data.Entity.ClaimAssign", b =>
                {
                    b.HasOne("OPUSERP.REMS.Data.Entity.AssignType", "assignType")
                        .WithMany()
                        .HasForeignKey("assignTypeId");

                    b.HasOne("OPUSERP.REMS.Data.Entity.ClaimRegister", "claim")
                        .WithMany()
                        .HasForeignKey("claimId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Supplier.Organization", "organization")
                        .WithMany()
                        .HasForeignKey("organizationId");
                });

            modelBuilder.Entity("OPUSERP.REMS.Data.Entity.ClaimAttachment", b =>
                {
                    b.HasOne("OPUSERP.REMS.Data.Entity.ClaimRegister", "claim")
                        .WithMany()
                        .HasForeignKey("claimId");
                });

            modelBuilder.Entity("OPUSERP.REMS.Data.Entity.ClaimBillInformation", b =>
                {
                    b.HasOne("OPUSERP.REMS.Data.Entity.ClaimRegister", "claim")
                        .WithMany()
                        .HasForeignKey("claimId");
                });

            modelBuilder.Entity("OPUSERP.REMS.Data.Entity.ClaimRegister", b =>
                {
                    b.HasOne("OPUSERP.FixedAsset.Data.Entity.AssetRegister.AssetRegistration", "assetRegistration")
                        .WithMany()
                        .HasForeignKey("assetRegistrationId");

                    b.HasOne("OPUSERP.REMS.Data.Entity.ClaimStatusInfo", "status")
                        .WithMany()
                        .HasForeignKey("statusId");
                });

            modelBuilder.Entity("OPUSERP.REMS.Data.Entity.RepairTransactionLog", b =>
                {
                    b.HasOne("OPUSERP.REMS.Data.Entity.ClaimRegister", "claim")
                        .WithMany()
                        .HasForeignKey("claimId");

                    b.HasOne("OPUSERP.REMS.Data.Entity.ClaimStatusInfo", "statusInfo")
                        .WithMany()
                        .HasForeignKey("statusInfoId");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.CandidateInfo", b =>
                {
                    b.HasOne("OPUSERP.Recruitment.Data.Entity.JobRequisition", "jobReq")
                        .WithMany()
                        .HasForeignKey("jobReqId");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.CandidatePhoto", b =>
                {
                    b.HasOne("OPUSERP.Recruitment.Data.Entity.CandidateInfo", "candidate")
                        .WithMany()
                        .HasForeignKey("candidateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.InterviewCalling", b =>
                {
                    b.HasOne("OPUSERP.Recruitment.Data.Entity.CandidateInfo", "candidateInfo")
                        .WithMany()
                        .HasForeignKey("candidateInfoId");

                    b.HasOne("OPUSERP.Recruitment.Data.Entity.JobPost", "jobPost")
                        .WithMany()
                        .HasForeignKey("jobPostId");

                    b.HasOne("OPUSERP.Recruitment.Data.Entity.JobRequisition", "jobRequisition")
                        .WithMany()
                        .HasForeignKey("jobRequisitionId");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.JobPost", b =>
                {
                    b.HasOne("OPUSERP.Recruitment.Data.Entity.JobRequisition", "jobReq")
                        .WithMany()
                        .HasForeignKey("jobReqId");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.JobRequisition", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Department", "department")
                        .WithMany()
                        .HasForeignKey("departmentId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Designation", "designation")
                        .WithMany()
                        .HasForeignKey("designationId");

                    b.HasOne("OPUSERP.Recruitment.Data.Entity.JobSource", "jobSource")
                        .WithMany()
                        .HasForeignKey("jobSourceId");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.RCRTAddress", b =>
                {
                    b.HasOne("OPUSERP.Recruitment.Data.Entity.CandidateInfo", "candidate")
                        .WithMany()
                        .HasForeignKey("candidateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Data.Entity.Master.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryId");

                    b.HasOne("OPUSERP.Data.Entity.Master.District", "district")
                        .WithMany()
                        .HasForeignKey("districtId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Division", "division")
                        .WithMany()
                        .HasForeignKey("divisionId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Thana", "thana")
                        .WithMany()
                        .HasForeignKey("thanaId");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.RCRTEducation", b =>
                {
                    b.HasOne("OPUSERP.Recruitment.Data.Entity.CandidateInfo", "candidate")
                        .WithMany()
                        .HasForeignKey("candidateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Degree", "degree")
                        .WithMany()
                        .HasForeignKey("degreeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Organization", "organization")
                        .WithMany()
                        .HasForeignKey("organizationId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.RelDegreeSubject", "reldegreesubject")
                        .WithMany()
                        .HasForeignKey("reldegreesubjectId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Result", "result")
                        .WithMany()
                        .HasForeignKey("resultId");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.RCRTOtherQualification", b =>
                {
                    b.HasOne("OPUSERP.Recruitment.Data.Entity.CandidateInfo", "candidate")
                        .WithMany()
                        .HasForeignKey("candidateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.OtherQualificationHead", "otherQualificationHead")
                        .WithMany()
                        .HasForeignKey("otherQualificationHeadId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Result", "result")
                        .WithMany()
                        .HasForeignKey("resultId");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.RCRTProfessionalQualification", b =>
                {
                    b.HasOne("OPUSERP.Recruitment.Data.Entity.CandidateInfo", "candidate")
                        .WithMany()
                        .HasForeignKey("candidateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.QualificationHead", "qualificationHead")
                        .WithMany()
                        .HasForeignKey("qualificationHeadId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Result", "result")
                        .WithMany()
                        .HasForeignKey("resultId");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.RCRTTrainingLog", b =>
                {
                    b.HasOne("OPUSERP.Recruitment.Data.Entity.CandidateInfo", "candidate")
                        .WithMany()
                        .HasForeignKey("candidateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Data.Entity.Master.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.TrainingCategory", "trainingCategory")
                        .WithMany()
                        .HasForeignKey("trainingCategoryId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.TrainingInstitute", "trainingInstitute")
                        .WithMany()
                        .HasForeignKey("trainingInstituteId");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.RcrtEmpMembership", b =>
                {
                    b.HasOne("OPUSERP.Recruitment.Data.Entity.CandidateInfo", "candidate")
                        .WithMany()
                        .HasForeignKey("candidateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Membership", "membership")
                        .WithMany()
                        .HasForeignKey("membershipId");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.RcrtPreviousEmployment", b =>
                {
                    b.HasOne("OPUSERP.Recruitment.Data.Entity.CandidateInfo", "candidate")
                        .WithMany()
                        .HasForeignKey("candidateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.HRPMSOrganizationType", "organizationType")
                        .WithMany()
                        .HasForeignKey("organizationTypeId");
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.RcrtPublication", b =>
                {
                    b.HasOne("OPUSERP.Recruitment.Data.Entity.CandidateInfo", "candidate")
                        .WithMany()
                        .HasForeignKey("candidateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.RcrtReference", b =>
                {
                    b.HasOne("OPUSERP.Recruitment.Data.Entity.CandidateInfo", "candidate")
                        .WithMany()
                        .HasForeignKey("candidateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.ResultDetails", b =>
                {
                    b.HasOne("OPUSERP.Recruitment.Data.Entity.ResultMaster", "ResultMaster")
                        .WithMany()
                        .HasForeignKey("ResultMasterId");

                    b.HasOne("OPUSERP.Recruitment.Data.Entity.ExamType", "ExamType")
                        .WithMany()
                        .HasForeignKey("examTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Recruitment.Data.Entity.ResultMaster", b =>
                {
                    b.HasOne("OPUSERP.Recruitment.Data.Entity.CandidateInfo", "candidateInfo")
                        .WithMany()
                        .HasForeignKey("candidateInfoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Recruitment.Data.Entity.JobRequisition", "jobRequisition")
                        .WithMany()
                        .HasForeignKey("jobRequisitionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.Rental.Data.Entity.Sales.RentInvoiceDetail", b =>
                {
                    b.HasOne("OPUSERP.POS.Data.Entity.ItemPriceFixing", "itemPriceFixing")
                        .WithMany()
                        .HasForeignKey("itemPriceFixingId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", "itemSpecication")
                        .WithMany()
                        .HasForeignKey("itemSpecicationId");

                    b.HasOne("OPUSERP.Rental.Data.Entity.Sales.RentInvoiceMaster", "salesInvoiceMaster")
                        .WithMany()
                        .HasForeignKey("salesInvoiceMasterId");
                });

            modelBuilder.Entity("OPUSERP.Rental.Data.Entity.Sales.RentInvoiceMaster", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Leads", "leads")
                        .WithMany()
                        .HasForeignKey("leadsId");

                    b.HasOne("OPUSERP.OtherSales.Data.Entity.Sales.RelSupplierCustomerResourse", "relSupplierCustomerResourse")
                        .WithMany()
                        .HasForeignKey("relSupplierCustomerResourseId");

                    b.HasOne("OPUSERP.Rental.Data.Entity.Sales.RentInvoiceMaster", "rentInvoiceMaster")
                        .WithMany()
                        .HasForeignKey("rentInvoiceMasterId");

                    b.HasOne("OPUSERP.POS.Data.Entity.Store", "store")
                        .WithMany()
                        .HasForeignKey("storeId");
                });

            modelBuilder.Entity("OPUSERP.Rental.Data.Entity.Sales.RentTermsConditions", b =>
                {
                    b.HasOne("OPUSERP.Rental.Data.Entity.Sales.RentInvoiceMaster", "salesInvoiceMaster")
                        .WithMany()
                        .HasForeignKey("salesInvoiceMasterId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Disbarse.DisbarseDetail", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.IOU.IOUMaster", "IOU")
                        .WithMany()
                        .HasForeignKey("IOUId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Disbarse.DisbarseMaster", "Disbarse")
                        .WithMany()
                        .HasForeignKey("disbarseId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.IOU.IOUDetails", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.IOU.IOUMaster", "IOU")
                        .WithMany()
                        .HasForeignKey("IOUId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.Currency", "currency")
                        .WithMany()
                        .HasForeignKey("currencyId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.DeliveryLocation", "deliveryLocation")
                        .WithMany()
                        .HasForeignKey("deliveryLocationId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Requisition.RequisitionDetail", "requisitionDetail")
                        .WithMany()
                        .HasForeignKey("requisitionDetailId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.IOU.IOUMaster", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.Project", "project")
                        .WithMany()
                        .HasForeignKey("projectId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.IOU.IOUPayment", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.IOU.IOUMaster", "IOU")
                        .WithMany()
                        .HasForeignKey("IOUId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.IOU.IOUPaymentMaster", "iOUPaymentMaster")
                        .WithMany()
                        .HasForeignKey("iOUPaymentMasterId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "receiveby")
                        .WithMany()
                        .HasForeignKey("receivebyId");

                    b.HasOne("OPUSERP.Data.Entity.Matrix.StatusInfo", "statusInfo")
                        .WithMany()
                        .HasForeignKey("statusInfoId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.IOU.IOUPaymentMaster", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.Project", "project")
                        .WithMany()
                        .HasForeignKey("projectId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.JobAssign.JobAssignDetail", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.JobAssign.JobAssignMaster", "jobAssign")
                        .WithMany()
                        .HasForeignKey("jobAssignId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.TeamMember", "teamMember")
                        .WithMany()
                        .HasForeignKey("teamMemberId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.JobAssign.JobAssignMaster", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.JobAssign.JobAssignType", "assignType")
                        .WithMany()
                        .HasForeignKey("assignTypeId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Requisition.RequisitionMaster", "requisition")
                        .WithMany()
                        .HasForeignKey("requisitionId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.TeamMaster", "team")
                        .WithMany()
                        .HasForeignKey("teamId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.MasterData.BuyerItemMapping", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemCategory", "itemCategory")
                        .WithMany()
                        .HasForeignKey("itemCategoryId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.MasterData.FeatureItem", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", "itemSpecification")
                        .WithMany()
                        .HasForeignKey("itemSpecificationId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.MasterData.Item", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemType", "itemType")
                        .WithMany()
                        .HasForeignKey("itemTypeId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemCategory", "parent")
                        .WithMany()
                        .HasForeignKey("parentId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.Unit", "unit")
                        .WithMany()
                        .HasForeignKey("unitId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.Item", "Item")
                        .WithMany()
                        .HasForeignKey("itemId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.MasterData.PreferableVendor", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.Supplier.Organization", "organization")
                        .WithMany()
                        .HasForeignKey("organizationId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Requisition.RequisitionDetail", "requisitionDetail")
                        .WithMany()
                        .HasForeignKey("requisitionDetailId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.MasterData.Project", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.SpecialBranchUnit", "specialBranchUnit")
                        .WithMany()
                        .HasForeignKey("specialBranchUnitId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.MasterData.SpecificationCategory", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemCategory", "itemCategory")
                        .WithMany()
                        .HasForeignKey("itemCategoryId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.MasterData.SpecificationDetail", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", "itemSpecification")
                        .WithMany()
                        .HasForeignKey("itemSpecificationId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.SpecificationCategory", "specificationCategory")
                        .WithMany()
                        .HasForeignKey("specificationCategoryId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.MasterData.Supplier", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.OrganizationType", "organizationType")
                        .WithMany()
                        .HasForeignKey("organizationTypeId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.SupplierType", "supplierType")
                        .WithMany()
                        .HasForeignKey("supplierTypeId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.MasterData.TeamMember", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.TeamMaster", "teamMaster")
                        .WithMany()
                        .HasForeignKey("teamMasterId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Matrix.PrintHistory", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseProcess.CSMaster", "cSMaster")
                        .WithMany()
                        .HasForeignKey("cSMasterId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.IOU.IOUMaster", "iOU")
                        .WithMany()
                        .HasForeignKey("iOUId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.IOU.IOUPaymentMaster", "iOUPaymentMaster")
                        .WithMany()
                        .HasForeignKey("iOUPaymentMasterId");

                    b.HasOne("OPUSERP.Data.Entity.Matrix.MatrixType", "matrixType")
                        .WithMany()
                        .HasForeignKey("matrixTypeId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.PurchaseOrderMaster", "purchase")
                        .WithMany()
                        .HasForeignKey("purchaseId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Requisition.RequisitionMaster", "requisition")
                        .WithMany()
                        .HasForeignKey("requisitionId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Stock.StockMaster", "stock")
                        .WithMany()
                        .HasForeignKey("stockId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.ProjectStatus.ActivityWiseDailyProgressDetail", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.ProjectStatus.ActivityWiseItemDetial", "itemDetial")
                        .WithMany()
                        .HasForeignKey("itemDetialId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.ProjectStatus.WorkProgressActivityDescription", "workProgressActivity")
                        .WithMany()
                        .HasForeignKey("workProgressActivityId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.ProjectStatus.ActivityWiseItemDetial", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.ProjectStatus.ProjectLocationActivityDetails", "activityDetails")
                        .WithMany()
                        .HasForeignKey("activityDetailsId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", "itemSpecification")
                        .WithMany()
                        .HasForeignKey("itemSpecificationId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.Unit", "unit")
                        .WithMany()
                        .HasForeignKey("unitId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.ProjectStatus.DailyProgressReport", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.Project", "project")
                        .WithMany()
                        .HasForeignKey("projectId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.ProjectStatus.ProjectConstructionLocation", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.Project", "project")
                        .WithMany()
                        .HasForeignKey("projectId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.ProjectStatus.ProjectGridLocation", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.ProjectStatus.ProjectConstructionLocation", "projectConstructionLocation")
                        .WithMany()
                        .HasForeignKey("projectConstructionLocationId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.ProjectStatus.ProjectLocationActivityDetails", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.ProjectStatus.WorkProgressActivityType", "progressActivityType")
                        .WithMany()
                        .HasForeignKey("progressActivityTypeId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.ProjectStatus.ProjectGridLocation", "projectGridLocation")
                        .WithMany()
                        .HasForeignKey("projectGridLocationId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.Unit", "unit")
                        .WithMany()
                        .HasForeignKey("unitId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.ProjectStatus.ProjectWiseEquipment", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", "itemSpecification")
                        .WithMany()
                        .HasForeignKey("itemSpecificationId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.Project", "project")
                        .WithMany()
                        .HasForeignKey("projectId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.ProjectStatus.SiteConstraint", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.ProjectStatus.DailyProgressReport", "progressReport")
                        .WithMany()
                        .HasForeignKey("progressReportId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.ProjectStatus.SiteEquipment", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", "itemSpecification")
                        .WithMany()
                        .HasForeignKey("itemSpecificationId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.ProjectStatus.DailyProgressReport", "progressReport")
                        .WithMany()
                        .HasForeignKey("progressReportId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.ProjectStatus.SiteManpower", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.ProjectStatus.DailyProgressReport", "progressReport")
                        .WithMany()
                        .HasForeignKey("progressReportId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.ProjectStatus.SiteMaterial", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", "itemSpecification")
                        .WithMany()
                        .HasForeignKey("itemSpecificationId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.ProjectStatus.DailyProgressReport", "progressReport")
                        .WithMany()
                        .HasForeignKey("progressReportId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.ProjectStatus.SiteVisitor", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.ProjectStatus.DailyProgressReport", "progressReport")
                        .WithMany()
                        .HasForeignKey("progressReportId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.ProjectStatus.WorkProgressActivityDescription", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.ProjectStatus.WorkProgressActivityType", "progressActivityType")
                        .WithMany()
                        .HasForeignKey("progressActivityTypeId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.ProjectStatus.DailyProgressReport", "progressReport")
                        .WithMany()
                        .HasForeignKey("progressReportId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.ProjectStatus.ProjectConstructionLocation", "projectConstructionLocation")
                        .WithMany()
                        .HasForeignKey("projectConstructionLocationId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.ProjectStatus.ProjectGridLocation", "projectGridLocation")
                        .WithMany()
                        .HasForeignKey("projectGridLocationId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.PurchaseOrder.PODismissDetail", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.PODismissMaster", "pODismiss")
                        .WithMany()
                        .HasForeignKey("pODismissId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.PurchaseOrderDetails", "purchaseDetails")
                        .WithMany()
                        .HasForeignKey("purchaseDetailsId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.PurchaseOrder.PODismissMaster", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.PurchaseOrderMaster", "purchase")
                        .WithMany()
                        .HasForeignKey("purchaseId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.PurchaseOrder.POTermAndCondition", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.PurchaseOrderMaster", "purchase")
                        .WithMany()
                        .HasForeignKey("purchaseId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.PurchaseOrder.PurchaseOrderDetails", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseProcess.CSDetail", "cSDetail")
                        .WithMany()
                        .HasForeignKey("cSDetailId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.Currency", "currency")
                        .WithMany()
                        .HasForeignKey("currencyId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.DeliveryLocation", "deliveryLocation")
                        .WithMany()
                        .HasForeignKey("deliveryLocationId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", "itemSpecification")
                        .WithMany()
                        .HasForeignKey("itemSpecificationId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.PurchaseOrderMaster", "purchase")
                        .WithMany()
                        .HasForeignKey("purchaseId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.PurchaseOrder.PurchaseOrderMaster", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseProcess.CSMaster", "cSMaster")
                        .WithMany()
                        .HasForeignKey("csMasterId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.DeliveryMode", "deliveryMode")
                        .WithMany()
                        .HasForeignKey("deliveryModeId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.PaymentMode", "paymentMode")
                        .WithMany()
                        .HasForeignKey("paymentModeId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.PaymentTerms", "paymentTerms")
                        .WithMany()
                        .HasForeignKey("paymentTermsId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Supplier.Organization", "supplier")
                        .WithMany()
                        .HasForeignKey("supplierId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.PurchaseProcess.CSDetail", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseProcess.CSMaster", "cSMaster")
                        .WithMany()
                        .HasForeignKey("cSMasterId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseProcess.CSItemCategory", "itemCategory")
                        .WithMany()
                        .HasForeignKey("itemCategoryId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Requisition.RFQReqDetailPrice", "rFQReqDetailPrice")
                        .WithMany()
                        .HasForeignKey("rFQReqDetailPriceId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Requisition.RequisitionDetail", "requisitionDetail")
                        .WithMany()
                        .HasForeignKey("requisitionDetailId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Supplier.Organization", "supplier")
                        .WithMany()
                        .HasForeignKey("supplierId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.PurchaseProcess.CSMaster", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseProcess.ProcurementType", "procurementType")
                        .WithMany()
                        .HasForeignKey("procurementTypeId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseProcess.ProcurementValue", "procurementValue")
                        .WithMany()
                        .HasForeignKey("procurementValueId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Requisition.RFQMaster", "rFQMaster")
                        .WithMany()
                        .HasForeignKey("rFQMasterId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Requisition.RequisitionMaster", "requisition")
                        .WithMany()
                        .HasForeignKey("requisitionId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.PurchaseProcess.Justification", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseProcess.CSMaster", "cSMaster")
                        .WithMany()
                        .HasForeignKey("cSMasterId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseProcess.JustificationType", "justificationType")
                        .WithMany()
                        .HasForeignKey("justificationTypeId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Requisition.DocumentAttachment", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Matrix.MatrixType", "matrixType")
                        .WithMany()
                        .HasForeignKey("matrixTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Requisition.DocumentAttachmentDetail", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", "itemSpecification")
                        .WithMany()
                        .HasForeignKey("itemSpecificationId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Requisition.RequisitionDetail", "requisitionDetail")
                        .WithMany()
                        .HasForeignKey("requisitionDetailId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Requisition.RFQDocumentAttachmentDetail", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.Requisition.RFQPriceMaster", "rFQPriceMaster")
                        .WithMany()
                        .HasForeignKey("rFQPriceMasterId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Requisition.RFQPriceMaster", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.Requisition.RFQMaster", "rFQMaster")
                        .WithMany()
                        .HasForeignKey("rFQMasterId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Supplier.Organization", "supplier")
                        .WithMany()
                        .HasForeignKey("supplierId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Requisition.RFQReqDetail", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.Requisition.RFQMaster", "rFQMaster")
                        .WithMany()
                        .HasForeignKey("rFQMasterId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Requisition.RequisitionDetail", "requisitionDetail")
                        .WithMany()
                        .HasForeignKey("requisitionDetailId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Requisition.RequisitionMaster", "requisitionMaster")
                        .WithMany()
                        .HasForeignKey("requisitionMasterId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Requisition.RFQReqDetailPrice", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.Requisition.RFQPriceMaster", "rFQPriceMaster")
                        .WithMany()
                        .HasForeignKey("rFQPriceMasterId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Requisition.RFQReqDetail", "rFQReqDetail")
                        .WithMany()
                        .HasForeignKey("rFQReqDetailId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Requisition.RFQSupDetail", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.Requisition.RFQMaster", "rFQMaster")
                        .WithMany()
                        .HasForeignKey("rFQMasterId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Supplier.Organization", "supplier")
                        .WithMany()
                        .HasForeignKey("supplierId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Requisition.RequisitionAssignToTeamLead", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.Requisition.RequisitionDetail", "requisitionDetail")
                        .WithMany()
                        .HasForeignKey("requisitionDetailId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Requisition.RequisitionMaster", "requisitionMaster")
                        .WithMany()
                        .HasForeignKey("requisitionMasterId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Requisition.RequisitionDetail", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", "itemSpecification")
                        .WithMany()
                        .HasForeignKey("itemSpecificationId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Requisition.RequisitionMaster", "requisitionMaster")
                        .WithMany()
                        .HasForeignKey("requisitionMasterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.TeamMember", "teamMember")
                        .WithMany()
                        .HasForeignKey("teamMemberId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Requisition.RequisitionMaster", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeinfo")
                        .WithMany()
                        .HasForeignKey("employeeinfoId");

                    b.HasOne("OPUSERP.Accounting.Data.Entity.MasterData.FundSource", "fundSource")
                        .WithMany()
                        .HasForeignKey("fundSourceId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.Project", "project")
                        .WithMany()
                        .HasForeignKey("projectId");

                    b.HasOne("OPUSERP.Data.Entity.Matrix.StatusInfo", "statusInfo")
                        .WithMany()
                        .HasForeignKey("statusInfoId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.TeamMaster", "teamMaster")
                        .WithMany()
                        .HasForeignKey("teamMasterId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Requisition.RequisitionStatusLog", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.Requisition.RequisitionDetail", "requisitionDetail")
                        .WithMany()
                        .HasForeignKey("requisitionDetailId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Requisition.RequisitionMaster", "requisitionMaster")
                        .WithMany()
                        .HasForeignKey("requisitionMasterId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Stock.ItemReqDetails", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.Stock.ItemReqMaster", "itemReqMaster")
                        .WithMany()
                        .HasForeignKey("itemReqMasterId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", "itemspecification")
                        .WithMany()
                        .HasForeignKey("itemspecificationId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Stock.OpeningStock", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", "itemSpecification")
                        .WithMany()
                        .HasForeignKey("itemSpecificationId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Stock.StockDetails", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.IOU.IOUDetails", "iOUDetails")
                        .WithMany()
                        .HasForeignKey("iOUDetailsId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Stock.ItemReqDetails", "itemReqDetails")
                        .WithMany()
                        .HasForeignKey("itemReqDetailsId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", "itemSpecification")
                        .WithMany()
                        .HasForeignKey("itemSpecificationId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.PurchaseOrderDetails", "orderDetails")
                        .WithMany()
                        .HasForeignKey("orderDetailsId");

                    b.HasOne("OPUSERP.Production.Data.Entity.ProductionRequsitionDetails", "productionRequsitionDetails")
                        .WithMany()
                        .HasForeignKey("productionRequsitionDetailsId");

                    b.HasOne("OPUSERP.Purchase.Data.Entity.PurchaseOrdersDetail", "purchaseOrdersDetail")
                        .WithMany()
                        .HasForeignKey("purchaseOrdersDetailId");

                    b.HasOne("OPUSERP.OtherSales.Data.Entity.Sales.SalesInvoiceDetail", "salesInvoiceDetail")
                        .WithMany()
                        .HasForeignKey("salesInvoiceDetailId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Stock.StockMaster", "stockMaster")
                        .WithMany()
                        .HasForeignKey("stockMasterId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.StoreDepartmentType", "storeDepartmentType")
                        .WithMany()
                        .HasForeignKey("storeDepartmentTypeId");

                    b.HasOne("OPUSERP.Purchase.Data.Entity.TransferDetail", "transferDetail")
                        .WithMany()
                        .HasForeignKey("transferDetailId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Stock.StockMaster", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.IOU.IOUMaster", "IOU")
                        .WithMany()
                        .HasForeignKey("IOUId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Stock.ItemReqMaster", "itemReqMaster")
                        .WithMany()
                        .HasForeignKey("itemReqMasterId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Stock.OpeningStock", "openingStock")
                        .WithMany()
                        .HasForeignKey("openingStockId");

                    b.HasOne("OPUSERP.Production.Data.Entity.ProductionRequsitionMaster", "productionRequsition")
                        .WithMany()
                        .HasForeignKey("productionRequsitionId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.PurchaseOrderMaster", "purchase")
                        .WithMany()
                        .HasForeignKey("purchaseId");

                    b.HasOne("OPUSERP.Purchase.Data.Entity.PurchaseOrdersMaster", "purchaseOrdersMaster")
                        .WithMany()
                        .HasForeignKey("purchaseOrdersMasterId");

                    b.HasOne("OPUSERP.POS.Data.Entity.Store", "store")
                        .WithMany()
                        .HasForeignKey("storeId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Supplier.Address", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.AddressType", "addressType")
                        .WithMany()
                        .HasForeignKey("addressTypeId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryId");

                    b.HasOne("OPUSERP.Data.Entity.Master.District", "district")
                        .WithMany()
                        .HasForeignKey("districtId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Division", "division")
                        .WithMany()
                        .HasForeignKey("divisionId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Supplier.Organization", "organization")
                        .WithMany()
                        .HasForeignKey("organizationId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Thana", "thana")
                        .WithMany()
                        .HasForeignKey("thanaId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Supplier.Contact", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.Supplier.Organization", "organization")
                        .WithMany()
                        .HasForeignKey("organizationId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Resource", "resource")
                        .WithMany()
                        .HasForeignKey("resourceId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Supplier.Organization", b =>
                {
                    b.HasOne("OPUSERP.Accounting.Data.Entity.AccountingSettings.Ledger", "ledger")
                        .WithMany()
                        .HasForeignKey("ledgerId");
                });

            modelBuilder.Entity("OPUSERP.SCM.Data.Entity.Supplier.SupplierItemInfo", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.Item", "item")
                        .WithMany()
                        .HasForeignKey("itemId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.Supplier.Organization", "organization")
                        .WithMany()
                        .HasForeignKey("organizationId");
                });

            modelBuilder.Entity("OPUSERP.SEBA.Data.Entity.CustomerProductWarranty", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.ItemSpecification", "itemSpecification")
                        .WithMany()
                        .HasForeignKey("itemSpecificationId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Leads", "leads")
                        .WithMany()
                        .HasForeignKey("leadsId");
                });

            modelBuilder.Entity("OPUSERP.SEBA.Data.Entity.ProblemDetail", b =>
                {
                    b.HasOne("OPUSERP.SEBA.Data.Entity.CustomerProductWarranty", "customerProductWarranty")
                        .WithMany()
                        .HasForeignKey("customerProductWarrantyId");

                    b.HasOne("OPUSERP.SEBA.Data.Entity.ProblemMaster", "problemMaster")
                        .WithMany()
                        .HasForeignKey("problemMasterId");
                });

            modelBuilder.Entity("OPUSERP.Sales.Data.Entity.Collection.RepSalesCollection", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Leads", "leads")
                        .WithMany()
                        .HasForeignKey("leadsId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.PaymentMode", "paymentMode")
                        .WithMany()
                        .HasForeignKey("paymentModeId");

                    b.HasOne("OPUSERP.Sales.Data.Entity.Collection.SalesCollection", "salesCollection")
                        .WithMany()
                        .HasForeignKey("salesCollectionId");
                });

            modelBuilder.Entity("OPUSERP.Sales.Data.Entity.Collection.RepSalesCollectionDetail", b =>
                {
                    b.HasOne("OPUSERP.Sales.Data.Entity.Collection.RepSalesCollection", "repSalesCollection")
                        .WithMany()
                        .HasForeignKey("repSalesCollectionId");

                    b.HasOne("OPUSERP.Sales.Data.Entity.Collection.SalesCollectionDetail", "salesCollectionDetail")
                        .WithMany()
                        .HasForeignKey("salesCollectionDetailId");
                });

            modelBuilder.Entity("OPUSERP.Sales.Data.Entity.Collection.SalesCollection", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Leads", "leads")
                        .WithMany()
                        .HasForeignKey("leadsId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseOrder.PaymentMode", "paymentMode")
                        .WithMany()
                        .HasForeignKey("paymentModeId");
                });

            modelBuilder.Entity("OPUSERP.Sales.Data.Entity.Collection.SalesCollectionDetail", b =>
                {
                    b.HasOne("OPUSERP.Sales.Data.Entity.Collection.SalesCollection", "salesCollection")
                        .WithMany()
                        .HasForeignKey("salesCollectionId");

                    b.HasOne("OPUSERP.Sales.Data.Entity.Sales.SalesInvoiceMaster", "salesInvoiceMaster")
                        .WithMany()
                        .HasForeignKey("salesInvoiceMasterId");
                });

            modelBuilder.Entity("OPUSERP.Sales.Data.Entity.Sales.RepSalesInvoiceDetail", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.AgreementDetails", "agreementDetails")
                        .WithMany()
                        .HasForeignKey("agreementDetailsId");

                    b.HasOne("OPUSERP.Sales.Data.Entity.Sales.RepSalesInvoiceMaster", "repSalesInvoiceMaster")
                        .WithMany()
                        .HasForeignKey("repSalesInvoiceMasterId");

                    b.HasOne("OPUSERP.Sales.Data.Entity.Sales.SalesInvoiceDetail", "salesInvoiceDetail")
                        .WithMany()
                        .HasForeignKey("salesInvoiceDetailId");
                });

            modelBuilder.Entity("OPUSERP.Sales.Data.Entity.Sales.RepSalesInvoiceMaster", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Leads", "leads")
                        .WithMany()
                        .HasForeignKey("leadsId");

                    b.HasOne("OPUSERP.Sales.Data.Entity.Sales.SalesInvoiceMaster", "salesInvoiceMaster")
                        .WithMany()
                        .HasForeignKey("salesInvoiceMasterId");
                });

            modelBuilder.Entity("OPUSERP.Sales.Data.Entity.Sales.SalesInvoiceDetail", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.AgreementDetails", "agreementDetails")
                        .WithMany()
                        .HasForeignKey("agreementDetailsId");

                    b.HasOne("OPUSERP.Sales.Data.Entity.Sales.SalesInvoiceMaster", "salesInvoiceMaster")
                        .WithMany()
                        .HasForeignKey("salesInvoiceMasterId");
                });

            modelBuilder.Entity("OPUSERP.Sales.Data.Entity.Sales.SalesInvoiceMaster", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Leads", "leads")
                        .WithMany()
                        .HasForeignKey("leadsId");
                });

            modelBuilder.Entity("OPUSERP.Shagotom.Data.Entity.Visitor.VisitorEntryDetails", b =>
                {
                    b.HasOne("OPUSERP.Shagotom.Data.Entity.Visitor.VisitorEntryMaster", "visitorEntryMaster")
                        .WithMany()
                        .HasForeignKey("visitorEntryMasterId");
                });

            modelBuilder.Entity("OPUSERP.Shagotom.Data.Entity.Visitor.VisitorEntryMaster", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoId");
                });

            modelBuilder.Entity("OPUSERP.TAMS.Data.Entity.TaskAttachment", b =>
                {
                    b.HasOne("OPUSERP.TAMS.Data.Entity.TaskInformation", "taskInformation")
                        .WithMany()
                        .HasForeignKey("taskInformationId");
                });

            modelBuilder.Entity("OPUSERP.TAMS.Data.Entity.TaskComment", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.TAMS.Data.Entity.TaskInformation", "taskInformation")
                        .WithMany()
                        .HasForeignKey("taskInformationId");
                });

            modelBuilder.Entity("OPUSERP.TAMS.Data.Entity.TaskFollowUp", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.ActivityCategory", "activityCategory")
                        .WithMany()
                        .HasForeignKey("activityCategoryId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.ActivitySession", "activitySession")
                        .WithMany()
                        .HasForeignKey("activitySessionId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.ActivityStatus", "activityStatus")
                        .WithMany()
                        .HasForeignKey("activityStatusId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.ActivityType", "activityType")
                        .WithMany()
                        .HasForeignKey("activityTypeId");

                    b.HasOne("OPUSERP.TAMS.Data.Entity.TaskInformation", "taskInformation")
                        .WithMany()
                        .HasForeignKey("taskInformationId");
                });

            modelBuilder.Entity("OPUSERP.TAMS.Data.Entity.TaskFollower", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.TAMS.Data.Entity.TaskInformation", "taskInformation")
                        .WithMany()
                        .HasForeignKey("taskInformationId");
                });

            modelBuilder.Entity("OPUSERP.TAMS.Data.Entity.TaskHours", b =>
                {
                    b.HasOne("OPUSERP.TAMS.Data.Entity.TaskInformation", "taskInformation")
                        .WithMany()
                        .HasForeignKey("taskInformationId");
                });

            modelBuilder.Entity("OPUSERP.TAMS.Data.Entity.TaskInformation", b =>
                {
                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.ActivityCategory", "activityCategory")
                        .WithMany()
                        .HasForeignKey("activityCategoryId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.ActivitySession", "activitySession")
                        .WithMany()
                        .HasForeignKey("activitySessionId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.ActivityStatus", "activityStatus")
                        .WithMany()
                        .HasForeignKey("activityStatusId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.MasterData.ActivityType", "activityType")
                        .WithMany()
                        .HasForeignKey("activityTypeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeAssign")
                        .WithMany()
                        .HasForeignKey("employeeAssignId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.CRM.Data.Entity.Lead.Leads", "leads")
                        .WithMany()
                        .HasForeignKey("leadsId");

                    b.HasOne("OPUSERP.SEBA.Data.Entity.ProblemMaster", "problemMaster")
                        .WithMany()
                        .HasForeignKey("problemMasterId");

                    b.HasOne("OPUSERP.TAMS.Data.Entity.TaskSection", "taskSection")
                        .WithMany()
                        .HasForeignKey("taskSectionId");
                });

            modelBuilder.Entity("OPUSERP.TAMS.Data.Entity.TaskSection", b =>
                {
                    b.HasOne("OPUSERP.TAMS.Data.Entity.TaskProject", "taskProject")
                        .WithMany()
                        .HasForeignKey("taskProjectId");
                });

            modelBuilder.Entity("OPUSERP.TAMS.Data.Entity.TaskStatusList", b =>
                {
                    b.HasOne("OPUSERP.TAMS.Data.Entity.TaskInformation", "taskInformation")
                        .WithMany()
                        .HasForeignKey("taskInformationId");
                });

            modelBuilder.Entity("OPUSERP.TAMS.Data.Entity.TaskSubtask", b =>
                {
                    b.HasOne("OPUSERP.TAMS.Data.Entity.TaskInformation", "taskInformation")
                        .WithMany()
                        .HasForeignKey("taskInformationId");
                });

            modelBuilder.Entity("OPUSERP.TAMS.Data.Entity.TaskTag", b =>
                {
                    b.HasOne("OPUSERP.TAMS.Data.Entity.TaskInformation", "taskInformation")
                        .WithMany()
                        .HasForeignKey("taskInformationId");
                });

            modelBuilder.Entity("OPUSERP.VEMS.Data.Entity.RegistrationForm.AuthorizedPerson", b =>
                {
                    b.HasOne("OPUSERP.VEMS.Data.Entity.RegistrationForm.RegistrationForm", "registrationForm")
                        .WithMany()
                        .HasForeignKey("registrationFormId");
                });

            modelBuilder.Entity("OPUSERP.VEMS.Data.Entity.RegistrationForm.BankInformation", b =>
                {
                    b.HasOne("OPUSERP.VEMS.Data.Entity.RegistrationForm.RegistrationForm", "registrationForm")
                        .WithMany()
                        .HasForeignKey("registrationFormId");
                });

            modelBuilder.Entity("OPUSERP.VEMS.Data.Entity.RegistrationForm.CompanyInformation", b =>
                {
                    b.HasOne("OPUSERP.VEMS.Data.Entity.RegistrationForm.RegistrationForm", "registrationForm")
                        .WithMany()
                        .HasForeignKey("registrationFormId");
                });

            modelBuilder.Entity("OPUSERP.VEMS.Data.Entity.RegistrationForm.InterestedArea", b =>
                {
                    b.HasOne("OPUSERP.VEMS.Data.Entity.RegistrationForm.RegistrationForm", "registrationForm")
                        .WithMany()
                        .HasForeignKey("registrationFormId");
                });

            modelBuilder.Entity("OPUSERP.VEMS.Data.Entity.RegistrationForm.RegistrationForm", b =>
                {
                    b.HasOne("OPUSERP.SCM.Data.Entity.Supplier.Organization", "organization")
                        .WithMany()
                        .HasForeignKey("organizationId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.PurchaseProcess.CSItemCategory", "procurementCategory")
                        .WithMany()
                        .HasForeignKey("procurementCategoryId");
                });

            modelBuilder.Entity("OPUSERP.VEMS.Data.Entity.RegistrationForm.TopOfficial", b =>
                {
                    b.HasOne("OPUSERP.VEMS.Data.Entity.RegistrationForm.RegistrationForm", "registrationForm")
                        .WithMany()
                        .HasForeignKey("registrationFormId");
                });

            modelBuilder.Entity("OPUSERP.VEMS.Data.Entity.RegistrationForm.VendorAddress", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.AddressType", "addressType")
                        .WithMany()
                        .HasForeignKey("addressTypeId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryId");

                    b.HasOne("OPUSERP.Data.Entity.Master.District", "district")
                        .WithMany()
                        .HasForeignKey("districtId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Division", "division")
                        .WithMany()
                        .HasForeignKey("divisionId");

                    b.HasOne("OPUSERP.VEMS.Data.Entity.RegistrationForm.RegistrationForm", "registrationForm")
                        .WithMany()
                        .HasForeignKey("registrationFormId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Thana", "thana")
                        .WithMany()
                        .HasForeignKey("thanaId");
                });

            modelBuilder.Entity("OPUSERP.VEMS.Data.Entity.RegistrationForm.VendorAttachment", b =>
                {
                    b.HasOne("OPUSERP.VEMS.Data.Entity.RegistrationForm.RegistrationForm", "registrationForm")
                        .WithMany()
                        .HasForeignKey("registrationFormId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Agreement.AgreementCostInformation", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.Agreement.AgreementInformation", "agreement")
                        .WithMany()
                        .HasForeignKey("agreementId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.Master.LimitAmountType", "amountType")
                        .WithMany()
                        .HasForeignKey("amountTypeId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.Agreement.AgreementCostHead", "costHead")
                        .WithMany()
                        .HasForeignKey("costHeadId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.Master.LimitPeriodType", "periodType")
                        .WithMany()
                        .HasForeignKey("periodTypeId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Agreement.AgreementInformation", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.ServiceVehicle.VMSSupplier", "supplier")
                        .WithMany()
                        .HasForeignKey("supplierId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleInformation", "vehicle")
                        .WithMany()
                        .HasForeignKey("vehicleId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.FuelInfo.FuelComment", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.FuelInfo.FuelInformation", "fuelInformation")
                        .WithMany()
                        .HasForeignKey("fuelInformationId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.FuelInfo.FuelDetail", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.FuelInfo.FuelInformation", "fuelInformation")
                        .WithMany()
                        .HasForeignKey("fuelInformationId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.FuelType", "fuelType")
                        .WithMany()
                        .HasForeignKey("fuelTypeId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.FuelInfo.FuelInformation", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.FuelStation.FuelStationInfo", "fuelStationInfo")
                        .WithMany()
                        .HasForeignKey("fuelStationInfoId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleInformation", "vehicleInformation")
                        .WithMany()
                        .HasForeignKey("vehicleInformationId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.FuelStation.FuelStationComment", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.FuelStation.FuelStationInfo", "fuelStationInfo")
                        .WithMany()
                        .HasForeignKey("fuelStationInfoId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.FuelStation.StationFuelInfo", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.FuelStation.FuelStationInfo", "fuelStationInfo")
                        .WithMany()
                        .HasForeignKey("fuelStationInfoId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.FuelType", "fuelType")
                        .WithMany()
                        .HasForeignKey("fuelTypeId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.FuelStation.VMSAddress", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryId");

                    b.HasOne("OPUSERP.Data.Entity.Master.District", "district")
                        .WithMany()
                        .HasForeignKey("districtId");

                    b.HasOne("OPUSERP.Data.Entity.Master.Division", "division")
                        .WithMany()
                        .HasForeignKey("divisionId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.FuelStation.FuelStationInfo", "fuelStationInfo")
                        .WithMany()
                        .HasForeignKey("fuelStationInfoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.Data.Entity.Master.Thana", "thana")
                        .WithMany()
                        .HasForeignKey("thanaId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.FuelStation.VMSContact", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.FuelStation.FuelStationInfo", "fuelStationInfo")
                        .WithMany()
                        .HasForeignKey("fuelStationInfoId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.Master.VMSResource", "resource")
                        .WithMany()
                        .HasForeignKey("resourceID");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Inspection.InspectionDetail", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.Master.InspectionCheckLIstCategory", "inspectionCheckListCategory")
                        .WithMany()
                        .HasForeignKey("inspectionCheckListCategoryId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.Inspection.InspectionMaster", "inspectionMaster")
                        .WithMany()
                        .HasForeignKey("inspectionMasterId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Inspection.InspectionMaster", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleInformation", "vehicleInformation")
                        .WithMany()
                        .HasForeignKey("vehicleInformationId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Inventory.PartsIssueDetails", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.Inventory.PurchasePartsDetail", "partsDetail")
                        .WithMany()
                        .HasForeignKey("partsDetailId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.Inventory.PartsIssueMaster", "partsIssue")
                        .WithMany()
                        .HasForeignKey("partsIssueId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Inventory.PartsIssueMaster", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.Inventory.PurchasePartsMaster", "purchaseParts")
                        .WithMany()
                        .HasForeignKey("purchasePartsId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleInformation", "vehicle")
                        .WithMany()
                        .HasForeignKey("vehicleId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Inventory.PurchasePartsDetail", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.Inventory.PurchasePartsMaster", "purchasePartsMaster")
                        .WithMany()
                        .HasForeignKey("purchasePartsMasterId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Inventory.PurchasePartsMaster", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.CarManagement.SpareParts", "spareParts")
                        .WithMany()
                        .HasForeignKey("sparePartsId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Master.VMSResource", b =>
                {
                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Department", "department")
                        .WithMany()
                        .HasForeignKey("departmentID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Designation", "designation")
                        .WithMany()
                        .HasForeignKey("designationID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Master.Religion", "religion")
                        .WithMany()
                        .HasForeignKey("religionId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.Master.VMSResourceType", "resourceType")
                        .WithMany()
                        .HasForeignKey("resourceTypeId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Requisition.RequisitionComment", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.Requisition.VMSRequisitionMaster", "requisitionMaster")
                        .WithMany()
                        .HasForeignKey("requisitionMasterId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Requisition.VMSRequisitionDetails", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.Requisition.VMSRequisitionMaster", "requisition")
                        .WithMany()
                        .HasForeignKey("requisitionId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Requisition.VMSRequisitionMaster", b =>
                {
                    b.HasOne("OPUSERP.Data.Entity.Master.District", "district")
                        .WithMany()
                        .HasForeignKey("districtId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleType", "vehicleType")
                        .WithMany()
                        .HasForeignKey("vehicleTypeId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.Requisition.VehicleUse", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.Requisition.VMSRequisitionMaster", "requisition")
                        .WithMany()
                        .HasForeignKey("requisitionId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleInformation", "vehicleInformation")
                        .WithMany()
                        .HasForeignKey("vehicleInformationId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.SOR.SORDetails", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.SOR.SORMaster", "sORMaster")
                        .WithMany("SORDetails")
                        .HasForeignKey("sORMasterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OPUSERP.VMS.Data.Entity.CarManagement.SpareParts", "spareParts")
                        .WithMany()
                        .HasForeignKey("sparePartsId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.Supplier", "supplier")
                        .WithMany()
                        .HasForeignKey("supplierId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.ServiceVehicle.ItemStoreInServiceCenter", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.CarManagement.SpareParts", "spareParts")
                        .WithMany()
                        .HasForeignKey("sparePartsId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.ServiceVehicle.VehicleServiceHistory", "vehicleServiceHistory")
                        .WithMany()
                        .HasForeignKey("vehicleServiceHistoryId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.ServiceVehicle.ReminderSchedule", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.ServiceVehicle.VehicleServiceReminder", "vehicleServiceReminder")
                        .WithMany()
                        .HasForeignKey("vehicleServiceReminderId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.ServiceVehicle.ServiceLabel", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.ServiceVehicle.LabelType", "labelType")
                        .WithMany()
                        .HasForeignKey("labelTypeId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.ServiceVehicle.VehicleServiceHistory", "vehicleServiceHistory")
                        .WithMany()
                        .HasForeignKey("vehicleServiceHistoryId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.ServiceVehicle.VehicleLineItem", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.CarManagement.SpareParts", "spareParts")
                        .WithMany()
                        .HasForeignKey("sparePartsId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.ServiceVehicle.VehicleServiceHistory", "vehicleServiceHistory")
                        .WithMany()
                        .HasForeignKey("vehicleServiceHistoryId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.ServiceVehicle.VehicleMaintenanceLimit", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleInformation", "vehicleInformation")
                        .WithMany()
                        .HasForeignKey("vehicleInformationId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.ServiceVehicle.VehicleMaintenanceLimitDetail", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.FuelType", "fuelType")
                        .WithMany()
                        .HasForeignKey("fuelTypeId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.Master.LimitAmountType", "limitAmountType")
                        .WithMany()
                        .HasForeignKey("limitAmountTypeId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.Master.LimitPeriodType", "limitPeriodType")
                        .WithMany()
                        .HasForeignKey("limitPeriodTypeId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.ServiceVehicle.VehicleMaintenanceLimit", "vehicleMaintenanceLimit")
                        .WithMany()
                        .HasForeignKey("vehicleMaintenanceLimitId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.ServiceVehicle.VehicleServiceComment", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.ServiceVehicle.VehicleServiceHistory", "vehicleServiceHistory")
                        .WithMany()
                        .HasForeignKey("vehicleServiceHistoryId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.ServiceVehicle.VehicleServiceHistory", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.ServiceVehicle.VMSSupplier", "supplier")
                        .WithMany()
                        .HasForeignKey("supplierId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleInformation", "vehicleInformation")
                        .WithMany()
                        .HasForeignKey("vehicleInformationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.ServiceVehicle.VehicleServiceIssue", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleInformation", "vehicleInformation")
                        .WithMany()
                        .HasForeignKey("vehicleInformationId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.ServiceVehicle.VehicleServiceIssueComment", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.ServiceVehicle.VehicleServiceIssue", "vehicleServiceIssue")
                        .WithMany()
                        .HasForeignKey("vehicleServiceIssueId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.ServiceVehicle.VehicleServiceReminder", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.CarManagement.SpareParts", "spareParts")
                        .WithMany()
                        .HasForeignKey("sparePartsId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleInformation", "vehicleInformation")
                        .WithMany()
                        .HasForeignKey("vehicleInformationId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.ContactRenewalReminder", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.Master.RenewalType", "renewalType")
                        .WithMany()
                        .HasForeignKey("renewalTypeId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.Supplier", "supplier")
                        .WithMany()
                        .HasForeignKey("supplierId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.LinkedVehicle", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleInformation", "vehicleInformation")
                        .WithMany()
                        .HasForeignKey("vehicleInformationId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.Odometer", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleInformation", "vehicleInformation")
                        .WithMany()
                        .HasForeignKey("vehicleInformationId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleComment", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleInformation", "vehicleInformation")
                        .WithMany()
                        .HasForeignKey("vehicleInformationId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleEngineTransmission", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.Aspiration", "aspiration")
                        .WithMany()
                        .HasForeignKey("aspirationId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.BlockType", "blockType")
                        .WithMany()
                        .HasForeignKey("blockTypeId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.CamType", "camType")
                        .WithMany()
                        .HasForeignKey("camTypeId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.FuelInduction", "fuelInduction")
                        .WithMany()
                        .HasForeignKey("fuelInductionId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.TransmissionType", "transmissionType")
                        .WithMany()
                        .HasForeignKey("transmissionTypeId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleInformation", "vehicleInformation")
                        .WithMany()
                        .HasForeignKey("vehicleInformationId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleFluid", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.FuelType", "fuelType")
                        .WithMany()
                        .HasForeignKey("fuelTypeId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleInformation", "vehicleInformation")
                        .WithMany()
                        .HasForeignKey("vehicleInformationId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleInformation", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleBodySubType", "vehicleBodySubType")
                        .WithMany()
                        .HasForeignKey("vehicleBodySubTypeId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleBodyType", "vehicleBodyType")
                        .WithMany()
                        .HasForeignKey("vehicleBodyTypeId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleGroup", "vehicleGroup")
                        .WithMany()
                        .HasForeignKey("vehicleGroupId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleManufacture", "vehicleManufacture")
                        .WithMany()
                        .HasForeignKey("vehicleManufactureId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleModel", "vehicleModel")
                        .WithMany()
                        .HasForeignKey("vehicleModelId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleOwnership", "vehicleOwnership")
                        .WithMany()
                        .HasForeignKey("vehicleOwnershipId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleStatus", "vehicleStatus")
                        .WithMany()
                        .HasForeignKey("vehicleStatusId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleType", "vehicleType")
                        .WithMany()
                        .HasForeignKey("vehicleTypeId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleRenewalReminder", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.Master.RenewalType", "renewalType")
                        .WithMany()
                        .HasForeignKey("renewalTypeId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleInformation", "vehicleInformation")
                        .WithMany()
                        .HasForeignKey("vehicleInformationId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleSetting", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.MeterType", "meterType")
                        .WithMany()
                        .HasForeignKey("meterTypeId");

                    b.HasOne("OPUSERP.SCM.Data.Entity.MasterData.Unit", "unit")
                        .WithMany()
                        .HasForeignKey("unitId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleInformation", "vehicleInformation")
                        .WithMany()
                        .HasForeignKey("vehicleInformationId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleSpecification", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleInformation", "vehicleInformation")
                        .WithMany()
                        .HasForeignKey("vehicleInformationId");
                });

            modelBuilder.Entity("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleWheelTire", b =>
                {
                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.BrakeSystem", "brakeSystem")
                        .WithMany()
                        .HasForeignKey("brakeSystemId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.DriveType", "driveType")
                        .WithMany()
                        .HasForeignKey("driveTypeId");

                    b.HasOne("OPUSERP.VMS.Data.Entity.VehicleInfo.VehicleInformation", "vehicleInformation")
                        .WithMany()
                        .HasForeignKey("vehicleInformationId");
                });

            modelBuilder.Entity("OPUSERP.Workflow.Data.Entity.Doc", b =>
                {
                    b.HasOne("OPUSERP.Workflow.Data.Entity.Doc", "doc")
                        .WithMany()
                        .HasForeignKey("docId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");
                });

            modelBuilder.Entity("OPUSERP.Workflow.Data.Entity.DocAttachment", b =>
                {
                    b.HasOne("OPUSERP.Workflow.Data.Entity.Doc", "doc")
                        .WithMany()
                        .HasForeignKey("docId");
                });

            modelBuilder.Entity("OPUSERP.Workflow.Data.Entity.DocRoute", b =>
                {
                    b.HasOne("OPUSERP.Workflow.Data.Entity.ActionInfo", "action")
                        .WithMany()
                        .HasForeignKey("actionId");

                    b.HasOne("OPUSERP.Workflow.Data.Entity.Doc", "doc")
                        .WithMany()
                        .HasForeignKey("docId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employeeReplace")
                        .WithMany()
                        .HasForeignKey("employeeReplaceId");
                });

            modelBuilder.Entity("OPUSERP.Workflow.Data.Entity.DraftAttachment", b =>
                {
                    b.HasOne("OPUSERP.Workflow.Data.Entity.DraftDoc", "draftDoc")
                        .WithMany()
                        .HasForeignKey("draftDocId");
                });

            modelBuilder.Entity("OPUSERP.Workflow.Data.Entity.DraftDoc", b =>
                {
                    b.HasOne("OPUSERP.Workflow.Data.Entity.Doc", "doc")
                        .WithMany()
                        .HasForeignKey("docId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");
                });

            modelBuilder.Entity("OPUSERP.Workflow.Data.Entity.DraftRouting", b =>
                {
                    b.HasOne("OPUSERP.Workflow.Data.Entity.DraftDoc", "draftDoc")
                        .WithMany()
                        .HasForeignKey("draftDocId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");
                });

            modelBuilder.Entity("OPUSERP.Workflow.Data.Entity.ReviewRoute", b =>
                {
                    b.HasOne("OPUSERP.Workflow.Data.Entity.ActionInfo", "action")
                        .WithMany()
                        .HasForeignKey("actionId");

                    b.HasOne("OPUSERP.Workflow.Data.Entity.DocRoute", "docRoute")
                        .WithMany()
                        .HasForeignKey("docRouteId");

                    b.HasOne("OPUSERP.HRPMS.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");
                });
#pragma warning restore 612, 618
        }
    }
}
